; ModuleID = '../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_i2c.c'
source_filename = "../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_i2c.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv8m.main-none-unknown-eabi"

%struct.__I2C_HandleTypeDef = type { %struct.I2C_TypeDef*, %struct.I2C_InitTypeDef, i8*, i16, i16, i32, i32, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)*, %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef*, i8, i8, i8, i32, i32 }
%struct.I2C_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.I2C_InitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__DMA_HandleTypeDef = type { %struct.DMA_Channel_TypeDef*, %struct.DMA_InitTypeDef, i8, i8, i8*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)*, i32, %struct.DMA_TypeDef*, i32, %struct.DMAMUX_Channel_TypeDef*, %struct.DMAMUX_ChannelStatus_TypeDef*, i32, %struct.DMAMUX_RequestGen_TypeDef*, %struct.DMAMUX_RequestGenStatus_TypeDef*, i32 }
%struct.DMA_Channel_TypeDef = type { i32, i32, i32, i32, i32 }
%struct.DMA_InitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DMA_TypeDef = type { i32, i32 }
%struct.DMAMUX_Channel_TypeDef = type { i32 }
%struct.DMAMUX_ChannelStatus_TypeDef = type { i32, i32 }
%struct.DMAMUX_RequestGen_TypeDef = type { i32 }
%struct.DMAMUX_RequestGenStatus_TypeDef = type { i32, i32 }

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Init(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !8 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !10
  %cmp = icmp eq %struct.__I2C_HandleTypeDef* %0, null, !dbg !11
  br i1 %cmp, label %if.then, label %if.end, !dbg !10

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !12
  br label %return, !dbg !12

if.end:                                           ; preds = %entry
  %1 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !13
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %1, i32 0, i32 11, !dbg !14
  %2 = load volatile i8, i8* %State, align 1, !dbg !14
  %conv = zext i8 %2 to i32, !dbg !13
  %cmp1 = icmp eq i32 %conv, 0, !dbg !15
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !13

if.then3:                                         ; preds = %if.end
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !16
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 10, !dbg !17
  store i8 0, i8* %Lock, align 4, !dbg !18
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !19
  call arm_aapcs_vfpcc void @HAL_I2C_MspInit(%struct.__I2C_HandleTypeDef* %4), !dbg !20
  br label %if.end4, !dbg !21

if.end4:                                          ; preds = %if.then3, %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !22
  %State5 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 11, !dbg !23
  store volatile i8 36, i8* %State5, align 1, !dbg !24
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !25
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 0, !dbg !25
  %7 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !25
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %7, i32 0, i32 0, !dbg !25
  %8 = load volatile i32, i32* %CR1, align 4, !dbg !25
  %and = and i32 %8, -2, !dbg !25
  store volatile i32 %and, i32* %CR1, align 4, !dbg !25
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !26
  %Init = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 1, !dbg !27
  %Timing = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init, i32 0, i32 0, !dbg !28
  %10 = load i32, i32* %Timing, align 4, !dbg !28
  %and6 = and i32 %10, -251658241, !dbg !29
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !30
  %Instance7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 0, !dbg !31
  %12 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance7, align 4, !dbg !31
  %TIMINGR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %12, i32 0, i32 4, !dbg !32
  store volatile i32 %and6, i32* %TIMINGR, align 4, !dbg !33
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !34
  %Instance8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 0, !dbg !35
  %14 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance8, align 4, !dbg !35
  %OAR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %14, i32 0, i32 2, !dbg !36
  %15 = load volatile i32, i32* %OAR1, align 4, !dbg !37
  %and9 = and i32 %15, -32769, !dbg !37
  store volatile i32 %and9, i32* %OAR1, align 4, !dbg !37
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !38
  %Init10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 1, !dbg !39
  %AddressingMode = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init10, i32 0, i32 2, !dbg !40
  %17 = load i32, i32* %AddressingMode, align 4, !dbg !40
  %cmp11 = icmp eq i32 %17, 1, !dbg !41
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !38

if.then13:                                        ; preds = %if.end4
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !42
  %Init14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 1, !dbg !43
  %OwnAddress1 = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init14, i32 0, i32 1, !dbg !44
  %19 = load i32, i32* %OwnAddress1, align 4, !dbg !44
  %or = or i32 32768, %19, !dbg !45
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !46
  %Instance15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 0, !dbg !47
  %21 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance15, align 4, !dbg !47
  %OAR116 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %21, i32 0, i32 2, !dbg !48
  store volatile i32 %or, i32* %OAR116, align 4, !dbg !49
  br label %if.end22, !dbg !50

if.else:                                          ; preds = %if.end4
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !51
  %Init17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 1, !dbg !52
  %OwnAddress118 = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init17, i32 0, i32 1, !dbg !53
  %23 = load i32, i32* %OwnAddress118, align 4, !dbg !53
  %or19 = or i32 33792, %23, !dbg !54
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !55
  %Instance20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 0, !dbg !56
  %25 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance20, align 4, !dbg !56
  %OAR121 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %25, i32 0, i32 2, !dbg !57
  store volatile i32 %or19, i32* %OAR121, align 4, !dbg !58
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then13
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !59
  %Init23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 1, !dbg !60
  %AddressingMode24 = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init23, i32 0, i32 2, !dbg !61
  %27 = load i32, i32* %AddressingMode24, align 4, !dbg !61
  %cmp25 = icmp eq i32 %27, 2, !dbg !62
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !59

if.then27:                                        ; preds = %if.end22
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !63
  %Instance28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 0, !dbg !64
  %29 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance28, align 4, !dbg !64
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %29, i32 0, i32 1, !dbg !65
  store volatile i32 2048, i32* %CR2, align 4, !dbg !66
  br label %if.end29, !dbg !67

if.end29:                                         ; preds = %if.then27, %if.end22
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !68
  %Instance30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 0, !dbg !69
  %31 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance30, align 4, !dbg !69
  %CR231 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %31, i32 0, i32 1, !dbg !70
  %32 = load volatile i32, i32* %CR231, align 4, !dbg !71
  %or32 = or i32 %32, 33587200, !dbg !71
  store volatile i32 %or32, i32* %CR231, align 4, !dbg !71
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !72
  %Instance33 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 0, !dbg !73
  %34 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance33, align 4, !dbg !73
  %OAR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %34, i32 0, i32 3, !dbg !74
  %35 = load volatile i32, i32* %OAR2, align 4, !dbg !75
  %and34 = and i32 %35, -32769, !dbg !75
  store volatile i32 %and34, i32* %OAR2, align 4, !dbg !75
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !76
  %Init35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 1, !dbg !77
  %DualAddressMode = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init35, i32 0, i32 3, !dbg !78
  %37 = load i32, i32* %DualAddressMode, align 4, !dbg !78
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !79
  %Init36 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 1, !dbg !80
  %OwnAddress2 = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init36, i32 0, i32 4, !dbg !81
  %39 = load i32, i32* %OwnAddress2, align 4, !dbg !81
  %or37 = or i32 %37, %39, !dbg !82
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !83
  %Init38 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 1, !dbg !84
  %OwnAddress2Masks = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init38, i32 0, i32 5, !dbg !85
  %41 = load i32, i32* %OwnAddress2Masks, align 4, !dbg !85
  %shl = shl i32 %41, 8, !dbg !86
  %or39 = or i32 %or37, %shl, !dbg !87
  %42 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !88
  %Instance40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %42, i32 0, i32 0, !dbg !89
  %43 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance40, align 4, !dbg !89
  %OAR241 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %43, i32 0, i32 3, !dbg !90
  store volatile i32 %or39, i32* %OAR241, align 4, !dbg !91
  %44 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !92
  %Init42 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %44, i32 0, i32 1, !dbg !93
  %GeneralCallMode = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init42, i32 0, i32 6, !dbg !94
  %45 = load i32, i32* %GeneralCallMode, align 4, !dbg !94
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !95
  %Init43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %46, i32 0, i32 1, !dbg !96
  %NoStretchMode = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init43, i32 0, i32 7, !dbg !97
  %47 = load i32, i32* %NoStretchMode, align 4, !dbg !97
  %or44 = or i32 %45, %47, !dbg !98
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !99
  %Instance45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 0, !dbg !100
  %49 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance45, align 4, !dbg !100
  %CR146 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %49, i32 0, i32 0, !dbg !101
  store volatile i32 %or44, i32* %CR146, align 4, !dbg !102
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !103
  %Instance47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 0, !dbg !103
  %51 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance47, align 4, !dbg !103
  %CR148 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %51, i32 0, i32 0, !dbg !103
  %52 = load volatile i32, i32* %CR148, align 4, !dbg !103
  %or49 = or i32 %52, 1, !dbg !103
  store volatile i32 %or49, i32* %CR148, align 4, !dbg !103
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !104
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 13, !dbg !105
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !106
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !107
  %State50 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 11, !dbg !108
  store volatile i8 32, i8* %State50, align 1, !dbg !109
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !110
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 6, !dbg !111
  store volatile i32 0, i32* %PreviousState, align 4, !dbg !112
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !113
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 12, !dbg !114
  store volatile i8 0, i8* %Mode, align 2, !dbg !115
  store i8 0, i8* %retval, align 1, !dbg !116
  br label %return, !dbg !116

return:                                           ; preds = %if.end29, %if.then
  %57 = load i8, i8* %retval, align 1, !dbg !117
  ret i8 %57, !dbg !117
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_MspInit(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !118 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !119
  ret void, !dbg !120
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_DeInit(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !121 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !122
  %cmp = icmp eq %struct.__I2C_HandleTypeDef* %0, null, !dbg !123
  br i1 %cmp, label %if.then, label %if.end, !dbg !122

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !124
  br label %return, !dbg !124

if.end:                                           ; preds = %entry
  %1 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !125
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %1, i32 0, i32 11, !dbg !126
  store volatile i8 36, i8* %State, align 1, !dbg !127
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !128
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 0, !dbg !128
  %3 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !128
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %3, i32 0, i32 0, !dbg !128
  %4 = load volatile i32, i32* %CR1, align 4, !dbg !128
  %and = and i32 %4, -2, !dbg !128
  store volatile i32 %and, i32* %CR1, align 4, !dbg !128
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !129
  call arm_aapcs_vfpcc void @HAL_I2C_MspDeInit(%struct.__I2C_HandleTypeDef* %5), !dbg !130
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !131
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 13, !dbg !132
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !133
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !134
  %State1 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 11, !dbg !135
  store volatile i8 0, i8* %State1, align 1, !dbg !136
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !137
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 6, !dbg !138
  store volatile i32 0, i32* %PreviousState, align 4, !dbg !139
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !140
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 12, !dbg !141
  store volatile i8 0, i8* %Mode, align 2, !dbg !142
  br label %do.body, !dbg !143

do.body:                                          ; preds = %if.end
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !143
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 10, !dbg !143
  store i8 0, i8* %Lock, align 4, !dbg !143
  br label %do.end, !dbg !143

do.end:                                           ; preds = %do.body
  store i8 0, i8* %retval, align 1, !dbg !144
  br label %return, !dbg !144

return:                                           ; preds = %do.end, %if.then
  %11 = load i8, i8* %retval, align 1, !dbg !145
  ret i8 %11, !dbg !145
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_MspDeInit(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !146 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !147
  ret void, !dbg !148
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Transmit(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size, i32 %Timeout) #0 !dbg !149 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %Timeout.addr = alloca i32, align 4
  %tickstart = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %Timeout, i32* %Timeout.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !150
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !151
  %1 = load volatile i8, i8* %State, align 1, !dbg !151
  %conv = zext i8 %1 to i32, !dbg !150
  %cmp = icmp eq i32 %conv, 32, !dbg !152
  br i1 %cmp, label %if.then, label %if.else86, !dbg !150

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !153

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !153
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !153
  %3 = load i8, i8* %Lock, align 4, !dbg !153
  %conv2 = zext i8 %3 to i32, !dbg !153
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !153
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !153

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !153
  br label %return, !dbg !153

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !153
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !153
  store i8 1, i8* %Lock6, align 4, !dbg !153
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !153

do.end:                                           ; preds = %if.end
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !154
  store i32 %call, i32* %tickstart, align 4, !dbg !155
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !156
  %6 = load i32, i32* %tickstart, align 4, !dbg !157
  %call7 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %5, i32 32768, i8 zeroext 1, i32 25, i32 %6), !dbg !158
  %conv8 = zext i8 %call7 to i32, !dbg !158
  %cmp9 = icmp ne i32 %conv8, 0, !dbg !159
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !158

if.then11:                                        ; preds = %do.end
  store i8 1, i8* %retval, align 1, !dbg !160
  br label %return, !dbg !160

if.end12:                                         ; preds = %do.end
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !161
  %State13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 11, !dbg !162
  store volatile i8 33, i8* %State13, align 1, !dbg !163
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !164
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 12, !dbg !165
  store volatile i8 16, i8* %Mode, align 2, !dbg !166
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !167
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 13, !dbg !168
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !169
  %10 = load i8*, i8** %pData.addr, align 4, !dbg !170
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !171
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 2, !dbg !172
  store i8* %10, i8** %pBuffPtr, align 4, !dbg !173
  %12 = load i16, i16* %Size.addr, align 2, !dbg !174
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !175
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 4, !dbg !176
  store volatile i16 %12, i16* %XferCount, align 2, !dbg !177
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !178
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 7, !dbg !179
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !180
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !181
  %XferCount14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !182
  %16 = load volatile i16, i16* %XferCount14, align 2, !dbg !182
  %conv15 = zext i16 %16 to i32, !dbg !181
  %cmp16 = icmp ugt i32 %conv15, 255, !dbg !183
  br i1 %cmp16, label %if.then18, label %if.else21, !dbg !181

if.then18:                                        ; preds = %if.end12
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !184
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !185
  store i16 255, i16* %XferSize, align 4, !dbg !186
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !187
  %19 = load i16, i16* %DevAddress.addr, align 2, !dbg !188
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !189
  %XferSize19 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !190
  %21 = load i16, i16* %XferSize19, align 4, !dbg !190
  %conv20 = trunc i16 %21 to i8, !dbg !191
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %18, i16 zeroext %19, i8 zeroext %conv20, i32 16777216, i32 -2147475456), !dbg !192
  br label %if.end26, !dbg !193

if.else21:                                        ; preds = %if.end12
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !194
  %XferCount22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 4, !dbg !195
  %23 = load volatile i16, i16* %XferCount22, align 2, !dbg !195
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !196
  %XferSize23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 3, !dbg !197
  store i16 %23, i16* %XferSize23, align 4, !dbg !198
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !199
  %26 = load i16, i16* %DevAddress.addr, align 2, !dbg !200
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !201
  %XferSize24 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 3, !dbg !202
  %28 = load i16, i16* %XferSize24, align 4, !dbg !202
  %conv25 = trunc i16 %28 to i8, !dbg !203
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %25, i16 zeroext %26, i8 zeroext %conv25, i32 33554432, i32 -2147475456), !dbg !204
  br label %if.end26

if.end26:                                         ; preds = %if.else21, %if.then18
  br label %while.cond, !dbg !205

while.cond:                                       ; preds = %if.end72, %if.end26
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !206
  %XferCount27 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 4, !dbg !207
  %30 = load volatile i16, i16* %XferCount27, align 2, !dbg !207
  %conv28 = zext i16 %30 to i32, !dbg !206
  %cmp29 = icmp ugt i32 %conv28, 0, !dbg !208
  br i1 %cmp29, label %while.body, label %while.end, !dbg !205

while.body:                                       ; preds = %while.cond
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !209
  %32 = load i32, i32* %Timeout.addr, align 4, !dbg !210
  %33 = load i32, i32* %tickstart, align 4, !dbg !211
  %call31 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnTXISFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %31, i32 %32, i32 %33), !dbg !212
  %conv32 = zext i8 %call31 to i32, !dbg !212
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !213
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !212

if.then35:                                        ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !214
  br label %return, !dbg !214

if.end36:                                         ; preds = %while.body
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !215
  %pBuffPtr37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 2, !dbg !216
  %35 = load i8*, i8** %pBuffPtr37, align 4, !dbg !216
  %36 = load i8, i8* %35, align 1, !dbg !217
  %conv38 = zext i8 %36 to i32, !dbg !217
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !218
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 0, !dbg !219
  %38 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !219
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %38, i32 0, i32 10, !dbg !220
  store volatile i32 %conv38, i32* %TXDR, align 4, !dbg !221
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !222
  %pBuffPtr39 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 2, !dbg !223
  %40 = load i8*, i8** %pBuffPtr39, align 4, !dbg !224
  %incdec.ptr = getelementptr inbounds i8, i8* %40, i32 1, !dbg !224
  store i8* %incdec.ptr, i8** %pBuffPtr39, align 4, !dbg !224
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !225
  %XferCount40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 4, !dbg !226
  %42 = load volatile i16, i16* %XferCount40, align 2, !dbg !227
  %dec = add i16 %42, -1, !dbg !227
  store volatile i16 %dec, i16* %XferCount40, align 2, !dbg !227
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !228
  %XferSize41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 3, !dbg !229
  %44 = load i16, i16* %XferSize41, align 4, !dbg !230
  %dec42 = add i16 %44, -1, !dbg !230
  store i16 %dec42, i16* %XferSize41, align 4, !dbg !230
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !231
  %XferCount43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 4, !dbg !232
  %46 = load volatile i16, i16* %XferCount43, align 2, !dbg !232
  %conv44 = zext i16 %46 to i32, !dbg !231
  %cmp45 = icmp ne i32 %conv44, 0, !dbg !233
  br i1 %cmp45, label %land.lhs.true, label %if.end72, !dbg !234

land.lhs.true:                                    ; preds = %if.end36
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !235
  %XferSize47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 3, !dbg !236
  %48 = load i16, i16* %XferSize47, align 4, !dbg !236
  %conv48 = zext i16 %48 to i32, !dbg !235
  %cmp49 = icmp eq i32 %conv48, 0, !dbg !237
  br i1 %cmp49, label %if.then51, label %if.end72, !dbg !238

if.then51:                                        ; preds = %land.lhs.true
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !239
  %50 = load i32, i32* %Timeout.addr, align 4, !dbg !240
  %51 = load i32, i32* %tickstart, align 4, !dbg !241
  %call52 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %49, i32 128, i8 zeroext 0, i32 %50, i32 %51), !dbg !242
  %conv53 = zext i8 %call52 to i32, !dbg !242
  %cmp54 = icmp ne i32 %conv53, 0, !dbg !243
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !242

if.then56:                                        ; preds = %if.then51
  store i8 1, i8* %retval, align 1, !dbg !244
  br label %return, !dbg !244

if.end57:                                         ; preds = %if.then51
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !245
  %XferCount58 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 4, !dbg !246
  %53 = load volatile i16, i16* %XferCount58, align 2, !dbg !246
  %conv59 = zext i16 %53 to i32, !dbg !245
  %cmp60 = icmp ugt i32 %conv59, 255, !dbg !247
  br i1 %cmp60, label %if.then62, label %if.else66, !dbg !245

if.then62:                                        ; preds = %if.end57
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !248
  %XferSize63 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 3, !dbg !249
  store i16 255, i16* %XferSize63, align 4, !dbg !250
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !251
  %56 = load i16, i16* %DevAddress.addr, align 2, !dbg !252
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !253
  %XferSize64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 3, !dbg !254
  %58 = load i16, i16* %XferSize64, align 4, !dbg !254
  %conv65 = trunc i16 %58 to i8, !dbg !255
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %55, i16 zeroext %56, i8 zeroext %conv65, i32 16777216, i32 0), !dbg !256
  br label %if.end71, !dbg !257

if.else66:                                        ; preds = %if.end57
  %59 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !258
  %XferCount67 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %59, i32 0, i32 4, !dbg !259
  %60 = load volatile i16, i16* %XferCount67, align 2, !dbg !259
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !260
  %XferSize68 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %61, i32 0, i32 3, !dbg !261
  store i16 %60, i16* %XferSize68, align 4, !dbg !262
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !263
  %63 = load i16, i16* %DevAddress.addr, align 2, !dbg !264
  %64 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !265
  %XferSize69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %64, i32 0, i32 3, !dbg !266
  %65 = load i16, i16* %XferSize69, align 4, !dbg !266
  %conv70 = trunc i16 %65 to i8, !dbg !267
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %62, i16 zeroext %63, i8 zeroext %conv70, i32 33554432, i32 0), !dbg !268
  br label %if.end71

if.end71:                                         ; preds = %if.else66, %if.then62
  br label %if.end72, !dbg !269

if.end72:                                         ; preds = %if.end71, %land.lhs.true, %if.end36
  br label %while.cond, !dbg !205, !llvm.loop !270

while.end:                                        ; preds = %while.cond
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !272
  %67 = load i32, i32* %Timeout.addr, align 4, !dbg !273
  %68 = load i32, i32* %tickstart, align 4, !dbg !274
  %call73 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnSTOPFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %66, i32 %67, i32 %68), !dbg !275
  %conv74 = zext i8 %call73 to i32, !dbg !275
  %cmp75 = icmp ne i32 %conv74, 0, !dbg !276
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !275

if.then77:                                        ; preds = %while.end
  store i8 1, i8* %retval, align 1, !dbg !277
  br label %return, !dbg !277

if.end78:                                         ; preds = %while.end
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !278
  %Instance79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 0, !dbg !278
  %70 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance79, align 4, !dbg !278
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %70, i32 0, i32 7, !dbg !278
  store volatile i32 32, i32* %ICR, align 4, !dbg !278
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !279
  %Instance80 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %71, i32 0, i32 0, !dbg !279
  %72 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance80, align 4, !dbg !279
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %72, i32 0, i32 1, !dbg !279
  %73 = load volatile i32, i32* %CR2, align 4, !dbg !279
  %and = and i32 %73, -33495040, !dbg !279
  store volatile i32 %and, i32* %CR2, align 4, !dbg !279
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !280
  %State81 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 11, !dbg !281
  store volatile i8 32, i8* %State81, align 1, !dbg !282
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !283
  %Mode82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 12, !dbg !284
  store volatile i8 0, i8* %Mode82, align 2, !dbg !285
  br label %do.body83, !dbg !286

do.body83:                                        ; preds = %if.end78
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !286
  %Lock84 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %76, i32 0, i32 10, !dbg !286
  store i8 0, i8* %Lock84, align 4, !dbg !286
  br label %do.end85, !dbg !286

do.end85:                                         ; preds = %do.body83
  store i8 0, i8* %retval, align 1, !dbg !287
  br label %return, !dbg !287

if.else86:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !288
  br label %return, !dbg !288

return:                                           ; preds = %if.else86, %do.end85, %if.then77, %if.then56, %if.then35, %if.then11, %if.then5
  %77 = load i8, i8* %retval, align 1, !dbg !289
  ret i8 %77, !dbg !289
}

declare dso_local arm_aapcs_vfpcc i32 @HAL_GetTick() #1

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %hi2c, i32 %Flag, i8 zeroext %Status, i32 %Timeout, i32 %Tickstart) #0 !dbg !290 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %Flag.addr = alloca i32, align 4
  %Status.addr = alloca i8, align 1
  %Timeout.addr = alloca i32, align 4
  %Tickstart.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %Flag, i32* %Flag.addr, align 4
  store i8 %Status, i8* %Status.addr, align 1
  store i32 %Timeout, i32* %Timeout.addr, align 4
  store i32 %Tickstart, i32* %Tickstart.addr, align 4
  br label %while.cond, !dbg !291

while.cond:                                       ; preds = %if.end10, %entry
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !292
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !292
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !292
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 6, !dbg !292
  %2 = load volatile i32, i32* %ISR, align 4, !dbg !292
  %3 = load i32, i32* %Flag.addr, align 4, !dbg !292
  %and = and i32 %2, %3, !dbg !292
  %4 = load i32, i32* %Flag.addr, align 4, !dbg !292
  %cmp = icmp eq i32 %and, %4, !dbg !292
  %5 = zext i1 %cmp to i64, !dbg !292
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !292
  %6 = load i8, i8* %Status.addr, align 1, !dbg !293
  %conv = zext i8 %6 to i32, !dbg !293
  %cmp1 = icmp eq i32 %cond, %conv, !dbg !294
  br i1 %cmp1, label %while.body, label %while.end, !dbg !291

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %Timeout.addr, align 4, !dbg !295
  %cmp3 = icmp ne i32 %7, -1, !dbg !296
  br i1 %cmp3, label %if.then, label %if.end10, !dbg !295

if.then:                                          ; preds = %while.body
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !297
  %8 = load i32, i32* %Tickstart.addr, align 4, !dbg !298
  %sub = sub i32 %call, %8, !dbg !299
  %9 = load i32, i32* %Timeout.addr, align 4, !dbg !300
  %cmp5 = icmp ugt i32 %sub, %9, !dbg !301
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !302

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i32, i32* %Timeout.addr, align 4, !dbg !303
  %cmp7 = icmp eq i32 %10, 0, !dbg !304
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !305

if.then9:                                         ; preds = %lor.lhs.false, %if.then
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !306
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 13, !dbg !307
  %12 = load volatile i32, i32* %ErrorCode, align 4, !dbg !308
  %or = or i32 %12, 32, !dbg !308
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !308
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !309
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 11, !dbg !310
  store volatile i8 32, i8* %State, align 1, !dbg !311
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !312
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 12, !dbg !313
  store volatile i8 0, i8* %Mode, align 2, !dbg !314
  br label %do.body, !dbg !315

do.body:                                          ; preds = %if.then9
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !315
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 10, !dbg !315
  store i8 0, i8* %Lock, align 4, !dbg !315
  br label %do.end, !dbg !315

do.end:                                           ; preds = %do.body
  store i8 1, i8* %retval, align 1, !dbg !316
  br label %return, !dbg !316

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end10, !dbg !317

if.end10:                                         ; preds = %if.end, %while.body
  br label %while.cond, !dbg !291, !llvm.loop !318

while.end:                                        ; preds = %while.cond
  store i8 0, i8* %retval, align 1, !dbg !320
  br label %return, !dbg !320

return:                                           ; preds = %while.end, %do.end
  %16 = load i8, i8* %retval, align 1, !dbg !321
  ret i8 %16, !dbg !321
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8 zeroext %Size, i32 %Mode, i32 %Request) #0 !dbg !322 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %Size.addr = alloca i8, align 1
  %Mode.addr = alloca i32, align 4
  %Request.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8 %Size, i8* %Size.addr, align 1
  store i32 %Mode, i32* %Mode.addr, align 4
  store i32 %Request, i32* %Request.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !323
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !323
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !323
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 1, !dbg !323
  %2 = load volatile i32, i32* %CR2, align 4, !dbg !323
  %3 = load i32, i32* %Request.addr, align 4, !dbg !323
  %shr = lshr i32 %3, 21, !dbg !323
  %and = and i32 1024, %shr, !dbg !323
  %or = or i32 67044351, %and, !dbg !323
  %or1 = or i32 %or, 8192, !dbg !323
  %or2 = or i32 %or1, 16384, !dbg !323
  %neg = xor i32 %or2, -1, !dbg !323
  %and3 = and i32 %2, %neg, !dbg !323
  %4 = load i16, i16* %DevAddress.addr, align 2, !dbg !323
  %conv = zext i16 %4 to i32, !dbg !323
  %and4 = and i32 %conv, 1023, !dbg !323
  %5 = load i8, i8* %Size.addr, align 1, !dbg !323
  %conv5 = zext i8 %5 to i32, !dbg !323
  %shl = shl i32 %conv5, 16, !dbg !323
  %and6 = and i32 %shl, 16711680, !dbg !323
  %or7 = or i32 %and4, %and6, !dbg !323
  %6 = load i32, i32* %Mode.addr, align 4, !dbg !323
  %or8 = or i32 %or7, %6, !dbg !323
  %7 = load i32, i32* %Request.addr, align 4, !dbg !323
  %or9 = or i32 %or8, %7, !dbg !323
  %or10 = or i32 %and3, %or9, !dbg !323
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !323
  %Instance11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 0, !dbg !323
  %9 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance11, align 4, !dbg !323
  %CR212 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %9, i32 0, i32 1, !dbg !323
  store volatile i32 %or10, i32* %CR212, align 4, !dbg !323
  ret void, !dbg !324
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnTXISFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %hi2c, i32 %Timeout, i32 %Tickstart) #0 !dbg !325 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %Timeout.addr = alloca i32, align 4
  %Tickstart.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %Timeout, i32* %Timeout.addr, align 4
  store i32 %Tickstart, i32* %Tickstart.addr, align 4
  br label %while.cond, !dbg !326

while.cond:                                       ; preds = %if.end14, %entry
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !327
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !327
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !327
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 6, !dbg !327
  %2 = load volatile i32, i32* %ISR, align 4, !dbg !327
  %and = and i32 %2, 2, !dbg !327
  %cmp = icmp eq i32 %and, 2, !dbg !327
  %3 = zext i1 %cmp to i64, !dbg !327
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !327
  %cmp1 = icmp eq i32 %cond, 0, !dbg !328
  br i1 %cmp1, label %while.body, label %while.end, !dbg !326

while.body:                                       ; preds = %while.cond
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !329
  %5 = load i32, i32* %Timeout.addr, align 4, !dbg !330
  %6 = load i32, i32* %Tickstart.addr, align 4, !dbg !331
  %call = call arm_aapcs_vfpcc zeroext i8 @I2C_IsAcknowledgeFailed(%struct.__I2C_HandleTypeDef* %4, i32 %5, i32 %6), !dbg !332
  %conv = zext i8 %call to i32, !dbg !332
  %cmp2 = icmp ne i32 %conv, 0, !dbg !333
  br i1 %cmp2, label %if.then, label %if.end, !dbg !332

if.then:                                          ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !334
  br label %return, !dbg !334

if.end:                                           ; preds = %while.body
  %7 = load i32, i32* %Timeout.addr, align 4, !dbg !335
  %cmp4 = icmp ne i32 %7, -1, !dbg !336
  br i1 %cmp4, label %if.then6, label %if.end14, !dbg !335

if.then6:                                         ; preds = %if.end
  %call7 = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !337
  %8 = load i32, i32* %Tickstart.addr, align 4, !dbg !338
  %sub = sub i32 %call7, %8, !dbg !339
  %9 = load i32, i32* %Timeout.addr, align 4, !dbg !340
  %cmp8 = icmp ugt i32 %sub, %9, !dbg !341
  br i1 %cmp8, label %if.then12, label %lor.lhs.false, !dbg !342

lor.lhs.false:                                    ; preds = %if.then6
  %10 = load i32, i32* %Timeout.addr, align 4, !dbg !343
  %cmp10 = icmp eq i32 %10, 0, !dbg !344
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !345

if.then12:                                        ; preds = %lor.lhs.false, %if.then6
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !346
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 13, !dbg !347
  %12 = load volatile i32, i32* %ErrorCode, align 4, !dbg !348
  %or = or i32 %12, 32, !dbg !348
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !348
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !349
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 11, !dbg !350
  store volatile i8 32, i8* %State, align 1, !dbg !351
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !352
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 12, !dbg !353
  store volatile i8 0, i8* %Mode, align 2, !dbg !354
  br label %do.body, !dbg !355

do.body:                                          ; preds = %if.then12
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !355
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 10, !dbg !355
  store i8 0, i8* %Lock, align 4, !dbg !355
  br label %do.end, !dbg !355

do.end:                                           ; preds = %do.body
  store i8 1, i8* %retval, align 1, !dbg !356
  br label %return, !dbg !356

if.end13:                                         ; preds = %lor.lhs.false
  br label %if.end14, !dbg !357

if.end14:                                         ; preds = %if.end13, %if.end
  br label %while.cond, !dbg !326, !llvm.loop !358

while.end:                                        ; preds = %while.cond
  store i8 0, i8* %retval, align 1, !dbg !360
  br label %return, !dbg !360

return:                                           ; preds = %while.end, %do.end, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !361
  ret i8 %16, !dbg !361
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnSTOPFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %hi2c, i32 %Timeout, i32 %Tickstart) #0 !dbg !362 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %Timeout.addr = alloca i32, align 4
  %Tickstart.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %Timeout, i32* %Timeout.addr, align 4
  store i32 %Tickstart, i32* %Tickstart.addr, align 4
  br label %while.cond, !dbg !363

while.cond:                                       ; preds = %if.end10, %entry
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !364
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !364
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !364
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 6, !dbg !364
  %2 = load volatile i32, i32* %ISR, align 4, !dbg !364
  %and = and i32 %2, 32, !dbg !364
  %cmp = icmp eq i32 %and, 32, !dbg !364
  %3 = zext i1 %cmp to i64, !dbg !364
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !364
  %cmp1 = icmp eq i32 %cond, 0, !dbg !365
  br i1 %cmp1, label %while.body, label %while.end, !dbg !363

while.body:                                       ; preds = %while.cond
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !366
  %5 = load i32, i32* %Timeout.addr, align 4, !dbg !367
  %6 = load i32, i32* %Tickstart.addr, align 4, !dbg !368
  %call = call arm_aapcs_vfpcc zeroext i8 @I2C_IsAcknowledgeFailed(%struct.__I2C_HandleTypeDef* %4, i32 %5, i32 %6), !dbg !369
  %conv = zext i8 %call to i32, !dbg !369
  %cmp2 = icmp ne i32 %conv, 0, !dbg !370
  br i1 %cmp2, label %if.then, label %if.end, !dbg !369

if.then:                                          ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !371
  br label %return, !dbg !371

if.end:                                           ; preds = %while.body
  %call4 = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !372
  %7 = load i32, i32* %Tickstart.addr, align 4, !dbg !373
  %sub = sub i32 %call4, %7, !dbg !374
  %8 = load i32, i32* %Timeout.addr, align 4, !dbg !375
  %cmp5 = icmp ugt i32 %sub, %8, !dbg !376
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !377

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i32, i32* %Timeout.addr, align 4, !dbg !378
  %cmp7 = icmp eq i32 %9, 0, !dbg !379
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !380

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !381
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 13, !dbg !382
  %11 = load volatile i32, i32* %ErrorCode, align 4, !dbg !383
  %or = or i32 %11, 32, !dbg !383
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !383
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !384
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 11, !dbg !385
  store volatile i8 32, i8* %State, align 1, !dbg !386
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !387
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 12, !dbg !388
  store volatile i8 0, i8* %Mode, align 2, !dbg !389
  br label %do.body, !dbg !390

do.body:                                          ; preds = %if.then9
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !390
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 10, !dbg !390
  store i8 0, i8* %Lock, align 4, !dbg !390
  br label %do.end, !dbg !390

do.end:                                           ; preds = %do.body
  store i8 1, i8* %retval, align 1, !dbg !391
  br label %return, !dbg !391

if.end10:                                         ; preds = %lor.lhs.false
  br label %while.cond, !dbg !363, !llvm.loop !392

while.end:                                        ; preds = %while.cond
  store i8 0, i8* %retval, align 1, !dbg !394
  br label %return, !dbg !394

return:                                           ; preds = %while.end, %do.end, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !395
  ret i8 %15, !dbg !395
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Receive(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size, i32 %Timeout) #0 !dbg !396 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %Timeout.addr = alloca i32, align 4
  %tickstart = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %Timeout, i32* %Timeout.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !397
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !398
  %1 = load volatile i8, i8* %State, align 1, !dbg !398
  %conv = zext i8 %1 to i32, !dbg !397
  %cmp = icmp eq i32 %conv, 32, !dbg !399
  br i1 %cmp, label %if.then, label %if.else86, !dbg !397

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !400

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !400
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !400
  %3 = load i8, i8* %Lock, align 4, !dbg !400
  %conv2 = zext i8 %3 to i32, !dbg !400
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !400
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !400

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !400
  br label %return, !dbg !400

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !400
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !400
  store i8 1, i8* %Lock6, align 4, !dbg !400
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !400

do.end:                                           ; preds = %if.end
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !401
  store i32 %call, i32* %tickstart, align 4, !dbg !402
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !403
  %6 = load i32, i32* %tickstart, align 4, !dbg !404
  %call7 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %5, i32 32768, i8 zeroext 1, i32 25, i32 %6), !dbg !405
  %conv8 = zext i8 %call7 to i32, !dbg !405
  %cmp9 = icmp ne i32 %conv8, 0, !dbg !406
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !405

if.then11:                                        ; preds = %do.end
  store i8 1, i8* %retval, align 1, !dbg !407
  br label %return, !dbg !407

if.end12:                                         ; preds = %do.end
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !408
  %State13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 11, !dbg !409
  store volatile i8 34, i8* %State13, align 1, !dbg !410
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !411
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 12, !dbg !412
  store volatile i8 16, i8* %Mode, align 2, !dbg !413
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !414
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 13, !dbg !415
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !416
  %10 = load i8*, i8** %pData.addr, align 4, !dbg !417
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !418
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 2, !dbg !419
  store i8* %10, i8** %pBuffPtr, align 4, !dbg !420
  %12 = load i16, i16* %Size.addr, align 2, !dbg !421
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !422
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 4, !dbg !423
  store volatile i16 %12, i16* %XferCount, align 2, !dbg !424
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !425
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 7, !dbg !426
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !427
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !428
  %XferCount14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !429
  %16 = load volatile i16, i16* %XferCount14, align 2, !dbg !429
  %conv15 = zext i16 %16 to i32, !dbg !428
  %cmp16 = icmp ugt i32 %conv15, 255, !dbg !430
  br i1 %cmp16, label %if.then18, label %if.else21, !dbg !428

if.then18:                                        ; preds = %if.end12
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !431
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !432
  store i16 255, i16* %XferSize, align 4, !dbg !433
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !434
  %19 = load i16, i16* %DevAddress.addr, align 2, !dbg !435
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !436
  %XferSize19 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !437
  %21 = load i16, i16* %XferSize19, align 4, !dbg !437
  %conv20 = trunc i16 %21 to i8, !dbg !438
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %18, i16 zeroext %19, i8 zeroext %conv20, i32 16777216, i32 -2147474432), !dbg !439
  br label %if.end26, !dbg !440

if.else21:                                        ; preds = %if.end12
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !441
  %XferCount22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 4, !dbg !442
  %23 = load volatile i16, i16* %XferCount22, align 2, !dbg !442
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !443
  %XferSize23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 3, !dbg !444
  store i16 %23, i16* %XferSize23, align 4, !dbg !445
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !446
  %26 = load i16, i16* %DevAddress.addr, align 2, !dbg !447
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !448
  %XferSize24 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 3, !dbg !449
  %28 = load i16, i16* %XferSize24, align 4, !dbg !449
  %conv25 = trunc i16 %28 to i8, !dbg !450
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %25, i16 zeroext %26, i8 zeroext %conv25, i32 33554432, i32 -2147474432), !dbg !451
  br label %if.end26

if.end26:                                         ; preds = %if.else21, %if.then18
  br label %while.cond, !dbg !452

while.cond:                                       ; preds = %if.end72, %if.end26
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !453
  %XferCount27 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 4, !dbg !454
  %30 = load volatile i16, i16* %XferCount27, align 2, !dbg !454
  %conv28 = zext i16 %30 to i32, !dbg !453
  %cmp29 = icmp ugt i32 %conv28, 0, !dbg !455
  br i1 %cmp29, label %while.body, label %while.end, !dbg !452

while.body:                                       ; preds = %while.cond
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !456
  %32 = load i32, i32* %Timeout.addr, align 4, !dbg !457
  %33 = load i32, i32* %tickstart, align 4, !dbg !458
  %call31 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnRXNEFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %31, i32 %32, i32 %33), !dbg !459
  %conv32 = zext i8 %call31 to i32, !dbg !459
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !460
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !459

if.then35:                                        ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !461
  br label %return, !dbg !461

if.end36:                                         ; preds = %while.body
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !462
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 0, !dbg !463
  %35 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !463
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %35, i32 0, i32 9, !dbg !464
  %36 = load volatile i32, i32* %RXDR, align 4, !dbg !464
  %conv37 = trunc i32 %36 to i8, !dbg !465
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !466
  %pBuffPtr38 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 2, !dbg !467
  %38 = load i8*, i8** %pBuffPtr38, align 4, !dbg !467
  store i8 %conv37, i8* %38, align 1, !dbg !468
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !469
  %pBuffPtr39 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 2, !dbg !470
  %40 = load i8*, i8** %pBuffPtr39, align 4, !dbg !471
  %incdec.ptr = getelementptr inbounds i8, i8* %40, i32 1, !dbg !471
  store i8* %incdec.ptr, i8** %pBuffPtr39, align 4, !dbg !471
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !472
  %XferSize40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 3, !dbg !473
  %42 = load i16, i16* %XferSize40, align 4, !dbg !474
  %dec = add i16 %42, -1, !dbg !474
  store i16 %dec, i16* %XferSize40, align 4, !dbg !474
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !475
  %XferCount41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 4, !dbg !476
  %44 = load volatile i16, i16* %XferCount41, align 2, !dbg !477
  %dec42 = add i16 %44, -1, !dbg !477
  store volatile i16 %dec42, i16* %XferCount41, align 2, !dbg !477
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !478
  %XferCount43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 4, !dbg !479
  %46 = load volatile i16, i16* %XferCount43, align 2, !dbg !479
  %conv44 = zext i16 %46 to i32, !dbg !478
  %cmp45 = icmp ne i32 %conv44, 0, !dbg !480
  br i1 %cmp45, label %land.lhs.true, label %if.end72, !dbg !481

land.lhs.true:                                    ; preds = %if.end36
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !482
  %XferSize47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 3, !dbg !483
  %48 = load i16, i16* %XferSize47, align 4, !dbg !483
  %conv48 = zext i16 %48 to i32, !dbg !482
  %cmp49 = icmp eq i32 %conv48, 0, !dbg !484
  br i1 %cmp49, label %if.then51, label %if.end72, !dbg !485

if.then51:                                        ; preds = %land.lhs.true
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !486
  %50 = load i32, i32* %Timeout.addr, align 4, !dbg !487
  %51 = load i32, i32* %tickstart, align 4, !dbg !488
  %call52 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %49, i32 128, i8 zeroext 0, i32 %50, i32 %51), !dbg !489
  %conv53 = zext i8 %call52 to i32, !dbg !489
  %cmp54 = icmp ne i32 %conv53, 0, !dbg !490
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !489

if.then56:                                        ; preds = %if.then51
  store i8 1, i8* %retval, align 1, !dbg !491
  br label %return, !dbg !491

if.end57:                                         ; preds = %if.then51
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !492
  %XferCount58 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 4, !dbg !493
  %53 = load volatile i16, i16* %XferCount58, align 2, !dbg !493
  %conv59 = zext i16 %53 to i32, !dbg !492
  %cmp60 = icmp ugt i32 %conv59, 255, !dbg !494
  br i1 %cmp60, label %if.then62, label %if.else66, !dbg !492

if.then62:                                        ; preds = %if.end57
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !495
  %XferSize63 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 3, !dbg !496
  store i16 255, i16* %XferSize63, align 4, !dbg !497
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !498
  %56 = load i16, i16* %DevAddress.addr, align 2, !dbg !499
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !500
  %XferSize64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 3, !dbg !501
  %58 = load i16, i16* %XferSize64, align 4, !dbg !501
  %conv65 = trunc i16 %58 to i8, !dbg !502
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %55, i16 zeroext %56, i8 zeroext %conv65, i32 16777216, i32 0), !dbg !503
  br label %if.end71, !dbg !504

if.else66:                                        ; preds = %if.end57
  %59 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !505
  %XferCount67 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %59, i32 0, i32 4, !dbg !506
  %60 = load volatile i16, i16* %XferCount67, align 2, !dbg !506
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !507
  %XferSize68 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %61, i32 0, i32 3, !dbg !508
  store i16 %60, i16* %XferSize68, align 4, !dbg !509
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !510
  %63 = load i16, i16* %DevAddress.addr, align 2, !dbg !511
  %64 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !512
  %XferSize69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %64, i32 0, i32 3, !dbg !513
  %65 = load i16, i16* %XferSize69, align 4, !dbg !513
  %conv70 = trunc i16 %65 to i8, !dbg !514
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %62, i16 zeroext %63, i8 zeroext %conv70, i32 33554432, i32 0), !dbg !515
  br label %if.end71

if.end71:                                         ; preds = %if.else66, %if.then62
  br label %if.end72, !dbg !516

if.end72:                                         ; preds = %if.end71, %land.lhs.true, %if.end36
  br label %while.cond, !dbg !452, !llvm.loop !517

while.end:                                        ; preds = %while.cond
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !519
  %67 = load i32, i32* %Timeout.addr, align 4, !dbg !520
  %68 = load i32, i32* %tickstart, align 4, !dbg !521
  %call73 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnSTOPFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %66, i32 %67, i32 %68), !dbg !522
  %conv74 = zext i8 %call73 to i32, !dbg !522
  %cmp75 = icmp ne i32 %conv74, 0, !dbg !523
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !522

if.then77:                                        ; preds = %while.end
  store i8 1, i8* %retval, align 1, !dbg !524
  br label %return, !dbg !524

if.end78:                                         ; preds = %while.end
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !525
  %Instance79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 0, !dbg !525
  %70 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance79, align 4, !dbg !525
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %70, i32 0, i32 7, !dbg !525
  store volatile i32 32, i32* %ICR, align 4, !dbg !525
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !526
  %Instance80 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %71, i32 0, i32 0, !dbg !526
  %72 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance80, align 4, !dbg !526
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %72, i32 0, i32 1, !dbg !526
  %73 = load volatile i32, i32* %CR2, align 4, !dbg !526
  %and = and i32 %73, -33495040, !dbg !526
  store volatile i32 %and, i32* %CR2, align 4, !dbg !526
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !527
  %State81 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 11, !dbg !528
  store volatile i8 32, i8* %State81, align 1, !dbg !529
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !530
  %Mode82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 12, !dbg !531
  store volatile i8 0, i8* %Mode82, align 2, !dbg !532
  br label %do.body83, !dbg !533

do.body83:                                        ; preds = %if.end78
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !533
  %Lock84 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %76, i32 0, i32 10, !dbg !533
  store i8 0, i8* %Lock84, align 4, !dbg !533
  br label %do.end85, !dbg !533

do.end85:                                         ; preds = %do.body83
  store i8 0, i8* %retval, align 1, !dbg !534
  br label %return, !dbg !534

if.else86:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !535
  br label %return, !dbg !535

return:                                           ; preds = %if.else86, %do.end85, %if.then77, %if.then56, %if.then35, %if.then11, %if.then5
  %77 = load i8, i8* %retval, align 1, !dbg !536
  ret i8 %77, !dbg !536
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnRXNEFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %hi2c, i32 %Timeout, i32 %Tickstart) #0 !dbg !537 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %Timeout.addr = alloca i32, align 4
  %Tickstart.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %Timeout, i32* %Timeout.addr, align 4
  store i32 %Tickstart, i32* %Tickstart.addr, align 4
  br label %while.cond, !dbg !538

while.cond:                                       ; preds = %if.end40, %entry
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !539
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !539
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !539
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 6, !dbg !539
  %2 = load volatile i32, i32* %ISR, align 4, !dbg !539
  %and = and i32 %2, 4, !dbg !539
  %cmp = icmp eq i32 %and, 4, !dbg !539
  %3 = zext i1 %cmp to i64, !dbg !539
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !539
  %cmp1 = icmp eq i32 %cond, 0, !dbg !540
  br i1 %cmp1, label %while.body, label %while.end, !dbg !538

while.body:                                       ; preds = %while.cond
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !541
  %5 = load i32, i32* %Timeout.addr, align 4, !dbg !542
  %6 = load i32, i32* %Tickstart.addr, align 4, !dbg !543
  %call = call arm_aapcs_vfpcc zeroext i8 @I2C_IsAcknowledgeFailed(%struct.__I2C_HandleTypeDef* %4, i32 %5, i32 %6), !dbg !544
  %conv = zext i8 %call to i32, !dbg !544
  %cmp2 = icmp ne i32 %conv, 0, !dbg !545
  br i1 %cmp2, label %if.then, label %if.end, !dbg !544

if.then:                                          ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !546
  br label %return, !dbg !546

if.end:                                           ; preds = %while.body
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !547
  %Instance4 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 0, !dbg !547
  %8 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance4, align 4, !dbg !547
  %ISR5 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %8, i32 0, i32 6, !dbg !547
  %9 = load volatile i32, i32* %ISR5, align 4, !dbg !547
  %and6 = and i32 %9, 32, !dbg !547
  %cmp7 = icmp eq i32 %and6, 32, !dbg !547
  %10 = zext i1 %cmp7 to i64, !dbg !547
  %cond9 = select i1 %cmp7, i32 1, i32 0, !dbg !547
  %cmp10 = icmp eq i32 %cond9, 1, !dbg !548
  br i1 %cmp10, label %if.then12, label %if.end28, !dbg !547

if.then12:                                        ; preds = %if.end
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !549
  %Instance13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 0, !dbg !549
  %12 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance13, align 4, !dbg !549
  %ISR14 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %12, i32 0, i32 6, !dbg !549
  %13 = load volatile i32, i32* %ISR14, align 4, !dbg !549
  %and15 = and i32 %13, 4, !dbg !549
  %cmp16 = icmp eq i32 %and15, 4, !dbg !549
  %14 = zext i1 %cmp16 to i64, !dbg !549
  %cond18 = select i1 %cmp16, i32 1, i32 0, !dbg !549
  %cmp19 = icmp eq i32 %cond18, 1, !dbg !550
  br i1 %cmp19, label %land.lhs.true, label %if.else, !dbg !551

land.lhs.true:                                    ; preds = %if.then12
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !552
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 3, !dbg !553
  %16 = load i16, i16* %XferSize, align 4, !dbg !553
  %conv21 = zext i16 %16 to i32, !dbg !552
  %cmp22 = icmp ugt i32 %conv21, 0, !dbg !554
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !555

if.then24:                                        ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !556
  br label %return, !dbg !556

if.else:                                          ; preds = %land.lhs.true, %if.then12
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !557
  %Instance25 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 0, !dbg !557
  %18 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance25, align 4, !dbg !557
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %18, i32 0, i32 7, !dbg !557
  store volatile i32 32, i32* %ICR, align 4, !dbg !557
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !558
  %Instance26 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 0, !dbg !558
  %20 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance26, align 4, !dbg !558
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %20, i32 0, i32 1, !dbg !558
  %21 = load volatile i32, i32* %CR2, align 4, !dbg !558
  %and27 = and i32 %21, -33495040, !dbg !558
  store volatile i32 %and27, i32* %CR2, align 4, !dbg !558
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !559
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 13, !dbg !560
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !561
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !562
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 11, !dbg !563
  store volatile i8 32, i8* %State, align 1, !dbg !564
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !565
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 12, !dbg !566
  store volatile i8 0, i8* %Mode, align 2, !dbg !567
  br label %do.body, !dbg !568

do.body:                                          ; preds = %if.else
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !568
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 10, !dbg !568
  store i8 0, i8* %Lock, align 4, !dbg !568
  br label %do.end, !dbg !568

do.end:                                           ; preds = %do.body
  store i8 1, i8* %retval, align 1, !dbg !569
  br label %return, !dbg !569

if.end28:                                         ; preds = %if.end
  %call29 = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !570
  %26 = load i32, i32* %Tickstart.addr, align 4, !dbg !571
  %sub = sub i32 %call29, %26, !dbg !572
  %27 = load i32, i32* %Timeout.addr, align 4, !dbg !573
  %cmp30 = icmp ugt i32 %sub, %27, !dbg !574
  br i1 %cmp30, label %if.then34, label %lor.lhs.false, !dbg !575

lor.lhs.false:                                    ; preds = %if.end28
  %28 = load i32, i32* %Timeout.addr, align 4, !dbg !576
  %cmp32 = icmp eq i32 %28, 0, !dbg !577
  br i1 %cmp32, label %if.then34, label %if.end40, !dbg !578

if.then34:                                        ; preds = %lor.lhs.false, %if.end28
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !579
  %ErrorCode35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 13, !dbg !580
  %30 = load volatile i32, i32* %ErrorCode35, align 4, !dbg !581
  %or = or i32 %30, 32, !dbg !581
  store volatile i32 %or, i32* %ErrorCode35, align 4, !dbg !581
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !582
  %State36 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 11, !dbg !583
  store volatile i8 32, i8* %State36, align 1, !dbg !584
  br label %do.body37, !dbg !585

do.body37:                                        ; preds = %if.then34
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !585
  %Lock38 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 10, !dbg !585
  store i8 0, i8* %Lock38, align 4, !dbg !585
  br label %do.end39, !dbg !585

do.end39:                                         ; preds = %do.body37
  store i8 1, i8* %retval, align 1, !dbg !586
  br label %return, !dbg !586

if.end40:                                         ; preds = %lor.lhs.false
  br label %while.cond, !dbg !538, !llvm.loop !587

while.end:                                        ; preds = %while.cond
  store i8 0, i8* %retval, align 1, !dbg !589
  br label %return, !dbg !589

return:                                           ; preds = %while.end, %do.end39, %do.end, %if.then24, %if.then
  %33 = load i8, i8* %retval, align 1, !dbg !590
  ret i8 %33, !dbg !590
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Transmit(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size, i32 %Timeout) #0 !dbg !591 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %Timeout.addr = alloca i32, align 4
  %tickstart = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %Timeout, i32* %Timeout.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !592
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !593
  %1 = load volatile i8, i8* %State, align 1, !dbg !593
  %conv = zext i8 %1 to i32, !dbg !592
  %cmp = icmp eq i32 %conv, 32, !dbg !594
  br i1 %cmp, label %if.then, label %if.else102, !dbg !592

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !595
  %cmp2 = icmp eq i8* %2, null, !dbg !596
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !597

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !598
  %conv4 = zext i16 %3 to i32, !dbg !598
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !599
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !600

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !601
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !602
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !603
  store i8 1, i8* %retval, align 1, !dbg !604
  br label %return, !dbg !604

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !605

do.body:                                          ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !605
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 10, !dbg !605
  %6 = load i8, i8* %Lock, align 4, !dbg !605
  %conv8 = zext i8 %6 to i32, !dbg !605
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !605
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !605

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !605
  br label %return, !dbg !605

if.else:                                          ; preds = %do.body
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !605
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !605
  store i8 1, i8* %Lock12, align 4, !dbg !605
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !605

do.end:                                           ; preds = %if.end13
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !606
  store i32 %call, i32* %tickstart, align 4, !dbg !607
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !608
  %State14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 11, !dbg !609
  store volatile i8 33, i8* %State14, align 1, !dbg !610
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !611
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 12, !dbg !612
  store volatile i8 32, i8* %Mode, align 2, !dbg !613
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !614
  %ErrorCode15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 13, !dbg !615
  store volatile i32 0, i32* %ErrorCode15, align 4, !dbg !616
  %11 = load i8*, i8** %pData.addr, align 4, !dbg !617
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !618
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 2, !dbg !619
  store i8* %11, i8** %pBuffPtr, align 4, !dbg !620
  %13 = load i16, i16* %Size.addr, align 2, !dbg !621
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !622
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 4, !dbg !623
  store volatile i16 %13, i16* %XferCount, align 2, !dbg !624
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !625
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 7, !dbg !626
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !627
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !628
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 0, !dbg !629
  %17 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !629
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %17, i32 0, i32 1, !dbg !630
  %18 = load volatile i32, i32* %CR2, align 4, !dbg !631
  %and = and i32 %18, -32769, !dbg !631
  store volatile i32 %and, i32* %CR2, align 4, !dbg !631
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !632
  %20 = load i32, i32* %Timeout.addr, align 4, !dbg !633
  %21 = load i32, i32* %tickstart, align 4, !dbg !634
  %call16 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %19, i32 8, i8 zeroext 0, i32 %20, i32 %21), !dbg !635
  %conv17 = zext i8 %call16 to i32, !dbg !635
  %cmp18 = icmp ne i32 %conv17, 0, !dbg !636
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !635

if.then20:                                        ; preds = %do.end
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !637
  %Instance21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 0, !dbg !638
  %23 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance21, align 4, !dbg !638
  %CR222 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %23, i32 0, i32 1, !dbg !639
  %24 = load volatile i32, i32* %CR222, align 4, !dbg !640
  %or = or i32 %24, 32768, !dbg !640
  store volatile i32 %or, i32* %CR222, align 4, !dbg !640
  store i8 1, i8* %retval, align 1, !dbg !641
  br label %return, !dbg !641

if.end23:                                         ; preds = %do.end
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !642
  %Instance24 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 0, !dbg !642
  %26 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance24, align 4, !dbg !642
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %26, i32 0, i32 7, !dbg !642
  store volatile i32 8, i32* %ICR, align 4, !dbg !642
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !643
  %Init = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 1, !dbg !644
  %AddressingMode = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init, i32 0, i32 2, !dbg !645
  %28 = load i32, i32* %AddressingMode, align 4, !dbg !645
  %cmp25 = icmp eq i32 %28, 2, !dbg !646
  br i1 %cmp25, label %if.then27, label %if.end39, !dbg !643

if.then27:                                        ; preds = %if.end23
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !647
  %30 = load i32, i32* %Timeout.addr, align 4, !dbg !648
  %31 = load i32, i32* %tickstart, align 4, !dbg !649
  %call28 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %29, i32 8, i8 zeroext 0, i32 %30, i32 %31), !dbg !650
  %conv29 = zext i8 %call28 to i32, !dbg !650
  %cmp30 = icmp ne i32 %conv29, 0, !dbg !651
  br i1 %cmp30, label %if.then32, label %if.end36, !dbg !650

if.then32:                                        ; preds = %if.then27
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !652
  %Instance33 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 0, !dbg !653
  %33 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance33, align 4, !dbg !653
  %CR234 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %33, i32 0, i32 1, !dbg !654
  %34 = load volatile i32, i32* %CR234, align 4, !dbg !655
  %or35 = or i32 %34, 32768, !dbg !655
  store volatile i32 %or35, i32* %CR234, align 4, !dbg !655
  store i8 1, i8* %retval, align 1, !dbg !656
  br label %return, !dbg !656

if.end36:                                         ; preds = %if.then27
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !657
  %Instance37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 0, !dbg !657
  %36 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance37, align 4, !dbg !657
  %ICR38 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %36, i32 0, i32 7, !dbg !657
  store volatile i32 8, i32* %ICR38, align 4, !dbg !657
  br label %if.end39, !dbg !658

if.end39:                                         ; preds = %if.end36, %if.end23
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !659
  %38 = load i32, i32* %Timeout.addr, align 4, !dbg !660
  %39 = load i32, i32* %tickstart, align 4, !dbg !661
  %call40 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %37, i32 65536, i8 zeroext 0, i32 %38, i32 %39), !dbg !662
  %conv41 = zext i8 %call40 to i32, !dbg !662
  %cmp42 = icmp ne i32 %conv41, 0, !dbg !663
  br i1 %cmp42, label %if.then44, label %if.end48, !dbg !662

if.then44:                                        ; preds = %if.end39
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !664
  %Instance45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 0, !dbg !665
  %41 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance45, align 4, !dbg !665
  %CR246 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %41, i32 0, i32 1, !dbg !666
  %42 = load volatile i32, i32* %CR246, align 4, !dbg !667
  %or47 = or i32 %42, 32768, !dbg !667
  store volatile i32 %or47, i32* %CR246, align 4, !dbg !667
  store i8 1, i8* %retval, align 1, !dbg !668
  br label %return, !dbg !668

if.end48:                                         ; preds = %if.end39
  br label %while.cond, !dbg !669

while.cond:                                       ; preds = %if.end61, %if.end48
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !670
  %XferCount49 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 4, !dbg !671
  %44 = load volatile i16, i16* %XferCount49, align 2, !dbg !671
  %conv50 = zext i16 %44 to i32, !dbg !670
  %cmp51 = icmp ugt i32 %conv50, 0, !dbg !672
  br i1 %cmp51, label %while.body, label %while.end, !dbg !669

while.body:                                       ; preds = %while.cond
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !673
  %46 = load i32, i32* %Timeout.addr, align 4, !dbg !674
  %47 = load i32, i32* %tickstart, align 4, !dbg !675
  %call53 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnTXISFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %45, i32 %46, i32 %47), !dbg !676
  %conv54 = zext i8 %call53 to i32, !dbg !676
  %cmp55 = icmp ne i32 %conv54, 0, !dbg !677
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !676

if.then57:                                        ; preds = %while.body
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !678
  %Instance58 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 0, !dbg !679
  %49 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance58, align 4, !dbg !679
  %CR259 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %49, i32 0, i32 1, !dbg !680
  %50 = load volatile i32, i32* %CR259, align 4, !dbg !681
  %or60 = or i32 %50, 32768, !dbg !681
  store volatile i32 %or60, i32* %CR259, align 4, !dbg !681
  store i8 1, i8* %retval, align 1, !dbg !682
  br label %return, !dbg !682

if.end61:                                         ; preds = %while.body
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !683
  %pBuffPtr62 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %51, i32 0, i32 2, !dbg !684
  %52 = load i8*, i8** %pBuffPtr62, align 4, !dbg !684
  %53 = load i8, i8* %52, align 1, !dbg !685
  %conv63 = zext i8 %53 to i32, !dbg !685
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !686
  %Instance64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 0, !dbg !687
  %55 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance64, align 4, !dbg !687
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %55, i32 0, i32 10, !dbg !688
  store volatile i32 %conv63, i32* %TXDR, align 4, !dbg !689
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !690
  %pBuffPtr65 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 2, !dbg !691
  %57 = load i8*, i8** %pBuffPtr65, align 4, !dbg !692
  %incdec.ptr = getelementptr inbounds i8, i8* %57, i32 1, !dbg !692
  store i8* %incdec.ptr, i8** %pBuffPtr65, align 4, !dbg !692
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !693
  %XferCount66 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 4, !dbg !694
  %59 = load volatile i16, i16* %XferCount66, align 2, !dbg !695
  %dec = add i16 %59, -1, !dbg !695
  store volatile i16 %dec, i16* %XferCount66, align 2, !dbg !695
  br label %while.cond, !dbg !669, !llvm.loop !696

while.end:                                        ; preds = %while.cond
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !698
  %61 = load i32, i32* %Timeout.addr, align 4, !dbg !699
  %62 = load i32, i32* %tickstart, align 4, !dbg !700
  %call67 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnSTOPFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %60, i32 %61, i32 %62), !dbg !701
  %conv68 = zext i8 %call67 to i32, !dbg !701
  %cmp69 = icmp ne i32 %conv68, 0, !dbg !702
  br i1 %cmp69, label %if.then71, label %if.end82, !dbg !701

if.then71:                                        ; preds = %while.end
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !703
  %Instance72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %63, i32 0, i32 0, !dbg !704
  %64 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance72, align 4, !dbg !704
  %CR273 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %64, i32 0, i32 1, !dbg !705
  %65 = load volatile i32, i32* %CR273, align 4, !dbg !706
  %or74 = or i32 %65, 32768, !dbg !706
  store volatile i32 %or74, i32* %CR273, align 4, !dbg !706
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !707
  %ErrorCode75 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 13, !dbg !708
  %67 = load volatile i32, i32* %ErrorCode75, align 4, !dbg !708
  %cmp76 = icmp eq i32 %67, 4, !dbg !709
  br i1 %cmp76, label %if.then78, label %if.else80, !dbg !707

if.then78:                                        ; preds = %if.then71
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !710
  %ErrorCode79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %68, i32 0, i32 13, !dbg !711
  store volatile i32 0, i32* %ErrorCode79, align 4, !dbg !712
  br label %if.end81, !dbg !713

if.else80:                                        ; preds = %if.then71
  store i8 1, i8* %retval, align 1, !dbg !714
  br label %return, !dbg !714

if.end81:                                         ; preds = %if.then78
  br label %if.end82, !dbg !715

if.end82:                                         ; preds = %if.end81, %while.end
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !716
  %Instance83 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 0, !dbg !716
  %70 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance83, align 4, !dbg !716
  %ICR84 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %70, i32 0, i32 7, !dbg !716
  store volatile i32 32, i32* %ICR84, align 4, !dbg !716
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !717
  %72 = load i32, i32* %Timeout.addr, align 4, !dbg !718
  %73 = load i32, i32* %tickstart, align 4, !dbg !719
  %call85 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %71, i32 32768, i8 zeroext 1, i32 %72, i32 %73), !dbg !720
  %conv86 = zext i8 %call85 to i32, !dbg !720
  %cmp87 = icmp ne i32 %conv86, 0, !dbg !721
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !720

if.then89:                                        ; preds = %if.end82
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !722
  %Instance90 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 0, !dbg !723
  %75 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance90, align 4, !dbg !723
  %CR291 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %75, i32 0, i32 1, !dbg !724
  %76 = load volatile i32, i32* %CR291, align 4, !dbg !725
  %or92 = or i32 %76, 32768, !dbg !725
  store volatile i32 %or92, i32* %CR291, align 4, !dbg !725
  store i8 1, i8* %retval, align 1, !dbg !726
  br label %return, !dbg !726

if.end93:                                         ; preds = %if.end82
  %77 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !727
  %Instance94 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %77, i32 0, i32 0, !dbg !728
  %78 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance94, align 4, !dbg !728
  %CR295 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %78, i32 0, i32 1, !dbg !729
  %79 = load volatile i32, i32* %CR295, align 4, !dbg !730
  %or96 = or i32 %79, 32768, !dbg !730
  store volatile i32 %or96, i32* %CR295, align 4, !dbg !730
  %80 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !731
  %State97 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %80, i32 0, i32 11, !dbg !732
  store volatile i8 32, i8* %State97, align 1, !dbg !733
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !734
  %Mode98 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %81, i32 0, i32 12, !dbg !735
  store volatile i8 0, i8* %Mode98, align 2, !dbg !736
  br label %do.body99, !dbg !737

do.body99:                                        ; preds = %if.end93
  %82 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !737
  %Lock100 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %82, i32 0, i32 10, !dbg !737
  store i8 0, i8* %Lock100, align 4, !dbg !737
  br label %do.end101, !dbg !737

do.end101:                                        ; preds = %do.body99
  store i8 0, i8* %retval, align 1, !dbg !738
  br label %return, !dbg !738

if.else102:                                       ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !739
  br label %return, !dbg !739

return:                                           ; preds = %if.else102, %do.end101, %if.then89, %if.else80, %if.then57, %if.then44, %if.then32, %if.then20, %if.then11, %if.then7
  %83 = load i8, i8* %retval, align 1, !dbg !740
  ret i8 %83, !dbg !740
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Receive(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size, i32 %Timeout) #0 !dbg !741 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %Timeout.addr = alloca i32, align 4
  %tickstart = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %Timeout, i32* %Timeout.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !742
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !743
  %1 = load volatile i8, i8* %State, align 1, !dbg !743
  %conv = zext i8 %1 to i32, !dbg !742
  %cmp = icmp eq i32 %conv, 32, !dbg !744
  br i1 %cmp, label %if.then, label %if.else96, !dbg !742

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !745
  %cmp2 = icmp eq i8* %2, null, !dbg !746
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !747

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !748
  %conv4 = zext i16 %3 to i32, !dbg !748
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !749
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !750

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !751
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !752
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !753
  store i8 1, i8* %retval, align 1, !dbg !754
  br label %return, !dbg !754

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !755

do.body:                                          ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !755
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 10, !dbg !755
  %6 = load i8, i8* %Lock, align 4, !dbg !755
  %conv8 = zext i8 %6 to i32, !dbg !755
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !755
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !755

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !755
  br label %return, !dbg !755

if.else:                                          ; preds = %do.body
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !755
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !755
  store i8 1, i8* %Lock12, align 4, !dbg !755
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !755

do.end:                                           ; preds = %if.end13
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !756
  store i32 %call, i32* %tickstart, align 4, !dbg !757
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !758
  %State14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 11, !dbg !759
  store volatile i8 34, i8* %State14, align 1, !dbg !760
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !761
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 12, !dbg !762
  store volatile i8 32, i8* %Mode, align 2, !dbg !763
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !764
  %ErrorCode15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 13, !dbg !765
  store volatile i32 0, i32* %ErrorCode15, align 4, !dbg !766
  %11 = load i8*, i8** %pData.addr, align 4, !dbg !767
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !768
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 2, !dbg !769
  store i8* %11, i8** %pBuffPtr, align 4, !dbg !770
  %13 = load i16, i16* %Size.addr, align 2, !dbg !771
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !772
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 4, !dbg !773
  store volatile i16 %13, i16* %XferCount, align 2, !dbg !774
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !775
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 7, !dbg !776
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !777
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !778
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 0, !dbg !779
  %17 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !779
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %17, i32 0, i32 1, !dbg !780
  %18 = load volatile i32, i32* %CR2, align 4, !dbg !781
  %and = and i32 %18, -32769, !dbg !781
  store volatile i32 %and, i32* %CR2, align 4, !dbg !781
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !782
  %20 = load i32, i32* %Timeout.addr, align 4, !dbg !783
  %21 = load i32, i32* %tickstart, align 4, !dbg !784
  %call16 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %19, i32 8, i8 zeroext 0, i32 %20, i32 %21), !dbg !785
  %conv17 = zext i8 %call16 to i32, !dbg !785
  %cmp18 = icmp ne i32 %conv17, 0, !dbg !786
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !785

if.then20:                                        ; preds = %do.end
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !787
  %Instance21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 0, !dbg !788
  %23 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance21, align 4, !dbg !788
  %CR222 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %23, i32 0, i32 1, !dbg !789
  %24 = load volatile i32, i32* %CR222, align 4, !dbg !790
  %or = or i32 %24, 32768, !dbg !790
  store volatile i32 %or, i32* %CR222, align 4, !dbg !790
  store i8 1, i8* %retval, align 1, !dbg !791
  br label %return, !dbg !791

if.end23:                                         ; preds = %do.end
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !792
  %Instance24 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 0, !dbg !792
  %26 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance24, align 4, !dbg !792
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %26, i32 0, i32 7, !dbg !792
  store volatile i32 8, i32* %ICR, align 4, !dbg !792
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !793
  %28 = load i32, i32* %Timeout.addr, align 4, !dbg !794
  %29 = load i32, i32* %tickstart, align 4, !dbg !795
  %call25 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %27, i32 65536, i8 zeroext 1, i32 %28, i32 %29), !dbg !796
  %conv26 = zext i8 %call25 to i32, !dbg !796
  %cmp27 = icmp ne i32 %conv26, 0, !dbg !797
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !796

if.then29:                                        ; preds = %if.end23
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !798
  %Instance30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 0, !dbg !799
  %31 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance30, align 4, !dbg !799
  %CR231 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %31, i32 0, i32 1, !dbg !800
  %32 = load volatile i32, i32* %CR231, align 4, !dbg !801
  %or32 = or i32 %32, 32768, !dbg !801
  store volatile i32 %or32, i32* %CR231, align 4, !dbg !801
  store i8 1, i8* %retval, align 1, !dbg !802
  br label %return, !dbg !802

if.end33:                                         ; preds = %if.end23
  br label %while.cond, !dbg !803

while.cond:                                       ; preds = %if.end59, %if.end33
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !804
  %XferCount34 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 4, !dbg !805
  %34 = load volatile i16, i16* %XferCount34, align 2, !dbg !805
  %conv35 = zext i16 %34 to i32, !dbg !804
  %cmp36 = icmp ugt i32 %conv35, 0, !dbg !806
  br i1 %cmp36, label %while.body, label %while.end, !dbg !803

while.body:                                       ; preds = %while.cond
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !807
  %36 = load i32, i32* %Timeout.addr, align 4, !dbg !808
  %37 = load i32, i32* %tickstart, align 4, !dbg !809
  %call38 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnRXNEFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %35, i32 %36, i32 %37), !dbg !810
  %conv39 = zext i8 %call38 to i32, !dbg !810
  %cmp40 = icmp ne i32 %conv39, 0, !dbg !811
  br i1 %cmp40, label %if.then42, label %if.end59, !dbg !810

if.then42:                                        ; preds = %while.body
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !812
  %Instance43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 0, !dbg !813
  %39 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance43, align 4, !dbg !813
  %CR244 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %39, i32 0, i32 1, !dbg !814
  %40 = load volatile i32, i32* %CR244, align 4, !dbg !815
  %or45 = or i32 %40, 32768, !dbg !815
  store volatile i32 %or45, i32* %CR244, align 4, !dbg !815
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !816
  %Instance46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 0, !dbg !816
  %42 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance46, align 4, !dbg !816
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %42, i32 0, i32 6, !dbg !816
  %43 = load volatile i32, i32* %ISR, align 4, !dbg !816
  %and47 = and i32 %43, 4, !dbg !816
  %cmp48 = icmp eq i32 %and47, 4, !dbg !816
  %44 = zext i1 %cmp48 to i64, !dbg !816
  %cond = select i1 %cmp48, i32 1, i32 0, !dbg !816
  %cmp50 = icmp eq i32 %cond, 1, !dbg !817
  br i1 %cmp50, label %if.then52, label %if.end58, !dbg !816

if.then52:                                        ; preds = %if.then42
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !818
  %Instance53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 0, !dbg !819
  %46 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance53, align 4, !dbg !819
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %46, i32 0, i32 9, !dbg !820
  %47 = load volatile i32, i32* %RXDR, align 4, !dbg !820
  %conv54 = trunc i32 %47 to i8, !dbg !821
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !822
  %pBuffPtr55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 2, !dbg !823
  %49 = load i8*, i8** %pBuffPtr55, align 4, !dbg !823
  store i8 %conv54, i8* %49, align 1, !dbg !824
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !825
  %pBuffPtr56 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 2, !dbg !826
  %51 = load i8*, i8** %pBuffPtr56, align 4, !dbg !827
  %incdec.ptr = getelementptr inbounds i8, i8* %51, i32 1, !dbg !827
  store i8* %incdec.ptr, i8** %pBuffPtr56, align 4, !dbg !827
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !828
  %XferCount57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 4, !dbg !829
  %53 = load volatile i16, i16* %XferCount57, align 2, !dbg !830
  %dec = add i16 %53, -1, !dbg !830
  store volatile i16 %dec, i16* %XferCount57, align 2, !dbg !830
  br label %if.end58, !dbg !831

if.end58:                                         ; preds = %if.then52, %if.then42
  store i8 1, i8* %retval, align 1, !dbg !832
  br label %return, !dbg !832

if.end59:                                         ; preds = %while.body
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !833
  %Instance60 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 0, !dbg !834
  %55 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance60, align 4, !dbg !834
  %RXDR61 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %55, i32 0, i32 9, !dbg !835
  %56 = load volatile i32, i32* %RXDR61, align 4, !dbg !835
  %conv62 = trunc i32 %56 to i8, !dbg !836
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !837
  %pBuffPtr63 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 2, !dbg !838
  %58 = load i8*, i8** %pBuffPtr63, align 4, !dbg !838
  store i8 %conv62, i8* %58, align 1, !dbg !839
  %59 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !840
  %pBuffPtr64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %59, i32 0, i32 2, !dbg !841
  %60 = load i8*, i8** %pBuffPtr64, align 4, !dbg !842
  %incdec.ptr65 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !842
  store i8* %incdec.ptr65, i8** %pBuffPtr64, align 4, !dbg !842
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !843
  %XferCount66 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %61, i32 0, i32 4, !dbg !844
  %62 = load volatile i16, i16* %XferCount66, align 2, !dbg !845
  %dec67 = add i16 %62, -1, !dbg !845
  store volatile i16 %dec67, i16* %XferCount66, align 2, !dbg !845
  br label %while.cond, !dbg !803, !llvm.loop !846

while.end:                                        ; preds = %while.cond
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !848
  %64 = load i32, i32* %Timeout.addr, align 4, !dbg !849
  %65 = load i32, i32* %tickstart, align 4, !dbg !850
  %call68 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnSTOPFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %63, i32 %64, i32 %65), !dbg !851
  %conv69 = zext i8 %call68 to i32, !dbg !851
  %cmp70 = icmp ne i32 %conv69, 0, !dbg !852
  br i1 %cmp70, label %if.then72, label %if.end76, !dbg !851

if.then72:                                        ; preds = %while.end
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !853
  %Instance73 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 0, !dbg !854
  %67 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance73, align 4, !dbg !854
  %CR274 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %67, i32 0, i32 1, !dbg !855
  %68 = load volatile i32, i32* %CR274, align 4, !dbg !856
  %or75 = or i32 %68, 32768, !dbg !856
  store volatile i32 %or75, i32* %CR274, align 4, !dbg !856
  store i8 1, i8* %retval, align 1, !dbg !857
  br label %return, !dbg !857

if.end76:                                         ; preds = %while.end
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !858
  %Instance77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 0, !dbg !858
  %70 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance77, align 4, !dbg !858
  %ICR78 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %70, i32 0, i32 7, !dbg !858
  store volatile i32 32, i32* %ICR78, align 4, !dbg !858
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !859
  %72 = load i32, i32* %Timeout.addr, align 4, !dbg !860
  %73 = load i32, i32* %tickstart, align 4, !dbg !861
  %call79 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %71, i32 32768, i8 zeroext 1, i32 %72, i32 %73), !dbg !862
  %conv80 = zext i8 %call79 to i32, !dbg !862
  %cmp81 = icmp ne i32 %conv80, 0, !dbg !863
  br i1 %cmp81, label %if.then83, label %if.end87, !dbg !862

if.then83:                                        ; preds = %if.end76
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !864
  %Instance84 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 0, !dbg !865
  %75 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance84, align 4, !dbg !865
  %CR285 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %75, i32 0, i32 1, !dbg !866
  %76 = load volatile i32, i32* %CR285, align 4, !dbg !867
  %or86 = or i32 %76, 32768, !dbg !867
  store volatile i32 %or86, i32* %CR285, align 4, !dbg !867
  store i8 1, i8* %retval, align 1, !dbg !868
  br label %return, !dbg !868

if.end87:                                         ; preds = %if.end76
  %77 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !869
  %Instance88 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %77, i32 0, i32 0, !dbg !870
  %78 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance88, align 4, !dbg !870
  %CR289 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %78, i32 0, i32 1, !dbg !871
  %79 = load volatile i32, i32* %CR289, align 4, !dbg !872
  %or90 = or i32 %79, 32768, !dbg !872
  store volatile i32 %or90, i32* %CR289, align 4, !dbg !872
  %80 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !873
  %State91 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %80, i32 0, i32 11, !dbg !874
  store volatile i8 32, i8* %State91, align 1, !dbg !875
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !876
  %Mode92 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %81, i32 0, i32 12, !dbg !877
  store volatile i8 0, i8* %Mode92, align 2, !dbg !878
  br label %do.body93, !dbg !879

do.body93:                                        ; preds = %if.end87
  %82 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !879
  %Lock94 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %82, i32 0, i32 10, !dbg !879
  store i8 0, i8* %Lock94, align 4, !dbg !879
  br label %do.end95, !dbg !879

do.end95:                                         ; preds = %do.body93
  store i8 0, i8* %retval, align 1, !dbg !880
  br label %return, !dbg !880

if.else96:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !881
  br label %return, !dbg !881

return:                                           ; preds = %if.else96, %do.end95, %if.then83, %if.then72, %if.end58, %if.then29, %if.then20, %if.then11, %if.then7
  %83 = load i8, i8* %retval, align 1, !dbg !882
  ret i8 %83, !dbg !882
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Transmit_IT(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size) #0 !dbg !883 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %xfermode = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !884
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !885
  %1 = load volatile i8, i8* %State, align 1, !dbg !885
  %conv = zext i8 %1 to i32, !dbg !884
  %cmp = icmp eq i32 %conv, 32, !dbg !886
  br i1 %cmp, label %if.then, label %if.else28, !dbg !884

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !887
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 0, !dbg !887
  %3 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !887
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %3, i32 0, i32 6, !dbg !887
  %4 = load volatile i32, i32* %ISR, align 4, !dbg !887
  %and = and i32 %4, 32768, !dbg !887
  %cmp2 = icmp eq i32 %and, 32768, !dbg !887
  %5 = zext i1 %cmp2 to i64, !dbg !887
  %cond = select i1 %cmp2, i32 1, i32 0, !dbg !887
  %cmp4 = icmp eq i32 %cond, 1, !dbg !888
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !887

if.then6:                                         ; preds = %if.then
  store i8 2, i8* %retval, align 1, !dbg !889
  br label %return, !dbg !889

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !890

do.body:                                          ; preds = %if.end
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !890
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 10, !dbg !890
  %7 = load i8, i8* %Lock, align 4, !dbg !890
  %conv7 = zext i8 %7 to i32, !dbg !890
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !890
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !890

if.then10:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !890
  br label %return, !dbg !890

if.else:                                          ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !890
  %Lock11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 10, !dbg !890
  store i8 1, i8* %Lock11, align 4, !dbg !890
  br label %if.end12

if.end12:                                         ; preds = %if.else
  br label %do.end, !dbg !890

do.end:                                           ; preds = %if.end12
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !891
  %State13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !892
  store volatile i8 33, i8* %State13, align 1, !dbg !893
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !894
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 12, !dbg !895
  store volatile i8 16, i8* %Mode, align 2, !dbg !896
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !897
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 13, !dbg !898
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !899
  %12 = load i8*, i8** %pData.addr, align 4, !dbg !900
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !901
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 2, !dbg !902
  store i8* %12, i8** %pBuffPtr, align 4, !dbg !903
  %14 = load i16, i16* %Size.addr, align 2, !dbg !904
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !905
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !906
  store volatile i16 %14, i16* %XferCount, align 2, !dbg !907
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !908
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 5, !dbg !909
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !910
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !911
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 7, !dbg !912
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !913
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !914
  %XferCount14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !915
  %19 = load volatile i16, i16* %XferCount14, align 2, !dbg !915
  %conv15 = zext i16 %19 to i32, !dbg !914
  %cmp16 = icmp ugt i32 %conv15, 255, !dbg !916
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !914

if.then18:                                        ; preds = %do.end
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !917
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !918
  store i16 255, i16* %XferSize, align 4, !dbg !919
  store i32 16777216, i32* %xfermode, align 4, !dbg !920
  br label %if.end22, !dbg !921

if.else19:                                        ; preds = %do.end
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !922
  %XferCount20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 4, !dbg !923
  %22 = load volatile i16, i16* %XferCount20, align 2, !dbg !923
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !924
  %XferSize21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 3, !dbg !925
  store i16 %22, i16* %XferSize21, align 4, !dbg !926
  store i32 33554432, i32* %xfermode, align 4, !dbg !927
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then18
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !928
  %25 = load i16, i16* %DevAddress.addr, align 2, !dbg !929
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !930
  %XferSize23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 3, !dbg !931
  %27 = load i16, i16* %XferSize23, align 4, !dbg !931
  %conv24 = trunc i16 %27 to i8, !dbg !932
  %28 = load i32, i32* %xfermode, align 4, !dbg !933
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %24, i16 zeroext %25, i8 zeroext %conv24, i32 %28, i32 -2147475456), !dbg !934
  br label %do.body25, !dbg !935

do.body25:                                        ; preds = %if.end22
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !935
  %Lock26 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 10, !dbg !935
  store i8 0, i8* %Lock26, align 4, !dbg !935
  br label %do.end27, !dbg !935

do.end27:                                         ; preds = %do.body25
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !936
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %30, i16 zeroext 1), !dbg !937
  store i8 0, i8* %retval, align 1, !dbg !938
  br label %return, !dbg !938

if.else28:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !939
  br label %return, !dbg !939

return:                                           ; preds = %if.else28, %do.end27, %if.then10, %if.then6
  %31 = load i8, i8* %retval, align 1, !dbg !940
  ret i8 %31, !dbg !940
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_Master_ISR_IT(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ITFlags, i32 %ITSources) #0 !dbg !941 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ITFlags.addr = alloca i32, align 4
  %ITSources.addr = alloca i32, align 4
  %devaddress = alloca i16, align 2
  %tmpITFlags = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ITFlags, i32* %ITFlags.addr, align 4
  store i32 %ITSources, i32* %ITSources.addr, align 4
  %0 = load i32, i32* %ITFlags.addr, align 4, !dbg !942
  store i32 %0, i32* %tmpITFlags, align 4, !dbg !943
  br label %do.body, !dbg !944

do.body:                                          ; preds = %entry
  %1 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !944
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %1, i32 0, i32 10, !dbg !944
  %2 = load i8, i8* %Lock, align 4, !dbg !944
  %conv = zext i8 %2 to i32, !dbg !944
  %cmp = icmp eq i32 %conv, 1, !dbg !944
  br i1 %cmp, label %if.then, label %if.else, !dbg !944

if.then:                                          ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !944
  br label %return, !dbg !944

if.else:                                          ; preds = %do.body
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !944
  %Lock2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 10, !dbg !944
  store i8 1, i8* %Lock2, align 4, !dbg !944
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !944

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %tmpITFlags, align 4, !dbg !945
  %and = and i32 %4, 16, !dbg !945
  %cmp3 = icmp eq i32 %and, 16, !dbg !945
  %5 = zext i1 %cmp3 to i64, !dbg !945
  %cond = select i1 %cmp3, i32 1, i32 0, !dbg !945
  %cmp5 = icmp ne i32 %cond, 0, !dbg !946
  br i1 %cmp5, label %land.lhs.true, label %if.else14, !dbg !947

land.lhs.true:                                    ; preds = %do.end
  %6 = load i32, i32* %ITSources.addr, align 4, !dbg !948
  %and7 = and i32 %6, 16, !dbg !948
  %cmp8 = icmp eq i32 %and7, 16, !dbg !948
  %7 = zext i1 %cmp8 to i64, !dbg !948
  %cond10 = select i1 %cmp8, i32 1, i32 0, !dbg !948
  %cmp11 = icmp ne i32 %cond10, 0, !dbg !949
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !950

if.then13:                                        ; preds = %land.lhs.true
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !951
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 0, !dbg !951
  %9 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !951
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %9, i32 0, i32 7, !dbg !951
  store volatile i32 16, i32* %ICR, align 4, !dbg !951
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !952
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 13, !dbg !953
  %11 = load volatile i32, i32* %ErrorCode, align 4, !dbg !954
  %or = or i32 %11, 4, !dbg !954
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !954
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !955
  call arm_aapcs_vfpcc void @I2C_Flush_TXDR(%struct.__I2C_HandleTypeDef* %12), !dbg !956
  br label %if.end161, !dbg !957

if.else14:                                        ; preds = %land.lhs.true, %do.end
  %13 = load i32, i32* %tmpITFlags, align 4, !dbg !958
  %and15 = and i32 %13, 4, !dbg !958
  %cmp16 = icmp eq i32 %and15, 4, !dbg !958
  %14 = zext i1 %cmp16 to i64, !dbg !958
  %cond18 = select i1 %cmp16, i32 1, i32 0, !dbg !958
  %cmp19 = icmp ne i32 %cond18, 0, !dbg !959
  br i1 %cmp19, label %land.lhs.true21, label %if.else34, !dbg !960

land.lhs.true21:                                  ; preds = %if.else14
  %15 = load i32, i32* %ITSources.addr, align 4, !dbg !961
  %and22 = and i32 %15, 4, !dbg !961
  %cmp23 = icmp eq i32 %and22, 4, !dbg !961
  %16 = zext i1 %cmp23 to i64, !dbg !961
  %cond25 = select i1 %cmp23, i32 1, i32 0, !dbg !961
  %cmp26 = icmp ne i32 %cond25, 0, !dbg !962
  br i1 %cmp26, label %if.then28, label %if.else34, !dbg !963

if.then28:                                        ; preds = %land.lhs.true21
  %17 = load i32, i32* %tmpITFlags, align 4, !dbg !964
  %and29 = and i32 %17, -5, !dbg !964
  store i32 %and29, i32* %tmpITFlags, align 4, !dbg !964
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !965
  %Instance30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 0, !dbg !966
  %19 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance30, align 4, !dbg !966
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %19, i32 0, i32 9, !dbg !967
  %20 = load volatile i32, i32* %RXDR, align 4, !dbg !967
  %conv31 = trunc i32 %20 to i8, !dbg !968
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !969
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 2, !dbg !970
  %22 = load i8*, i8** %pBuffPtr, align 4, !dbg !970
  store i8 %conv31, i8* %22, align 1, !dbg !971
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !972
  %pBuffPtr32 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 2, !dbg !973
  %24 = load i8*, i8** %pBuffPtr32, align 4, !dbg !974
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1, !dbg !974
  store i8* %incdec.ptr, i8** %pBuffPtr32, align 4, !dbg !974
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !975
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 3, !dbg !976
  %26 = load i16, i16* %XferSize, align 4, !dbg !977
  %dec = add i16 %26, -1, !dbg !977
  store i16 %dec, i16* %XferSize, align 4, !dbg !977
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !978
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 4, !dbg !979
  %28 = load volatile i16, i16* %XferCount, align 2, !dbg !980
  %dec33 = add i16 %28, -1, !dbg !980
  store volatile i16 %dec33, i16* %XferCount, align 2, !dbg !980
  br label %if.end160, !dbg !981

if.else34:                                        ; preds = %land.lhs.true21, %if.else14
  %29 = load i32, i32* %tmpITFlags, align 4, !dbg !982
  %and35 = and i32 %29, 2, !dbg !982
  %cmp36 = icmp eq i32 %and35, 2, !dbg !982
  %30 = zext i1 %cmp36 to i64, !dbg !982
  %cond38 = select i1 %cmp36, i32 1, i32 0, !dbg !982
  %cmp39 = icmp ne i32 %cond38, 0, !dbg !983
  br i1 %cmp39, label %land.lhs.true41, label %if.else58, !dbg !984

land.lhs.true41:                                  ; preds = %if.else34
  %31 = load i32, i32* %ITSources.addr, align 4, !dbg !985
  %and42 = and i32 %31, 2, !dbg !985
  %cmp43 = icmp eq i32 %and42, 2, !dbg !985
  %32 = zext i1 %cmp43 to i64, !dbg !985
  %cond45 = select i1 %cmp43, i32 1, i32 0, !dbg !985
  %cmp46 = icmp ne i32 %cond45, 0, !dbg !986
  br i1 %cmp46, label %if.then48, label %if.else58, !dbg !987

if.then48:                                        ; preds = %land.lhs.true41
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !988
  %pBuffPtr49 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 2, !dbg !989
  %34 = load i8*, i8** %pBuffPtr49, align 4, !dbg !989
  %35 = load i8, i8* %34, align 1, !dbg !990
  %conv50 = zext i8 %35 to i32, !dbg !990
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !991
  %Instance51 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 0, !dbg !992
  %37 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance51, align 4, !dbg !992
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %37, i32 0, i32 10, !dbg !993
  store volatile i32 %conv50, i32* %TXDR, align 4, !dbg !994
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !995
  %pBuffPtr52 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 2, !dbg !996
  %39 = load i8*, i8** %pBuffPtr52, align 4, !dbg !997
  %incdec.ptr53 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !997
  store i8* %incdec.ptr53, i8** %pBuffPtr52, align 4, !dbg !997
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !998
  %XferSize54 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 3, !dbg !999
  %41 = load i16, i16* %XferSize54, align 4, !dbg !1000
  %dec55 = add i16 %41, -1, !dbg !1000
  store i16 %dec55, i16* %XferSize54, align 4, !dbg !1000
  %42 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1001
  %XferCount56 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %42, i32 0, i32 4, !dbg !1002
  %43 = load volatile i16, i16* %XferCount56, align 2, !dbg !1003
  %dec57 = add i16 %43, -1, !dbg !1003
  store volatile i16 %dec57, i16* %XferCount56, align 2, !dbg !1003
  br label %if.end159, !dbg !1004

if.else58:                                        ; preds = %land.lhs.true41, %if.else34
  %44 = load i32, i32* %tmpITFlags, align 4, !dbg !1005
  %and59 = and i32 %44, 128, !dbg !1005
  %cmp60 = icmp eq i32 %and59, 128, !dbg !1005
  %45 = zext i1 %cmp60 to i64, !dbg !1005
  %cond62 = select i1 %cmp60, i32 1, i32 0, !dbg !1005
  %cmp63 = icmp ne i32 %cond62, 0, !dbg !1006
  br i1 %cmp63, label %land.lhs.true65, label %if.else118, !dbg !1007

land.lhs.true65:                                  ; preds = %if.else58
  %46 = load i32, i32* %ITSources.addr, align 4, !dbg !1008
  %and66 = and i32 %46, 64, !dbg !1008
  %cmp67 = icmp eq i32 %and66, 64, !dbg !1008
  %47 = zext i1 %cmp67 to i64, !dbg !1008
  %cond69 = select i1 %cmp67, i32 1, i32 0, !dbg !1008
  %cmp70 = icmp ne i32 %cond69, 0, !dbg !1009
  br i1 %cmp70, label %if.then72, label %if.else118, !dbg !1010

if.then72:                                        ; preds = %land.lhs.true65
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1011
  %XferCount73 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 4, !dbg !1012
  %49 = load volatile i16, i16* %XferCount73, align 2, !dbg !1012
  %conv74 = zext i16 %49 to i32, !dbg !1011
  %cmp75 = icmp ne i32 %conv74, 0, !dbg !1013
  br i1 %cmp75, label %land.lhs.true77, label %if.else108, !dbg !1014

land.lhs.true77:                                  ; preds = %if.then72
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1015
  %XferSize78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 3, !dbg !1016
  %51 = load i16, i16* %XferSize78, align 4, !dbg !1016
  %conv79 = zext i16 %51 to i32, !dbg !1015
  %cmp80 = icmp eq i32 %conv79, 0, !dbg !1017
  br i1 %cmp80, label %if.then82, label %if.else108, !dbg !1018

if.then82:                                        ; preds = %land.lhs.true77
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1019
  %Instance83 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 0, !dbg !1020
  %53 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance83, align 4, !dbg !1020
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %53, i32 0, i32 1, !dbg !1021
  %54 = load volatile i32, i32* %CR2, align 4, !dbg !1021
  %and84 = and i32 %54, 1023, !dbg !1022
  %conv85 = trunc i32 %and84 to i16, !dbg !1023
  store i16 %conv85, i16* %devaddress, align 2, !dbg !1024
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1025
  %XferCount86 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 4, !dbg !1026
  %56 = load volatile i16, i16* %XferCount86, align 2, !dbg !1026
  %conv87 = zext i16 %56 to i32, !dbg !1025
  %cmp88 = icmp ugt i32 %conv87, 255, !dbg !1027
  br i1 %cmp88, label %if.then90, label %if.else94, !dbg !1025

if.then90:                                        ; preds = %if.then82
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1028
  %XferSize91 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 3, !dbg !1029
  store i16 255, i16* %XferSize91, align 4, !dbg !1030
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1031
  %59 = load i16, i16* %devaddress, align 2, !dbg !1032
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1033
  %XferSize92 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 3, !dbg !1034
  %61 = load i16, i16* %XferSize92, align 4, !dbg !1034
  %conv93 = trunc i16 %61 to i8, !dbg !1035
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %58, i16 zeroext %59, i8 zeroext %conv93, i32 16777216, i32 0), !dbg !1036
  br label %if.end107, !dbg !1037

if.else94:                                        ; preds = %if.then82
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1038
  %XferCount95 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 4, !dbg !1039
  %63 = load volatile i16, i16* %XferCount95, align 2, !dbg !1039
  %64 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1040
  %XferSize96 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %64, i32 0, i32 3, !dbg !1041
  store i16 %63, i16* %XferSize96, align 4, !dbg !1042
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1043
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 5, !dbg !1044
  %66 = load volatile i32, i32* %XferOptions, align 4, !dbg !1044
  %cmp97 = icmp ne i32 %66, -65536, !dbg !1045
  br i1 %cmp97, label %if.then99, label %if.else103, !dbg !1043

if.then99:                                        ; preds = %if.else94
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1046
  %68 = load i16, i16* %devaddress, align 2, !dbg !1047
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1048
  %XferSize100 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 3, !dbg !1049
  %70 = load i16, i16* %XferSize100, align 4, !dbg !1049
  %conv101 = trunc i16 %70 to i8, !dbg !1050
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1051
  %XferOptions102 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %71, i32 0, i32 5, !dbg !1052
  %72 = load volatile i32, i32* %XferOptions102, align 4, !dbg !1052
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %67, i16 zeroext %68, i8 zeroext %conv101, i32 %72, i32 0), !dbg !1053
  br label %if.end106, !dbg !1054

if.else103:                                       ; preds = %if.else94
  %73 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1055
  %74 = load i16, i16* %devaddress, align 2, !dbg !1056
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1057
  %XferSize104 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 3, !dbg !1058
  %76 = load i16, i16* %XferSize104, align 4, !dbg !1058
  %conv105 = trunc i16 %76 to i8, !dbg !1059
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %73, i16 zeroext %74, i8 zeroext %conv105, i32 33554432, i32 0), !dbg !1060
  br label %if.end106

if.end106:                                        ; preds = %if.else103, %if.then99
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then90
  br label %if.end117, !dbg !1061

if.else108:                                       ; preds = %land.lhs.true77, %if.then72
  %77 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1062
  %Instance109 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %77, i32 0, i32 0, !dbg !1062
  %78 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance109, align 4, !dbg !1062
  %CR2110 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %78, i32 0, i32 1, !dbg !1062
  %79 = load volatile i32, i32* %CR2110, align 4, !dbg !1062
  %and111 = and i32 %79, 33554432, !dbg !1062
  %cmp112 = icmp ne i32 %and111, 33554432, !dbg !1063
  br i1 %cmp112, label %if.then114, label %if.else115, !dbg !1062

if.then114:                                       ; preds = %if.else108
  %80 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1064
  call arm_aapcs_vfpcc void @I2C_ITMasterSeqCplt(%struct.__I2C_HandleTypeDef* %80), !dbg !1065
  br label %if.end116, !dbg !1066

if.else115:                                       ; preds = %if.else108
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1067
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %81, i32 64), !dbg !1068
  br label %if.end116

if.end116:                                        ; preds = %if.else115, %if.then114
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end107
  br label %if.end158, !dbg !1069

if.else118:                                       ; preds = %land.lhs.true65, %if.else58
  %82 = load i32, i32* %tmpITFlags, align 4, !dbg !1070
  %and119 = and i32 %82, 64, !dbg !1070
  %cmp120 = icmp eq i32 %and119, 64, !dbg !1070
  %83 = zext i1 %cmp120 to i64, !dbg !1070
  %cond122 = select i1 %cmp120, i32 1, i32 0, !dbg !1070
  %cmp123 = icmp ne i32 %cond122, 0, !dbg !1071
  br i1 %cmp123, label %land.lhs.true125, label %if.else156, !dbg !1072

land.lhs.true125:                                 ; preds = %if.else118
  %84 = load i32, i32* %ITSources.addr, align 4, !dbg !1073
  %and126 = and i32 %84, 64, !dbg !1073
  %cmp127 = icmp eq i32 %and126, 64, !dbg !1073
  %85 = zext i1 %cmp127 to i64, !dbg !1073
  %cond129 = select i1 %cmp127, i32 1, i32 0, !dbg !1073
  %cmp130 = icmp ne i32 %cond129, 0, !dbg !1074
  br i1 %cmp130, label %if.then132, label %if.else156, !dbg !1075

if.then132:                                       ; preds = %land.lhs.true125
  %86 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1076
  %XferCount133 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %86, i32 0, i32 4, !dbg !1077
  %87 = load volatile i16, i16* %XferCount133, align 2, !dbg !1077
  %conv134 = zext i16 %87 to i32, !dbg !1076
  %cmp135 = icmp eq i32 %conv134, 0, !dbg !1078
  br i1 %cmp135, label %if.then137, label %if.else154, !dbg !1076

if.then137:                                       ; preds = %if.then132
  %88 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1079
  %Instance138 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %88, i32 0, i32 0, !dbg !1079
  %89 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance138, align 4, !dbg !1079
  %CR2139 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %89, i32 0, i32 1, !dbg !1079
  %90 = load volatile i32, i32* %CR2139, align 4, !dbg !1079
  %and140 = and i32 %90, 33554432, !dbg !1079
  %cmp141 = icmp ne i32 %and140, 33554432, !dbg !1080
  br i1 %cmp141, label %if.then143, label %if.end153, !dbg !1079

if.then143:                                       ; preds = %if.then137
  %91 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1081
  %XferOptions144 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %91, i32 0, i32 5, !dbg !1082
  %92 = load volatile i32, i32* %XferOptions144, align 4, !dbg !1082
  %cmp145 = icmp eq i32 %92, -65536, !dbg !1083
  br i1 %cmp145, label %if.then147, label %if.else151, !dbg !1081

if.then147:                                       ; preds = %if.then143
  %93 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1084
  %Instance148 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %93, i32 0, i32 0, !dbg !1085
  %94 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance148, align 4, !dbg !1085
  %CR2149 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %94, i32 0, i32 1, !dbg !1086
  %95 = load volatile i32, i32* %CR2149, align 4, !dbg !1087
  %or150 = or i32 %95, 16384, !dbg !1087
  store volatile i32 %or150, i32* %CR2149, align 4, !dbg !1087
  br label %if.end152, !dbg !1088

if.else151:                                       ; preds = %if.then143
  %96 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1089
  call arm_aapcs_vfpcc void @I2C_ITMasterSeqCplt(%struct.__I2C_HandleTypeDef* %96), !dbg !1090
  br label %if.end152

if.end152:                                        ; preds = %if.else151, %if.then147
  br label %if.end153, !dbg !1091

if.end153:                                        ; preds = %if.end152, %if.then137
  br label %if.end155, !dbg !1092

if.else154:                                       ; preds = %if.then132
  %97 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1093
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %97, i32 64), !dbg !1094
  br label %if.end155

if.end155:                                        ; preds = %if.else154, %if.end153
  br label %if.end157, !dbg !1095

if.else156:                                       ; preds = %land.lhs.true125, %if.else118
  br label %if.end157

if.end157:                                        ; preds = %if.else156, %if.end155
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.end117
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then48
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.then28
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then13
  %98 = load i32, i32* %tmpITFlags, align 4, !dbg !1096
  %and162 = and i32 %98, 32, !dbg !1096
  %cmp163 = icmp eq i32 %and162, 32, !dbg !1096
  %99 = zext i1 %cmp163 to i64, !dbg !1096
  %cond165 = select i1 %cmp163, i32 1, i32 0, !dbg !1096
  %cmp166 = icmp ne i32 %cond165, 0, !dbg !1097
  br i1 %cmp166, label %land.lhs.true168, label %if.end176, !dbg !1098

land.lhs.true168:                                 ; preds = %if.end161
  %100 = load i32, i32* %ITSources.addr, align 4, !dbg !1099
  %and169 = and i32 %100, 32, !dbg !1099
  %cmp170 = icmp eq i32 %and169, 32, !dbg !1099
  %101 = zext i1 %cmp170 to i64, !dbg !1099
  %cond172 = select i1 %cmp170, i32 1, i32 0, !dbg !1099
  %cmp173 = icmp ne i32 %cond172, 0, !dbg !1100
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !1101

if.then175:                                       ; preds = %land.lhs.true168
  %102 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1102
  %103 = load i32, i32* %tmpITFlags, align 4, !dbg !1103
  call arm_aapcs_vfpcc void @I2C_ITMasterCplt(%struct.__I2C_HandleTypeDef* %102, i32 %103), !dbg !1104
  br label %if.end176, !dbg !1105

if.end176:                                        ; preds = %if.then175, %land.lhs.true168, %if.end161
  br label %do.body177, !dbg !1106

do.body177:                                       ; preds = %if.end176
  %104 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1106
  %Lock178 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %104, i32 0, i32 10, !dbg !1106
  store i8 0, i8* %Lock178, align 4, !dbg !1106
  br label %do.end179, !dbg !1106

do.end179:                                        ; preds = %do.body177
  store i8 0, i8* %retval, align 1, !dbg !1107
  br label %return, !dbg !1107

return:                                           ; preds = %do.end179, %if.then
  %105 = load i8, i8* %retval, align 1, !dbg !1108
  ret i8 %105, !dbg !1108
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %InterruptRequest) #0 !dbg !1109 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %InterruptRequest.addr = alloca i16, align 2
  %tmpisr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %InterruptRequest, i16* %InterruptRequest.addr, align 2
  store i32 0, i32* %tmpisr, align 4, !dbg !1110
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1111
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 7, !dbg !1112
  %1 = load i8 (%struct.__I2C_HandleTypeDef*, i32, i32)*, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !1112
  %cmp = icmp eq i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* %1, @I2C_Master_ISR_DMA, !dbg !1113
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1114

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1115
  %XferISR1 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 7, !dbg !1116
  %3 = load i8 (%struct.__I2C_HandleTypeDef*, i32, i32)*, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR1, align 4, !dbg !1116
  %cmp2 = icmp eq i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* %3, @I2C_Slave_ISR_DMA, !dbg !1117
  br i1 %cmp2, label %if.then, label %if.else, !dbg !1118

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !1119
  %conv = zext i16 %4 to i32, !dbg !1119
  %and = and i32 %conv, 32768, !dbg !1120
  %cmp3 = icmp eq i32 %and, 32768, !dbg !1121
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !1122

if.then5:                                         ; preds = %if.then
  %5 = load i32, i32* %tmpisr, align 4, !dbg !1123
  %or = or i32 %5, 184, !dbg !1123
  store i32 %or, i32* %tmpisr, align 4, !dbg !1123
  br label %if.end, !dbg !1124

if.end:                                           ; preds = %if.then5, %if.then
  %6 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !1125
  %conv6 = zext i16 %6 to i32, !dbg !1125
  %cmp7 = icmp eq i32 %conv6, 16, !dbg !1126
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !1125

if.then9:                                         ; preds = %if.end
  %7 = load i32, i32* %tmpisr, align 4, !dbg !1127
  %or10 = or i32 %7, 144, !dbg !1127
  store i32 %or10, i32* %tmpisr, align 4, !dbg !1127
  br label %if.end11, !dbg !1128

if.end11:                                         ; preds = %if.then9, %if.end
  %8 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !1129
  %conv12 = zext i16 %8 to i32, !dbg !1129
  %cmp13 = icmp eq i32 %conv12, 32, !dbg !1130
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !1129

if.then15:                                        ; preds = %if.end11
  %9 = load i32, i32* %tmpisr, align 4, !dbg !1131
  %or16 = or i32 %9, 96, !dbg !1131
  store i32 %or16, i32* %tmpisr, align 4, !dbg !1131
  br label %if.end17, !dbg !1132

if.end17:                                         ; preds = %if.then15, %if.end11
  %10 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !1133
  %conv18 = zext i16 %10 to i32, !dbg !1133
  %cmp19 = icmp eq i32 %conv18, 64, !dbg !1134
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !1133

if.then21:                                        ; preds = %if.end17
  %11 = load i32, i32* %tmpisr, align 4, !dbg !1135
  %or22 = or i32 %11, 64, !dbg !1135
  store i32 %or22, i32* %tmpisr, align 4, !dbg !1135
  br label %if.end23, !dbg !1136

if.end23:                                         ; preds = %if.then21, %if.end17
  br label %if.end51, !dbg !1137

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !1138
  %conv24 = zext i16 %12 to i32, !dbg !1138
  %and25 = and i32 %conv24, 32768, !dbg !1139
  %cmp26 = icmp eq i32 %and25, 32768, !dbg !1140
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !1141

if.then28:                                        ; preds = %if.else
  %13 = load i32, i32* %tmpisr, align 4, !dbg !1142
  %or29 = or i32 %13, 184, !dbg !1142
  store i32 %or29, i32* %tmpisr, align 4, !dbg !1142
  br label %if.end30, !dbg !1143

if.end30:                                         ; preds = %if.then28, %if.else
  %14 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !1144
  %conv31 = zext i16 %14 to i32, !dbg !1144
  %and32 = and i32 %conv31, 1, !dbg !1145
  %cmp33 = icmp eq i32 %and32, 1, !dbg !1146
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !1147

if.then35:                                        ; preds = %if.end30
  %15 = load i32, i32* %tmpisr, align 4, !dbg !1148
  %or36 = or i32 %15, 242, !dbg !1148
  store i32 %or36, i32* %tmpisr, align 4, !dbg !1148
  br label %if.end37, !dbg !1149

if.end37:                                         ; preds = %if.then35, %if.end30
  %16 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !1150
  %conv38 = zext i16 %16 to i32, !dbg !1150
  %and39 = and i32 %conv38, 2, !dbg !1151
  %cmp40 = icmp eq i32 %and39, 2, !dbg !1152
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !1153

if.then42:                                        ; preds = %if.end37
  %17 = load i32, i32* %tmpisr, align 4, !dbg !1154
  %or43 = or i32 %17, 244, !dbg !1154
  store i32 %or43, i32* %tmpisr, align 4, !dbg !1154
  br label %if.end44, !dbg !1155

if.end44:                                         ; preds = %if.then42, %if.end37
  %18 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !1156
  %conv45 = zext i16 %18 to i32, !dbg !1156
  %cmp46 = icmp eq i32 %conv45, 32, !dbg !1157
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !1156

if.then48:                                        ; preds = %if.end44
  %19 = load i32, i32* %tmpisr, align 4, !dbg !1158
  %or49 = or i32 %19, 32, !dbg !1158
  store i32 %or49, i32* %tmpisr, align 4, !dbg !1158
  br label %if.end50, !dbg !1159

if.end50:                                         ; preds = %if.then48, %if.end44
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end23
  %20 = load i32, i32* %tmpisr, align 4, !dbg !1160
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1160
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 0, !dbg !1160
  %22 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1160
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %22, i32 0, i32 0, !dbg !1160
  %23 = load volatile i32, i32* %CR1, align 4, !dbg !1160
  %or52 = or i32 %23, %20, !dbg !1160
  store volatile i32 %or52, i32* %CR1, align 4, !dbg !1160
  ret void, !dbg !1161
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Receive_IT(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size) #0 !dbg !1162 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %xfermode = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1163
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !1164
  %1 = load volatile i8, i8* %State, align 1, !dbg !1164
  %conv = zext i8 %1 to i32, !dbg !1163
  %cmp = icmp eq i32 %conv, 32, !dbg !1165
  br i1 %cmp, label %if.then, label %if.else28, !dbg !1163

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1166
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 0, !dbg !1166
  %3 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1166
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %3, i32 0, i32 6, !dbg !1166
  %4 = load volatile i32, i32* %ISR, align 4, !dbg !1166
  %and = and i32 %4, 32768, !dbg !1166
  %cmp2 = icmp eq i32 %and, 32768, !dbg !1166
  %5 = zext i1 %cmp2 to i64, !dbg !1166
  %cond = select i1 %cmp2, i32 1, i32 0, !dbg !1166
  %cmp4 = icmp eq i32 %cond, 1, !dbg !1167
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !1166

if.then6:                                         ; preds = %if.then
  store i8 2, i8* %retval, align 1, !dbg !1168
  br label %return, !dbg !1168

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !1169

do.body:                                          ; preds = %if.end
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1169
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 10, !dbg !1169
  %7 = load i8, i8* %Lock, align 4, !dbg !1169
  %conv7 = zext i8 %7 to i32, !dbg !1169
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !1169
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !1169

if.then10:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !1169
  br label %return, !dbg !1169

if.else:                                          ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1169
  %Lock11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 10, !dbg !1169
  store i8 1, i8* %Lock11, align 4, !dbg !1169
  br label %if.end12

if.end12:                                         ; preds = %if.else
  br label %do.end, !dbg !1169

do.end:                                           ; preds = %if.end12
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1170
  %State13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !1171
  store volatile i8 34, i8* %State13, align 1, !dbg !1172
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1173
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 12, !dbg !1174
  store volatile i8 16, i8* %Mode, align 2, !dbg !1175
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1176
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 13, !dbg !1177
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !1178
  %12 = load i8*, i8** %pData.addr, align 4, !dbg !1179
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1180
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 2, !dbg !1181
  store i8* %12, i8** %pBuffPtr, align 4, !dbg !1182
  %14 = load i16, i16* %Size.addr, align 2, !dbg !1183
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1184
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !1185
  store volatile i16 %14, i16* %XferCount, align 2, !dbg !1186
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1187
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 5, !dbg !1188
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !1189
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1190
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 7, !dbg !1191
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !1192
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1193
  %XferCount14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !1194
  %19 = load volatile i16, i16* %XferCount14, align 2, !dbg !1194
  %conv15 = zext i16 %19 to i32, !dbg !1193
  %cmp16 = icmp ugt i32 %conv15, 255, !dbg !1195
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !1193

if.then18:                                        ; preds = %do.end
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1196
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !1197
  store i16 255, i16* %XferSize, align 4, !dbg !1198
  store i32 16777216, i32* %xfermode, align 4, !dbg !1199
  br label %if.end22, !dbg !1200

if.else19:                                        ; preds = %do.end
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1201
  %XferCount20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 4, !dbg !1202
  %22 = load volatile i16, i16* %XferCount20, align 2, !dbg !1202
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1203
  %XferSize21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 3, !dbg !1204
  store i16 %22, i16* %XferSize21, align 4, !dbg !1205
  store i32 33554432, i32* %xfermode, align 4, !dbg !1206
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then18
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1207
  %25 = load i16, i16* %DevAddress.addr, align 2, !dbg !1208
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1209
  %XferSize23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 3, !dbg !1210
  %27 = load i16, i16* %XferSize23, align 4, !dbg !1210
  %conv24 = trunc i16 %27 to i8, !dbg !1211
  %28 = load i32, i32* %xfermode, align 4, !dbg !1212
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %24, i16 zeroext %25, i8 zeroext %conv24, i32 %28, i32 -2147474432), !dbg !1213
  br label %do.body25, !dbg !1214

do.body25:                                        ; preds = %if.end22
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1214
  %Lock26 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 10, !dbg !1214
  store i8 0, i8* %Lock26, align 4, !dbg !1214
  br label %do.end27, !dbg !1214

do.end27:                                         ; preds = %do.body25
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1215
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %30, i16 zeroext 2), !dbg !1216
  store i8 0, i8* %retval, align 1, !dbg !1217
  br label %return, !dbg !1217

if.else28:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !1218
  br label %return, !dbg !1218

return:                                           ; preds = %if.else28, %do.end27, %if.then10, %if.then6
  %31 = load i8, i8* %retval, align 1, !dbg !1219
  ret i8 %31, !dbg !1219
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Transmit_IT(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size) #0 !dbg !1220 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1221
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !1222
  %1 = load volatile i8, i8* %State, align 1, !dbg !1222
  %conv = zext i8 %1 to i32, !dbg !1221
  %cmp = icmp eq i32 %conv, 32, !dbg !1223
  br i1 %cmp, label %if.then, label %if.else12, !dbg !1221

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !1224

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1224
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !1224
  %3 = load i8, i8* %Lock, align 4, !dbg !1224
  %conv2 = zext i8 %3 to i32, !dbg !1224
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !1224
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !1224

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !1224
  br label %return, !dbg !1224

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1224
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !1224
  store i8 1, i8* %Lock6, align 4, !dbg !1224
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !1224

do.end:                                           ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1225
  %State7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 11, !dbg !1226
  store volatile i8 33, i8* %State7, align 1, !dbg !1227
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1228
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 12, !dbg !1229
  store volatile i8 32, i8* %Mode, align 2, !dbg !1230
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1231
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 13, !dbg !1232
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !1233
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1234
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 0, !dbg !1235
  %9 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1235
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %9, i32 0, i32 1, !dbg !1236
  %10 = load volatile i32, i32* %CR2, align 4, !dbg !1237
  %and = and i32 %10, -32769, !dbg !1237
  store volatile i32 %and, i32* %CR2, align 4, !dbg !1237
  %11 = load i8*, i8** %pData.addr, align 4, !dbg !1238
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1239
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 2, !dbg !1240
  store i8* %11, i8** %pBuffPtr, align 4, !dbg !1241
  %13 = load i16, i16* %Size.addr, align 2, !dbg !1242
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1243
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 4, !dbg !1244
  store volatile i16 %13, i16* %XferCount, align 2, !dbg !1245
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1246
  %XferCount8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !1247
  %16 = load volatile i16, i16* %XferCount8, align 2, !dbg !1247
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1248
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !1249
  store i16 %16, i16* %XferSize, align 4, !dbg !1250
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1251
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 5, !dbg !1252
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !1253
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1254
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 7, !dbg !1255
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !1256
  br label %do.body9, !dbg !1257

do.body9:                                         ; preds = %do.end
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1257
  %Lock10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 10, !dbg !1257
  store i8 0, i8* %Lock10, align 4, !dbg !1257
  br label %do.end11, !dbg !1257

do.end11:                                         ; preds = %do.body9
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1258
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %21, i16 zeroext -32767), !dbg !1259
  store i8 0, i8* %retval, align 1, !dbg !1260
  br label %return, !dbg !1260

if.else12:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !1261
  br label %return, !dbg !1261

return:                                           ; preds = %if.else12, %do.end11, %if.then5
  %22 = load i8, i8* %retval, align 1, !dbg !1262
  ret i8 %22, !dbg !1262
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_Slave_ISR_IT(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ITFlags, i32 %ITSources) #0 !dbg !1263 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ITFlags.addr = alloca i32, align 4
  %ITSources.addr = alloca i32, align 4
  %tmpoptions = alloca i32, align 4
  %tmpITFlags = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ITFlags, i32* %ITFlags.addr, align 4
  store i32 %ITSources, i32* %ITSources.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1264
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 5, !dbg !1265
  %1 = load volatile i32, i32* %XferOptions, align 4, !dbg !1265
  store i32 %1, i32* %tmpoptions, align 4, !dbg !1266
  %2 = load i32, i32* %ITFlags.addr, align 4, !dbg !1267
  store i32 %2, i32* %tmpITFlags, align 4, !dbg !1268
  br label %do.body, !dbg !1269

do.body:                                          ; preds = %entry
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1269
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 10, !dbg !1269
  %4 = load i8, i8* %Lock, align 4, !dbg !1269
  %conv = zext i8 %4 to i32, !dbg !1269
  %cmp = icmp eq i32 %conv, 1, !dbg !1269
  br i1 %cmp, label %if.then, label %if.else, !dbg !1269

if.then:                                          ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !1269
  br label %return, !dbg !1269

if.else:                                          ; preds = %do.body
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1269
  %Lock2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 10, !dbg !1269
  store i8 1, i8* %Lock2, align 4, !dbg !1269
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !1269

do.end:                                           ; preds = %if.end
  %6 = load i32, i32* %tmpITFlags, align 4, !dbg !1270
  %and = and i32 %6, 32, !dbg !1270
  %cmp3 = icmp eq i32 %and, 32, !dbg !1270
  %7 = zext i1 %cmp3 to i64, !dbg !1270
  %cond = select i1 %cmp3, i32 1, i32 0, !dbg !1270
  %cmp5 = icmp ne i32 %cond, 0, !dbg !1271
  br i1 %cmp5, label %land.lhs.true, label %if.end14, !dbg !1272

land.lhs.true:                                    ; preds = %do.end
  %8 = load i32, i32* %ITSources.addr, align 4, !dbg !1273
  %and7 = and i32 %8, 32, !dbg !1273
  %cmp8 = icmp eq i32 %and7, 32, !dbg !1273
  %9 = zext i1 %cmp8 to i64, !dbg !1273
  %cond10 = select i1 %cmp8, i32 1, i32 0, !dbg !1273
  %cmp11 = icmp ne i32 %cond10, 0, !dbg !1274
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !1275

if.then13:                                        ; preds = %land.lhs.true
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1276
  %11 = load i32, i32* %tmpITFlags, align 4, !dbg !1277
  call arm_aapcs_vfpcc void @I2C_ITSlaveCplt(%struct.__I2C_HandleTypeDef* %10, i32 %11), !dbg !1278
  br label %if.end14, !dbg !1279

if.end14:                                         ; preds = %if.then13, %land.lhs.true, %do.end
  %12 = load i32, i32* %tmpITFlags, align 4, !dbg !1280
  %and15 = and i32 %12, 16, !dbg !1280
  %cmp16 = icmp eq i32 %and15, 16, !dbg !1280
  %13 = zext i1 %cmp16 to i64, !dbg !1280
  %cond18 = select i1 %cmp16, i32 1, i32 0, !dbg !1280
  %cmp19 = icmp ne i32 %cond18, 0, !dbg !1281
  br i1 %cmp19, label %land.lhs.true21, label %if.else65, !dbg !1282

land.lhs.true21:                                  ; preds = %if.end14
  %14 = load i32, i32* %ITSources.addr, align 4, !dbg !1283
  %and22 = and i32 %14, 16, !dbg !1283
  %cmp23 = icmp eq i32 %and22, 16, !dbg !1283
  %15 = zext i1 %cmp23 to i64, !dbg !1283
  %cond25 = select i1 %cmp23, i32 1, i32 0, !dbg !1283
  %cmp26 = icmp ne i32 %cond25, 0, !dbg !1284
  br i1 %cmp26, label %if.then28, label %if.else65, !dbg !1285

if.then28:                                        ; preds = %land.lhs.true21
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1286
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 4, !dbg !1287
  %17 = load volatile i16, i16* %XferCount, align 2, !dbg !1287
  %conv29 = zext i16 %17 to i32, !dbg !1286
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !1288
  br i1 %cmp30, label %if.then32, label %if.else54, !dbg !1286

if.then32:                                        ; preds = %if.then28
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1289
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 11, !dbg !1290
  %19 = load volatile i8, i8* %State, align 1, !dbg !1290
  %conv33 = zext i8 %19 to i32, !dbg !1289
  %cmp34 = icmp eq i32 %conv33, 40, !dbg !1291
  br i1 %cmp34, label %land.lhs.true36, label %if.else40, !dbg !1292

land.lhs.true36:                                  ; preds = %if.then32
  %20 = load i32, i32* %tmpoptions, align 4, !dbg !1293
  %cmp37 = icmp eq i32 %20, 33554432, !dbg !1294
  br i1 %cmp37, label %if.then39, label %if.else40, !dbg !1295

if.then39:                                        ; preds = %land.lhs.true36
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1296
  %22 = load i32, i32* %tmpITFlags, align 4, !dbg !1297
  call arm_aapcs_vfpcc void @I2C_ITListenCplt(%struct.__I2C_HandleTypeDef* %21, i32 %22), !dbg !1298
  br label %if.end53, !dbg !1299

if.else40:                                        ; preds = %land.lhs.true36, %if.then32
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1300
  %State41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 11, !dbg !1301
  %24 = load volatile i8, i8* %State41, align 1, !dbg !1301
  %conv42 = zext i8 %24 to i32, !dbg !1300
  %cmp43 = icmp eq i32 %conv42, 41, !dbg !1302
  br i1 %cmp43, label %land.lhs.true45, label %if.else49, !dbg !1303

land.lhs.true45:                                  ; preds = %if.else40
  %25 = load i32, i32* %tmpoptions, align 4, !dbg !1304
  %cmp46 = icmp ne i32 %25, -65536, !dbg !1305
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !1306

if.then48:                                        ; preds = %land.lhs.true45
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1307
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 0, !dbg !1307
  %27 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1307
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %27, i32 0, i32 7, !dbg !1307
  store volatile i32 16, i32* %ICR, align 4, !dbg !1307
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1308
  call arm_aapcs_vfpcc void @I2C_Flush_TXDR(%struct.__I2C_HandleTypeDef* %28), !dbg !1309
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1310
  call arm_aapcs_vfpcc void @I2C_ITSlaveSeqCplt(%struct.__I2C_HandleTypeDef* %29), !dbg !1311
  br label %if.end52, !dbg !1312

if.else49:                                        ; preds = %land.lhs.true45, %if.else40
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1313
  %Instance50 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 0, !dbg !1313
  %31 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance50, align 4, !dbg !1313
  %ICR51 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %31, i32 0, i32 7, !dbg !1313
  store volatile i32 16, i32* %ICR51, align 4, !dbg !1313
  br label %if.end52

if.end52:                                         ; preds = %if.else49, %if.then48
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then39
  br label %if.end64, !dbg !1314

if.else54:                                        ; preds = %if.then28
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1315
  %Instance55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 0, !dbg !1315
  %33 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance55, align 4, !dbg !1315
  %ICR56 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %33, i32 0, i32 7, !dbg !1315
  store volatile i32 16, i32* %ICR56, align 4, !dbg !1315
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1316
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 13, !dbg !1317
  %35 = load volatile i32, i32* %ErrorCode, align 4, !dbg !1318
  %or = or i32 %35, 4, !dbg !1318
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !1318
  %36 = load i32, i32* %tmpoptions, align 4, !dbg !1319
  %cmp57 = icmp eq i32 %36, 0, !dbg !1320
  br i1 %cmp57, label %if.then61, label %lor.lhs.false, !dbg !1321

lor.lhs.false:                                    ; preds = %if.else54
  %37 = load i32, i32* %tmpoptions, align 4, !dbg !1322
  %cmp59 = icmp eq i32 %37, 16777216, !dbg !1323
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !1324

if.then61:                                        ; preds = %lor.lhs.false, %if.else54
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1325
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1326
  %ErrorCode62 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 13, !dbg !1327
  %40 = load volatile i32, i32* %ErrorCode62, align 4, !dbg !1327
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %38, i32 %40), !dbg !1328
  br label %if.end63, !dbg !1329

if.end63:                                         ; preds = %if.then61, %lor.lhs.false
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end53
  br label %if.end157, !dbg !1330

if.else65:                                        ; preds = %land.lhs.true21, %if.end14
  %41 = load i32, i32* %tmpITFlags, align 4, !dbg !1331
  %and66 = and i32 %41, 4, !dbg !1331
  %cmp67 = icmp eq i32 %and66, 4, !dbg !1331
  %42 = zext i1 %cmp67 to i64, !dbg !1331
  %cond69 = select i1 %cmp67, i32 1, i32 0, !dbg !1331
  %cmp70 = icmp ne i32 %cond69, 0, !dbg !1332
  br i1 %cmp70, label %land.lhs.true72, label %if.else100, !dbg !1333

land.lhs.true72:                                  ; preds = %if.else65
  %43 = load i32, i32* %ITSources.addr, align 4, !dbg !1334
  %and73 = and i32 %43, 4, !dbg !1334
  %cmp74 = icmp eq i32 %and73, 4, !dbg !1334
  %44 = zext i1 %cmp74 to i64, !dbg !1334
  %cond76 = select i1 %cmp74, i32 1, i32 0, !dbg !1334
  %cmp77 = icmp ne i32 %cond76, 0, !dbg !1335
  br i1 %cmp77, label %if.then79, label %if.else100, !dbg !1336

if.then79:                                        ; preds = %land.lhs.true72
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1337
  %XferCount80 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 4, !dbg !1338
  %46 = load volatile i16, i16* %XferCount80, align 2, !dbg !1338
  %conv81 = zext i16 %46 to i32, !dbg !1337
  %cmp82 = icmp ugt i32 %conv81, 0, !dbg !1339
  br i1 %cmp82, label %if.then84, label %if.end90, !dbg !1337

if.then84:                                        ; preds = %if.then79
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1340
  %Instance85 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 0, !dbg !1341
  %48 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance85, align 4, !dbg !1341
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %48, i32 0, i32 9, !dbg !1342
  %49 = load volatile i32, i32* %RXDR, align 4, !dbg !1342
  %conv86 = trunc i32 %49 to i8, !dbg !1343
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1344
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 2, !dbg !1345
  %51 = load i8*, i8** %pBuffPtr, align 4, !dbg !1345
  store i8 %conv86, i8* %51, align 1, !dbg !1346
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1347
  %pBuffPtr87 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 2, !dbg !1348
  %53 = load i8*, i8** %pBuffPtr87, align 4, !dbg !1349
  %incdec.ptr = getelementptr inbounds i8, i8* %53, i32 1, !dbg !1349
  store i8* %incdec.ptr, i8** %pBuffPtr87, align 4, !dbg !1349
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1350
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 3, !dbg !1351
  %55 = load i16, i16* %XferSize, align 4, !dbg !1352
  %dec = add i16 %55, -1, !dbg !1352
  store i16 %dec, i16* %XferSize, align 4, !dbg !1352
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1353
  %XferCount88 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 4, !dbg !1354
  %57 = load volatile i16, i16* %XferCount88, align 2, !dbg !1355
  %dec89 = add i16 %57, -1, !dbg !1355
  store volatile i16 %dec89, i16* %XferCount88, align 2, !dbg !1355
  br label %if.end90, !dbg !1356

if.end90:                                         ; preds = %if.then84, %if.then79
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1357
  %XferCount91 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 4, !dbg !1358
  %59 = load volatile i16, i16* %XferCount91, align 2, !dbg !1358
  %conv92 = zext i16 %59 to i32, !dbg !1357
  %cmp93 = icmp eq i32 %conv92, 0, !dbg !1359
  br i1 %cmp93, label %land.lhs.true95, label %if.end99, !dbg !1360

land.lhs.true95:                                  ; preds = %if.end90
  %60 = load i32, i32* %tmpoptions, align 4, !dbg !1361
  %cmp96 = icmp ne i32 %60, -65536, !dbg !1362
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !1363

if.then98:                                        ; preds = %land.lhs.true95
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1364
  call arm_aapcs_vfpcc void @I2C_ITSlaveSeqCplt(%struct.__I2C_HandleTypeDef* %61), !dbg !1365
  br label %if.end99, !dbg !1366

if.end99:                                         ; preds = %if.then98, %land.lhs.true95, %if.end90
  br label %if.end156, !dbg !1367

if.else100:                                       ; preds = %land.lhs.true72, %if.else65
  %62 = load i32, i32* %tmpITFlags, align 4, !dbg !1368
  %and101 = and i32 %62, 8, !dbg !1368
  %cmp102 = icmp eq i32 %and101, 8, !dbg !1368
  %63 = zext i1 %cmp102 to i64, !dbg !1368
  %cond104 = select i1 %cmp102, i32 1, i32 0, !dbg !1368
  %cmp105 = icmp ne i32 %cond104, 0, !dbg !1369
  br i1 %cmp105, label %land.lhs.true107, label %if.else115, !dbg !1370

land.lhs.true107:                                 ; preds = %if.else100
  %64 = load i32, i32* %ITSources.addr, align 4, !dbg !1371
  %and108 = and i32 %64, 8, !dbg !1371
  %cmp109 = icmp eq i32 %and108, 8, !dbg !1371
  %65 = zext i1 %cmp109 to i64, !dbg !1371
  %cond111 = select i1 %cmp109, i32 1, i32 0, !dbg !1371
  %cmp112 = icmp ne i32 %cond111, 0, !dbg !1372
  br i1 %cmp112, label %if.then114, label %if.else115, !dbg !1373

if.then114:                                       ; preds = %land.lhs.true107
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1374
  %67 = load i32, i32* %tmpITFlags, align 4, !dbg !1375
  call arm_aapcs_vfpcc void @I2C_ITAddrCplt(%struct.__I2C_HandleTypeDef* %66, i32 %67), !dbg !1376
  br label %if.end155, !dbg !1377

if.else115:                                       ; preds = %land.lhs.true107, %if.else100
  %68 = load i32, i32* %tmpITFlags, align 4, !dbg !1378
  %and116 = and i32 %68, 2, !dbg !1378
  %cmp117 = icmp eq i32 %and116, 2, !dbg !1378
  %69 = zext i1 %cmp117 to i64, !dbg !1378
  %cond119 = select i1 %cmp117, i32 1, i32 0, !dbg !1378
  %cmp120 = icmp ne i32 %cond119, 0, !dbg !1379
  br i1 %cmp120, label %land.lhs.true122, label %if.else153, !dbg !1380

land.lhs.true122:                                 ; preds = %if.else115
  %70 = load i32, i32* %ITSources.addr, align 4, !dbg !1381
  %and123 = and i32 %70, 2, !dbg !1381
  %cmp124 = icmp eq i32 %and123, 2, !dbg !1381
  %71 = zext i1 %cmp124 to i64, !dbg !1381
  %cond126 = select i1 %cmp124, i32 1, i32 0, !dbg !1381
  %cmp127 = icmp ne i32 %cond126, 0, !dbg !1382
  br i1 %cmp127, label %if.then129, label %if.else153, !dbg !1383

if.then129:                                       ; preds = %land.lhs.true122
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1384
  %XferCount130 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 4, !dbg !1385
  %73 = load volatile i16, i16* %XferCount130, align 2, !dbg !1385
  %conv131 = zext i16 %73 to i32, !dbg !1384
  %cmp132 = icmp ugt i32 %conv131, 0, !dbg !1386
  br i1 %cmp132, label %if.then134, label %if.else144, !dbg !1384

if.then134:                                       ; preds = %if.then129
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1387
  %pBuffPtr135 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 2, !dbg !1388
  %75 = load i8*, i8** %pBuffPtr135, align 4, !dbg !1388
  %76 = load i8, i8* %75, align 1, !dbg !1389
  %conv136 = zext i8 %76 to i32, !dbg !1389
  %77 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1390
  %Instance137 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %77, i32 0, i32 0, !dbg !1391
  %78 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance137, align 4, !dbg !1391
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %78, i32 0, i32 10, !dbg !1392
  store volatile i32 %conv136, i32* %TXDR, align 4, !dbg !1393
  %79 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1394
  %pBuffPtr138 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %79, i32 0, i32 2, !dbg !1395
  %80 = load i8*, i8** %pBuffPtr138, align 4, !dbg !1396
  %incdec.ptr139 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !1396
  store i8* %incdec.ptr139, i8** %pBuffPtr138, align 4, !dbg !1396
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1397
  %XferCount140 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %81, i32 0, i32 4, !dbg !1398
  %82 = load volatile i16, i16* %XferCount140, align 2, !dbg !1399
  %dec141 = add i16 %82, -1, !dbg !1399
  store volatile i16 %dec141, i16* %XferCount140, align 2, !dbg !1399
  %83 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1400
  %XferSize142 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %83, i32 0, i32 3, !dbg !1401
  %84 = load i16, i16* %XferSize142, align 4, !dbg !1402
  %dec143 = add i16 %84, -1, !dbg !1402
  store i16 %dec143, i16* %XferSize142, align 4, !dbg !1402
  br label %if.end152, !dbg !1403

if.else144:                                       ; preds = %if.then129
  %85 = load i32, i32* %tmpoptions, align 4, !dbg !1404
  %cmp145 = icmp eq i32 %85, 16777216, !dbg !1405
  br i1 %cmp145, label %if.then150, label %lor.lhs.false147, !dbg !1406

lor.lhs.false147:                                 ; preds = %if.else144
  %86 = load i32, i32* %tmpoptions, align 4, !dbg !1407
  %cmp148 = icmp eq i32 %86, 0, !dbg !1408
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !1409

if.then150:                                       ; preds = %lor.lhs.false147, %if.else144
  %87 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1410
  call arm_aapcs_vfpcc void @I2C_ITSlaveSeqCplt(%struct.__I2C_HandleTypeDef* %87), !dbg !1411
  br label %if.end151, !dbg !1412

if.end151:                                        ; preds = %if.then150, %lor.lhs.false147
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then134
  br label %if.end154, !dbg !1413

if.else153:                                       ; preds = %land.lhs.true122, %if.else115
  br label %if.end154

if.end154:                                        ; preds = %if.else153, %if.end152
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then114
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.end99
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.end64
  br label %do.body158, !dbg !1414

do.body158:                                       ; preds = %if.end157
  %88 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1414
  %Lock159 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %88, i32 0, i32 10, !dbg !1414
  store i8 0, i8* %Lock159, align 4, !dbg !1414
  br label %do.end160, !dbg !1414

do.end160:                                        ; preds = %do.body158
  store i8 0, i8* %retval, align 1, !dbg !1415
  br label %return, !dbg !1415

return:                                           ; preds = %do.end160, %if.then
  %89 = load i8, i8* %retval, align 1, !dbg !1416
  ret i8 %89, !dbg !1416
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Receive_IT(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size) #0 !dbg !1417 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1418
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !1419
  %1 = load volatile i8, i8* %State, align 1, !dbg !1419
  %conv = zext i8 %1 to i32, !dbg !1418
  %cmp = icmp eq i32 %conv, 32, !dbg !1420
  br i1 %cmp, label %if.then, label %if.else12, !dbg !1418

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !1421

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1421
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !1421
  %3 = load i8, i8* %Lock, align 4, !dbg !1421
  %conv2 = zext i8 %3 to i32, !dbg !1421
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !1421
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !1421

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !1421
  br label %return, !dbg !1421

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1421
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !1421
  store i8 1, i8* %Lock6, align 4, !dbg !1421
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !1421

do.end:                                           ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1422
  %State7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 11, !dbg !1423
  store volatile i8 34, i8* %State7, align 1, !dbg !1424
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1425
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 12, !dbg !1426
  store volatile i8 32, i8* %Mode, align 2, !dbg !1427
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1428
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 13, !dbg !1429
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !1430
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1431
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 0, !dbg !1432
  %9 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1432
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %9, i32 0, i32 1, !dbg !1433
  %10 = load volatile i32, i32* %CR2, align 4, !dbg !1434
  %and = and i32 %10, -32769, !dbg !1434
  store volatile i32 %and, i32* %CR2, align 4, !dbg !1434
  %11 = load i8*, i8** %pData.addr, align 4, !dbg !1435
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1436
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 2, !dbg !1437
  store i8* %11, i8** %pBuffPtr, align 4, !dbg !1438
  %13 = load i16, i16* %Size.addr, align 2, !dbg !1439
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1440
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 4, !dbg !1441
  store volatile i16 %13, i16* %XferCount, align 2, !dbg !1442
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1443
  %XferCount8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !1444
  %16 = load volatile i16, i16* %XferCount8, align 2, !dbg !1444
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1445
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !1446
  store i16 %16, i16* %XferSize, align 4, !dbg !1447
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1448
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 5, !dbg !1449
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !1450
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1451
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 7, !dbg !1452
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !1453
  br label %do.body9, !dbg !1454

do.body9:                                         ; preds = %do.end
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1454
  %Lock10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 10, !dbg !1454
  store i8 0, i8* %Lock10, align 4, !dbg !1454
  br label %do.end11, !dbg !1454

do.end11:                                         ; preds = %do.body9
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1455
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %21, i16 zeroext -32766), !dbg !1456
  store i8 0, i8* %retval, align 1, !dbg !1457
  br label %return, !dbg !1457

if.else12:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !1458
  br label %return, !dbg !1458

return:                                           ; preds = %if.else12, %do.end11, %if.then5
  %22 = load i8, i8* %retval, align 1, !dbg !1459
  ret i8 %22, !dbg !1459
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Transmit_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size) #0 !dbg !1460 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %xfermode = alloca i32, align 4
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1461
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !1462
  %1 = load volatile i8, i8* %State, align 1, !dbg !1462
  %conv = zext i8 %1 to i32, !dbg !1461
  %cmp = icmp eq i32 %conv, 32, !dbg !1463
  br i1 %cmp, label %if.then, label %if.else80, !dbg !1461

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1464
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 0, !dbg !1464
  %3 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1464
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %3, i32 0, i32 6, !dbg !1464
  %4 = load volatile i32, i32* %ISR, align 4, !dbg !1464
  %and = and i32 %4, 32768, !dbg !1464
  %cmp2 = icmp eq i32 %and, 32768, !dbg !1464
  %5 = zext i1 %cmp2 to i64, !dbg !1464
  %cond = select i1 %cmp2, i32 1, i32 0, !dbg !1464
  %cmp4 = icmp eq i32 %cond, 1, !dbg !1465
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !1464

if.then6:                                         ; preds = %if.then
  store i8 2, i8* %retval, align 1, !dbg !1466
  br label %return, !dbg !1466

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !1467

do.body:                                          ; preds = %if.end
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1467
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 10, !dbg !1467
  %7 = load i8, i8* %Lock, align 4, !dbg !1467
  %conv7 = zext i8 %7 to i32, !dbg !1467
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !1467
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !1467

if.then10:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !1467
  br label %return, !dbg !1467

if.else:                                          ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1467
  %Lock11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 10, !dbg !1467
  store i8 1, i8* %Lock11, align 4, !dbg !1467
  br label %if.end12

if.end12:                                         ; preds = %if.else
  br label %do.end, !dbg !1467

do.end:                                           ; preds = %if.end12
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1468
  %State13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !1469
  store volatile i8 33, i8* %State13, align 1, !dbg !1470
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1471
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 12, !dbg !1472
  store volatile i8 16, i8* %Mode, align 2, !dbg !1473
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1474
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 13, !dbg !1475
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !1476
  %12 = load i8*, i8** %pData.addr, align 4, !dbg !1477
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1478
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 2, !dbg !1479
  store i8* %12, i8** %pBuffPtr, align 4, !dbg !1480
  %14 = load i16, i16* %Size.addr, align 2, !dbg !1481
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1482
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !1483
  store volatile i16 %14, i16* %XferCount, align 2, !dbg !1484
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1485
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 5, !dbg !1486
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !1487
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1488
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 7, !dbg !1489
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !1490
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1491
  %XferCount14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !1492
  %19 = load volatile i16, i16* %XferCount14, align 2, !dbg !1492
  %conv15 = zext i16 %19 to i32, !dbg !1491
  %cmp16 = icmp ugt i32 %conv15, 255, !dbg !1493
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !1491

if.then18:                                        ; preds = %do.end
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1494
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !1495
  store i16 255, i16* %XferSize, align 4, !dbg !1496
  store i32 16777216, i32* %xfermode, align 4, !dbg !1497
  br label %if.end22, !dbg !1498

if.else19:                                        ; preds = %do.end
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1499
  %XferCount20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 4, !dbg !1500
  %22 = load volatile i16, i16* %XferCount20, align 2, !dbg !1500
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1501
  %XferSize21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 3, !dbg !1502
  store i16 %22, i16* %XferSize21, align 4, !dbg !1503
  store i32 33554432, i32* %xfermode, align 4, !dbg !1504
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then18
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1505
  %XferSize23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 3, !dbg !1506
  %25 = load i16, i16* %XferSize23, align 4, !dbg !1506
  %conv24 = zext i16 %25 to i32, !dbg !1505
  %cmp25 = icmp ugt i32 %conv24, 0, !dbg !1507
  br i1 %cmp25, label %if.then27, label %if.else72, !dbg !1505

if.then27:                                        ; preds = %if.end22
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1508
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 8, !dbg !1509
  %27 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !1509
  %cmp28 = icmp ne %struct.__DMA_HandleTypeDef* %27, null, !dbg !1510
  br i1 %cmp28, label %if.then30, label %if.else39, !dbg !1508

if.then30:                                        ; preds = %if.then27
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1511
  %hdmatx31 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 8, !dbg !1512
  %29 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx31, align 4, !dbg !1512
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %29, i32 0, i32 5, !dbg !1513
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAMasterTransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !1514
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1515
  %hdmatx32 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 8, !dbg !1516
  %31 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx32, align 4, !dbg !1516
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %31, i32 0, i32 9, !dbg !1517
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !1518
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1519
  %hdmatx33 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 8, !dbg !1520
  %33 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx33, align 4, !dbg !1520
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %33, i32 0, i32 6, !dbg !1521
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !1522
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1523
  %hdmatx34 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 8, !dbg !1524
  %35 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx34, align 4, !dbg !1524
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %35, i32 0, i32 10, !dbg !1525
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !1526
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1527
  %hdmatx35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 8, !dbg !1528
  %37 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx35, align 4, !dbg !1528
  %38 = load i8*, i8** %pData.addr, align 4, !dbg !1529
  %39 = ptrtoint i8* %38 to i32, !dbg !1530
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1531
  %Instance36 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 0, !dbg !1532
  %41 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance36, align 4, !dbg !1532
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %41, i32 0, i32 10, !dbg !1533
  %42 = ptrtoint i32* %TXDR to i32, !dbg !1534
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1535
  %XferSize37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 3, !dbg !1536
  %44 = load i16, i16* %XferSize37, align 4, !dbg !1536
  %conv38 = zext i16 %44 to i32, !dbg !1535
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %37, i32 %39, i32 %42, i32 %conv38), !dbg !1537
  store i8 %call, i8* %dmaxferstatus, align 1, !dbg !1538
  br label %if.end46, !dbg !1539

if.else39:                                        ; preds = %if.then27
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1540
  %State40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 11, !dbg !1541
  store volatile i8 32, i8* %State40, align 1, !dbg !1542
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1543
  %Mode41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %46, i32 0, i32 12, !dbg !1544
  store volatile i8 0, i8* %Mode41, align 2, !dbg !1545
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1546
  %ErrorCode42 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 13, !dbg !1547
  %48 = load volatile i32, i32* %ErrorCode42, align 4, !dbg !1548
  %or = or i32 %48, 128, !dbg !1548
  store volatile i32 %or, i32* %ErrorCode42, align 4, !dbg !1548
  br label %do.body43, !dbg !1549

do.body43:                                        ; preds = %if.else39
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1549
  %Lock44 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 10, !dbg !1549
  store i8 0, i8* %Lock44, align 4, !dbg !1549
  br label %do.end45, !dbg !1549

do.end45:                                         ; preds = %do.body43
  store i8 1, i8* %retval, align 1, !dbg !1550
  br label %return, !dbg !1550

if.end46:                                         ; preds = %if.then30
  %50 = load i8, i8* %dmaxferstatus, align 1, !dbg !1551
  %conv47 = zext i8 %50 to i32, !dbg !1551
  %cmp48 = icmp eq i32 %conv47, 0, !dbg !1552
  br i1 %cmp48, label %if.then50, label %if.else63, !dbg !1551

if.then50:                                        ; preds = %if.end46
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1553
  %52 = load i16, i16* %DevAddress.addr, align 2, !dbg !1554
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1555
  %XferSize51 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 3, !dbg !1556
  %54 = load i16, i16* %XferSize51, align 4, !dbg !1556
  %conv52 = trunc i16 %54 to i8, !dbg !1557
  %55 = load i32, i32* %xfermode, align 4, !dbg !1558
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %51, i16 zeroext %52, i8 zeroext %conv52, i32 %55, i32 -2147475456), !dbg !1559
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1560
  %XferSize53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 3, !dbg !1561
  %57 = load i16, i16* %XferSize53, align 4, !dbg !1561
  %conv54 = zext i16 %57 to i32, !dbg !1560
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1562
  %XferCount55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 4, !dbg !1563
  %59 = load volatile i16, i16* %XferCount55, align 2, !dbg !1564
  %conv56 = zext i16 %59 to i32, !dbg !1564
  %sub = sub nsw i32 %conv56, %conv54, !dbg !1564
  %conv57 = trunc i32 %sub to i16, !dbg !1564
  store volatile i16 %conv57, i16* %XferCount55, align 2, !dbg !1564
  br label %do.body58, !dbg !1565

do.body58:                                        ; preds = %if.then50
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1565
  %Lock59 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 10, !dbg !1565
  store i8 0, i8* %Lock59, align 4, !dbg !1565
  br label %do.end60, !dbg !1565

do.end60:                                         ; preds = %do.body58
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1566
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %61, i16 zeroext 16), !dbg !1567
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1568
  %Instance61 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 0, !dbg !1569
  %63 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance61, align 4, !dbg !1569
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %63, i32 0, i32 0, !dbg !1570
  %64 = load volatile i32, i32* %CR1, align 4, !dbg !1571
  %or62 = or i32 %64, 16384, !dbg !1571
  store volatile i32 %or62, i32* %CR1, align 4, !dbg !1571
  br label %if.end71, !dbg !1572

if.else63:                                        ; preds = %if.end46
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1573
  %State64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 11, !dbg !1574
  store volatile i8 32, i8* %State64, align 1, !dbg !1575
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1576
  %Mode65 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 12, !dbg !1577
  store volatile i8 0, i8* %Mode65, align 2, !dbg !1578
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1579
  %ErrorCode66 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %67, i32 0, i32 13, !dbg !1580
  %68 = load volatile i32, i32* %ErrorCode66, align 4, !dbg !1581
  %or67 = or i32 %68, 16, !dbg !1581
  store volatile i32 %or67, i32* %ErrorCode66, align 4, !dbg !1581
  br label %do.body68, !dbg !1582

do.body68:                                        ; preds = %if.else63
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1582
  %Lock69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 10, !dbg !1582
  store i8 0, i8* %Lock69, align 4, !dbg !1582
  br label %do.end70, !dbg !1582

do.end70:                                         ; preds = %do.body68
  store i8 1, i8* %retval, align 1, !dbg !1583
  br label %return, !dbg !1583

if.end71:                                         ; preds = %do.end60
  br label %if.end79, !dbg !1584

if.else72:                                        ; preds = %if.end22
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1585
  %XferISR73 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %70, i32 0, i32 7, !dbg !1586
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR73, align 4, !dbg !1587
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1588
  %72 = load i16, i16* %DevAddress.addr, align 2, !dbg !1589
  %73 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1590
  %XferSize74 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %73, i32 0, i32 3, !dbg !1591
  %74 = load i16, i16* %XferSize74, align 4, !dbg !1591
  %conv75 = trunc i16 %74 to i8, !dbg !1592
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %71, i16 zeroext %72, i8 zeroext %conv75, i32 33554432, i32 -2147475456), !dbg !1593
  br label %do.body76, !dbg !1594

do.body76:                                        ; preds = %if.else72
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1594
  %Lock77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 10, !dbg !1594
  store i8 0, i8* %Lock77, align 4, !dbg !1594
  br label %do.end78, !dbg !1594

do.end78:                                         ; preds = %do.body76
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1595
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %76, i16 zeroext 1), !dbg !1596
  br label %if.end79

if.end79:                                         ; preds = %do.end78, %if.end71
  store i8 0, i8* %retval, align 1, !dbg !1597
  br label %return, !dbg !1597

if.else80:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !1598
  br label %return, !dbg !1598

return:                                           ; preds = %if.else80, %if.end79, %do.end70, %do.end45, %if.then10, %if.then6
  %77 = load i8, i8* %retval, align 1, !dbg !1599
  ret i8 %77, !dbg !1599
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_Master_ISR_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ITFlags, i32 %ITSources) #0 !dbg !1600 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ITFlags.addr = alloca i32, align 4
  %ITSources.addr = alloca i32, align 4
  %devaddress = alloca i16, align 2
  %xfermode = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ITFlags, i32* %ITFlags.addr, align 4
  store i32 %ITSources, i32* %ITSources.addr, align 4
  br label %do.body, !dbg !1601

do.body:                                          ; preds = %entry
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1601
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 10, !dbg !1601
  %1 = load i8, i8* %Lock, align 4, !dbg !1601
  %conv = zext i8 %1 to i32, !dbg !1601
  %cmp = icmp eq i32 %conv, 1, !dbg !1601
  br i1 %cmp, label %if.then, label %if.else, !dbg !1601

if.then:                                          ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !1601
  br label %return, !dbg !1601

if.else:                                          ; preds = %do.body
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1601
  %Lock2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !1601
  store i8 1, i8* %Lock2, align 4, !dbg !1601
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !1601

do.end:                                           ; preds = %if.end
  %3 = load i32, i32* %ITFlags.addr, align 4, !dbg !1602
  %and = and i32 %3, 16, !dbg !1602
  %cmp3 = icmp eq i32 %and, 16, !dbg !1602
  %4 = zext i1 %cmp3 to i64, !dbg !1602
  %cond = select i1 %cmp3, i32 1, i32 0, !dbg !1602
  %cmp5 = icmp ne i32 %cond, 0, !dbg !1603
  br i1 %cmp5, label %land.lhs.true, label %if.else14, !dbg !1604

land.lhs.true:                                    ; preds = %do.end
  %5 = load i32, i32* %ITSources.addr, align 4, !dbg !1605
  %and7 = and i32 %5, 16, !dbg !1605
  %cmp8 = icmp eq i32 %and7, 16, !dbg !1605
  %6 = zext i1 %cmp8 to i64, !dbg !1605
  %cond10 = select i1 %cmp8, i32 1, i32 0, !dbg !1605
  %cmp11 = icmp ne i32 %cond10, 0, !dbg !1606
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !1607

if.then13:                                        ; preds = %land.lhs.true
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1608
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 0, !dbg !1608
  %8 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1608
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %8, i32 0, i32 7, !dbg !1608
  store volatile i32 16, i32* %ICR, align 4, !dbg !1608
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1609
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 13, !dbg !1610
  %10 = load volatile i32, i32* %ErrorCode, align 4, !dbg !1611
  %or = or i32 %10, 4, !dbg !1611
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !1611
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1612
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %11, i16 zeroext 32), !dbg !1613
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1614
  call arm_aapcs_vfpcc void @I2C_Flush_TXDR(%struct.__I2C_HandleTypeDef* %12), !dbg !1615
  br label %if.end139, !dbg !1616

if.else14:                                        ; preds = %land.lhs.true, %do.end
  %13 = load i32, i32* %ITFlags.addr, align 4, !dbg !1617
  %and15 = and i32 %13, 128, !dbg !1617
  %cmp16 = icmp eq i32 %and15, 128, !dbg !1617
  %14 = zext i1 %cmp16 to i64, !dbg !1617
  %cond18 = select i1 %cmp16, i32 1, i32 0, !dbg !1617
  %cmp19 = icmp ne i32 %cond18, 0, !dbg !1618
  br i1 %cmp19, label %land.lhs.true21, label %if.else82, !dbg !1619

land.lhs.true21:                                  ; preds = %if.else14
  %15 = load i32, i32* %ITSources.addr, align 4, !dbg !1620
  %and22 = and i32 %15, 64, !dbg !1620
  %cmp23 = icmp eq i32 %and22, 64, !dbg !1620
  %16 = zext i1 %cmp23 to i64, !dbg !1620
  %cond25 = select i1 %cmp23, i32 1, i32 0, !dbg !1620
  %cmp26 = icmp ne i32 %cond25, 0, !dbg !1621
  br i1 %cmp26, label %if.then28, label %if.else82, !dbg !1622

if.then28:                                        ; preds = %land.lhs.true21
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1623
  %Instance29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 0, !dbg !1623
  %18 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance29, align 4, !dbg !1623
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %18, i32 0, i32 0, !dbg !1623
  %19 = load volatile i32, i32* %CR1, align 4, !dbg !1623
  %and30 = and i32 %19, -65, !dbg !1623
  store volatile i32 %and30, i32* %CR1, align 4, !dbg !1623
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1624
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 4, !dbg !1625
  %21 = load volatile i16, i16* %XferCount, align 2, !dbg !1625
  %conv31 = zext i16 %21 to i32, !dbg !1624
  %cmp32 = icmp ne i32 %conv31, 0, !dbg !1626
  br i1 %cmp32, label %if.then34, label %if.else72, !dbg !1624

if.then34:                                        ; preds = %if.then28
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1627
  %Instance35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 0, !dbg !1628
  %23 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance35, align 4, !dbg !1628
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %23, i32 0, i32 1, !dbg !1629
  %24 = load volatile i32, i32* %CR2, align 4, !dbg !1629
  %and36 = and i32 %24, 1023, !dbg !1630
  %conv37 = trunc i32 %and36 to i16, !dbg !1631
  store i16 %conv37, i16* %devaddress, align 2, !dbg !1632
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1633
  %XferCount38 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 4, !dbg !1634
  %26 = load volatile i16, i16* %XferCount38, align 2, !dbg !1634
  %conv39 = zext i16 %26 to i32, !dbg !1633
  %cmp40 = icmp ugt i32 %conv39, 255, !dbg !1635
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !1633

if.then42:                                        ; preds = %if.then34
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1636
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 3, !dbg !1637
  store i16 255, i16* %XferSize, align 4, !dbg !1638
  store i32 16777216, i32* %xfermode, align 4, !dbg !1639
  br label %if.end52, !dbg !1640

if.else43:                                        ; preds = %if.then34
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1641
  %XferCount44 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 4, !dbg !1642
  %29 = load volatile i16, i16* %XferCount44, align 2, !dbg !1642
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1643
  %XferSize45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 3, !dbg !1644
  store i16 %29, i16* %XferSize45, align 4, !dbg !1645
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1646
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 5, !dbg !1647
  %32 = load volatile i32, i32* %XferOptions, align 4, !dbg !1647
  %cmp46 = icmp ne i32 %32, -65536, !dbg !1648
  br i1 %cmp46, label %if.then48, label %if.else50, !dbg !1646

if.then48:                                        ; preds = %if.else43
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1649
  %XferOptions49 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 5, !dbg !1650
  %34 = load volatile i32, i32* %XferOptions49, align 4, !dbg !1650
  store i32 %34, i32* %xfermode, align 4, !dbg !1651
  br label %if.end51, !dbg !1652

if.else50:                                        ; preds = %if.else43
  store i32 33554432, i32* %xfermode, align 4, !dbg !1653
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.then48
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then42
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1654
  %36 = load i16, i16* %devaddress, align 2, !dbg !1655
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1656
  %XferSize53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 3, !dbg !1657
  %38 = load i16, i16* %XferSize53, align 4, !dbg !1657
  %conv54 = trunc i16 %38 to i8, !dbg !1658
  %39 = load i32, i32* %xfermode, align 4, !dbg !1659
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %35, i16 zeroext %36, i8 zeroext %conv54, i32 %39, i32 0), !dbg !1660
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1661
  %XferSize55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 3, !dbg !1662
  %41 = load i16, i16* %XferSize55, align 4, !dbg !1662
  %conv56 = zext i16 %41 to i32, !dbg !1661
  %42 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1663
  %XferCount57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %42, i32 0, i32 4, !dbg !1664
  %43 = load volatile i16, i16* %XferCount57, align 2, !dbg !1665
  %conv58 = zext i16 %43 to i32, !dbg !1665
  %sub = sub nsw i32 %conv58, %conv56, !dbg !1665
  %conv59 = trunc i32 %sub to i16, !dbg !1665
  store volatile i16 %conv59, i16* %XferCount57, align 2, !dbg !1665
  %44 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1666
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %44, i32 0, i32 11, !dbg !1667
  %45 = load volatile i8, i8* %State, align 1, !dbg !1667
  %conv60 = zext i8 %45 to i32, !dbg !1666
  %cmp61 = icmp eq i32 %conv60, 34, !dbg !1668
  br i1 %cmp61, label %if.then63, label %if.else67, !dbg !1666

if.then63:                                        ; preds = %if.end52
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1669
  %Instance64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %46, i32 0, i32 0, !dbg !1670
  %47 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance64, align 4, !dbg !1670
  %CR165 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %47, i32 0, i32 0, !dbg !1671
  %48 = load volatile i32, i32* %CR165, align 4, !dbg !1672
  %or66 = or i32 %48, 32768, !dbg !1672
  store volatile i32 %or66, i32* %CR165, align 4, !dbg !1672
  br label %if.end71, !dbg !1673

if.else67:                                        ; preds = %if.end52
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1674
  %Instance68 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 0, !dbg !1675
  %50 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance68, align 4, !dbg !1675
  %CR169 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %50, i32 0, i32 0, !dbg !1676
  %51 = load volatile i32, i32* %CR169, align 4, !dbg !1677
  %or70 = or i32 %51, 16384, !dbg !1677
  store volatile i32 %or70, i32* %CR169, align 4, !dbg !1677
  br label %if.end71

if.end71:                                         ; preds = %if.else67, %if.then63
  br label %if.end81, !dbg !1678

if.else72:                                        ; preds = %if.then28
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1679
  %Instance73 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 0, !dbg !1679
  %53 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance73, align 4, !dbg !1679
  %CR274 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %53, i32 0, i32 1, !dbg !1679
  %54 = load volatile i32, i32* %CR274, align 4, !dbg !1679
  %and75 = and i32 %54, 33554432, !dbg !1679
  %cmp76 = icmp ne i32 %and75, 33554432, !dbg !1680
  br i1 %cmp76, label %if.then78, label %if.else79, !dbg !1679

if.then78:                                        ; preds = %if.else72
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1681
  call arm_aapcs_vfpcc void @I2C_ITMasterSeqCplt(%struct.__I2C_HandleTypeDef* %55), !dbg !1682
  br label %if.end80, !dbg !1683

if.else79:                                        ; preds = %if.else72
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1684
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %56, i32 64), !dbg !1685
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.then78
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end71
  br label %if.end138, !dbg !1686

if.else82:                                        ; preds = %land.lhs.true21, %if.else14
  %57 = load i32, i32* %ITFlags.addr, align 4, !dbg !1687
  %and83 = and i32 %57, 64, !dbg !1687
  %cmp84 = icmp eq i32 %and83, 64, !dbg !1687
  %58 = zext i1 %cmp84 to i64, !dbg !1687
  %cond86 = select i1 %cmp84, i32 1, i32 0, !dbg !1687
  %cmp87 = icmp ne i32 %cond86, 0, !dbg !1688
  br i1 %cmp87, label %land.lhs.true89, label %if.else120, !dbg !1689

land.lhs.true89:                                  ; preds = %if.else82
  %59 = load i32, i32* %ITSources.addr, align 4, !dbg !1690
  %and90 = and i32 %59, 64, !dbg !1690
  %cmp91 = icmp eq i32 %and90, 64, !dbg !1690
  %60 = zext i1 %cmp91 to i64, !dbg !1690
  %cond93 = select i1 %cmp91, i32 1, i32 0, !dbg !1690
  %cmp94 = icmp ne i32 %cond93, 0, !dbg !1691
  br i1 %cmp94, label %if.then96, label %if.else120, !dbg !1692

if.then96:                                        ; preds = %land.lhs.true89
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1693
  %XferCount97 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %61, i32 0, i32 4, !dbg !1694
  %62 = load volatile i16, i16* %XferCount97, align 2, !dbg !1694
  %conv98 = zext i16 %62 to i32, !dbg !1693
  %cmp99 = icmp eq i32 %conv98, 0, !dbg !1695
  br i1 %cmp99, label %if.then101, label %if.else118, !dbg !1693

if.then101:                                       ; preds = %if.then96
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1696
  %Instance102 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %63, i32 0, i32 0, !dbg !1696
  %64 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance102, align 4, !dbg !1696
  %CR2103 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %64, i32 0, i32 1, !dbg !1696
  %65 = load volatile i32, i32* %CR2103, align 4, !dbg !1696
  %and104 = and i32 %65, 33554432, !dbg !1696
  %cmp105 = icmp ne i32 %and104, 33554432, !dbg !1697
  br i1 %cmp105, label %if.then107, label %if.end117, !dbg !1696

if.then107:                                       ; preds = %if.then101
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1698
  %XferOptions108 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 5, !dbg !1699
  %67 = load volatile i32, i32* %XferOptions108, align 4, !dbg !1699
  %cmp109 = icmp eq i32 %67, -65536, !dbg !1700
  br i1 %cmp109, label %if.then111, label %if.else115, !dbg !1698

if.then111:                                       ; preds = %if.then107
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1701
  %Instance112 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %68, i32 0, i32 0, !dbg !1702
  %69 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance112, align 4, !dbg !1702
  %CR2113 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %69, i32 0, i32 1, !dbg !1703
  %70 = load volatile i32, i32* %CR2113, align 4, !dbg !1704
  %or114 = or i32 %70, 16384, !dbg !1704
  store volatile i32 %or114, i32* %CR2113, align 4, !dbg !1704
  br label %if.end116, !dbg !1705

if.else115:                                       ; preds = %if.then107
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1706
  call arm_aapcs_vfpcc void @I2C_ITMasterSeqCplt(%struct.__I2C_HandleTypeDef* %71), !dbg !1707
  br label %if.end116

if.end116:                                        ; preds = %if.else115, %if.then111
  br label %if.end117, !dbg !1708

if.end117:                                        ; preds = %if.end116, %if.then101
  br label %if.end119, !dbg !1709

if.else118:                                       ; preds = %if.then96
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1710
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %72, i32 64), !dbg !1711
  br label %if.end119

if.end119:                                        ; preds = %if.else118, %if.end117
  br label %if.end137, !dbg !1712

if.else120:                                       ; preds = %land.lhs.true89, %if.else82
  %73 = load i32, i32* %ITFlags.addr, align 4, !dbg !1713
  %and121 = and i32 %73, 32, !dbg !1713
  %cmp122 = icmp eq i32 %and121, 32, !dbg !1713
  %74 = zext i1 %cmp122 to i64, !dbg !1713
  %cond124 = select i1 %cmp122, i32 1, i32 0, !dbg !1713
  %cmp125 = icmp ne i32 %cond124, 0, !dbg !1714
  br i1 %cmp125, label %land.lhs.true127, label %if.else135, !dbg !1715

land.lhs.true127:                                 ; preds = %if.else120
  %75 = load i32, i32* %ITSources.addr, align 4, !dbg !1716
  %and128 = and i32 %75, 32, !dbg !1716
  %cmp129 = icmp eq i32 %and128, 32, !dbg !1716
  %76 = zext i1 %cmp129 to i64, !dbg !1716
  %cond131 = select i1 %cmp129, i32 1, i32 0, !dbg !1716
  %cmp132 = icmp ne i32 %cond131, 0, !dbg !1717
  br i1 %cmp132, label %if.then134, label %if.else135, !dbg !1718

if.then134:                                       ; preds = %land.lhs.true127
  %77 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1719
  %78 = load i32, i32* %ITFlags.addr, align 4, !dbg !1720
  call arm_aapcs_vfpcc void @I2C_ITMasterCplt(%struct.__I2C_HandleTypeDef* %77, i32 %78), !dbg !1721
  br label %if.end136, !dbg !1722

if.else135:                                       ; preds = %land.lhs.true127, %if.else120
  br label %if.end136

if.end136:                                        ; preds = %if.else135, %if.then134
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end119
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end81
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then13
  br label %do.body140, !dbg !1723

do.body140:                                       ; preds = %if.end139
  %79 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1723
  %Lock141 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %79, i32 0, i32 10, !dbg !1723
  store i8 0, i8* %Lock141, align 4, !dbg !1723
  br label %do.end142, !dbg !1723

do.end142:                                        ; preds = %do.body140
  store i8 0, i8* %retval, align 1, !dbg !1724
  br label %return, !dbg !1724

return:                                           ; preds = %do.end142, %if.then
  %80 = load i8, i8* %retval, align 1, !dbg !1725
  ret i8 %80, !dbg !1725
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_DMAMasterTransmitCplt(%struct.__DMA_HandleTypeDef* %hdma) #0 !dbg !1726 {
entry:
  %hdma.addr = alloca %struct.__DMA_HandleTypeDef*, align 4
  %hi2c = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__DMA_HandleTypeDef* %hdma, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4
  %0 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4, !dbg !1727
  %Parent = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !1728
  %1 = load i8*, i8** %Parent, align 4, !dbg !1728
  %2 = bitcast i8* %1 to %struct.__I2C_HandleTypeDef*, !dbg !1729
  store %struct.__I2C_HandleTypeDef* %2, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1730
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1731
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 0, !dbg !1732
  %4 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1732
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %4, i32 0, i32 0, !dbg !1733
  %5 = load volatile i32, i32* %CR1, align 4, !dbg !1734
  %and = and i32 %5, -16385, !dbg !1734
  store volatile i32 %and, i32* %CR1, align 4, !dbg !1734
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1735
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 4, !dbg !1736
  %7 = load volatile i16, i16* %XferCount, align 2, !dbg !1736
  %conv = zext i16 %7 to i32, !dbg !1735
  %cmp = icmp eq i32 %conv, 0, !dbg !1737
  br i1 %cmp, label %if.then, label %if.else, !dbg !1735

if.then:                                          ; preds = %entry
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1738
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %8, i16 zeroext 32), !dbg !1739
  br label %if.end22, !dbg !1740

if.else:                                          ; preds = %entry
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1741
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 3, !dbg !1742
  %10 = load i16, i16* %XferSize, align 4, !dbg !1742
  %conv2 = zext i16 %10 to i32, !dbg !1741
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1743
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 2, !dbg !1744
  %12 = load i8*, i8** %pBuffPtr, align 4, !dbg !1745
  %add.ptr = getelementptr inbounds i8, i8* %12, i32 %conv2, !dbg !1745
  store i8* %add.ptr, i8** %pBuffPtr, align 4, !dbg !1745
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1746
  %XferCount3 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 4, !dbg !1747
  %14 = load volatile i16, i16* %XferCount3, align 2, !dbg !1747
  %conv4 = zext i16 %14 to i32, !dbg !1746
  %cmp5 = icmp ugt i32 %conv4, 255, !dbg !1748
  br i1 %cmp5, label %if.then7, label %if.else9, !dbg !1746

if.then7:                                         ; preds = %if.else
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1749
  %XferSize8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 3, !dbg !1750
  store i16 255, i16* %XferSize8, align 4, !dbg !1751
  br label %if.end, !dbg !1752

if.else9:                                         ; preds = %if.else
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1753
  %XferCount10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 4, !dbg !1754
  %17 = load volatile i16, i16* %XferCount10, align 2, !dbg !1754
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1755
  %XferSize11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 3, !dbg !1756
  store i16 %17, i16* %XferSize11, align 4, !dbg !1757
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then7
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1758
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 8, !dbg !1759
  %20 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !1759
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1760
  %pBuffPtr12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 2, !dbg !1761
  %22 = load i8*, i8** %pBuffPtr12, align 4, !dbg !1761
  %23 = ptrtoint i8* %22 to i32, !dbg !1762
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1763
  %Instance13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 0, !dbg !1764
  %25 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance13, align 4, !dbg !1764
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %25, i32 0, i32 10, !dbg !1765
  %26 = ptrtoint i32* %TXDR to i32, !dbg !1766
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1767
  %XferSize14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 3, !dbg !1768
  %28 = load i16, i16* %XferSize14, align 4, !dbg !1768
  %conv15 = zext i16 %28 to i32, !dbg !1767
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %20, i32 %23, i32 %26, i32 %conv15), !dbg !1769
  %conv16 = zext i8 %call to i32, !dbg !1769
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !1770
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !1769

if.then19:                                        ; preds = %if.end
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1771
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %29, i32 16), !dbg !1772
  br label %if.end21, !dbg !1773

if.else20:                                        ; preds = %if.end
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1774
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %30, i16 zeroext 64), !dbg !1775
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then19
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  ret void, !dbg !1776
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_DMAError(%struct.__DMA_HandleTypeDef* %hdma) #0 !dbg !1777 {
entry:
  %hdma.addr = alloca %struct.__DMA_HandleTypeDef*, align 4
  %hi2c = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__DMA_HandleTypeDef* %hdma, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4
  %0 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4, !dbg !1778
  %Parent = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !1779
  %1 = load i8*, i8** %Parent, align 4, !dbg !1779
  %2 = bitcast i8* %1 to %struct.__I2C_HandleTypeDef*, !dbg !1780
  store %struct.__I2C_HandleTypeDef* %2, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1781
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1782
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 0, !dbg !1783
  %4 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1783
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %4, i32 0, i32 1, !dbg !1784
  %5 = load volatile i32, i32* %CR2, align 4, !dbg !1785
  %or = or i32 %5, 32768, !dbg !1785
  store volatile i32 %or, i32* %CR2, align 4, !dbg !1785
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1786
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %6, i32 16), !dbg !1787
  ret void, !dbg !1788
}

declare dso_local arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef*, i32, i32, i32) #1

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Receive_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size) #0 !dbg !1789 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %xfermode = alloca i32, align 4
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1790
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !1791
  %1 = load volatile i8, i8* %State, align 1, !dbg !1791
  %conv = zext i8 %1 to i32, !dbg !1790
  %cmp = icmp eq i32 %conv, 32, !dbg !1792
  br i1 %cmp, label %if.then, label %if.else80, !dbg !1790

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1793
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 0, !dbg !1793
  %3 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1793
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %3, i32 0, i32 6, !dbg !1793
  %4 = load volatile i32, i32* %ISR, align 4, !dbg !1793
  %and = and i32 %4, 32768, !dbg !1793
  %cmp2 = icmp eq i32 %and, 32768, !dbg !1793
  %5 = zext i1 %cmp2 to i64, !dbg !1793
  %cond = select i1 %cmp2, i32 1, i32 0, !dbg !1793
  %cmp4 = icmp eq i32 %cond, 1, !dbg !1794
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !1793

if.then6:                                         ; preds = %if.then
  store i8 2, i8* %retval, align 1, !dbg !1795
  br label %return, !dbg !1795

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !1796

do.body:                                          ; preds = %if.end
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1796
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 10, !dbg !1796
  %7 = load i8, i8* %Lock, align 4, !dbg !1796
  %conv7 = zext i8 %7 to i32, !dbg !1796
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !1796
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !1796

if.then10:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !1796
  br label %return, !dbg !1796

if.else:                                          ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1796
  %Lock11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 10, !dbg !1796
  store i8 1, i8* %Lock11, align 4, !dbg !1796
  br label %if.end12

if.end12:                                         ; preds = %if.else
  br label %do.end, !dbg !1796

do.end:                                           ; preds = %if.end12
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1797
  %State13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !1798
  store volatile i8 34, i8* %State13, align 1, !dbg !1799
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1800
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 12, !dbg !1801
  store volatile i8 16, i8* %Mode, align 2, !dbg !1802
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1803
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 13, !dbg !1804
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !1805
  %12 = load i8*, i8** %pData.addr, align 4, !dbg !1806
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1807
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 2, !dbg !1808
  store i8* %12, i8** %pBuffPtr, align 4, !dbg !1809
  %14 = load i16, i16* %Size.addr, align 2, !dbg !1810
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1811
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !1812
  store volatile i16 %14, i16* %XferCount, align 2, !dbg !1813
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1814
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 5, !dbg !1815
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !1816
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1817
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 7, !dbg !1818
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !1819
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1820
  %XferCount14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !1821
  %19 = load volatile i16, i16* %XferCount14, align 2, !dbg !1821
  %conv15 = zext i16 %19 to i32, !dbg !1820
  %cmp16 = icmp ugt i32 %conv15, 255, !dbg !1822
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !1820

if.then18:                                        ; preds = %do.end
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1823
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !1824
  store i16 255, i16* %XferSize, align 4, !dbg !1825
  store i32 16777216, i32* %xfermode, align 4, !dbg !1826
  br label %if.end22, !dbg !1827

if.else19:                                        ; preds = %do.end
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1828
  %XferCount20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 4, !dbg !1829
  %22 = load volatile i16, i16* %XferCount20, align 2, !dbg !1829
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1830
  %XferSize21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 3, !dbg !1831
  store i16 %22, i16* %XferSize21, align 4, !dbg !1832
  store i32 33554432, i32* %xfermode, align 4, !dbg !1833
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then18
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1834
  %XferSize23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 3, !dbg !1835
  %25 = load i16, i16* %XferSize23, align 4, !dbg !1835
  %conv24 = zext i16 %25 to i32, !dbg !1834
  %cmp25 = icmp ugt i32 %conv24, 0, !dbg !1836
  br i1 %cmp25, label %if.then27, label %if.else72, !dbg !1834

if.then27:                                        ; preds = %if.end22
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1837
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 9, !dbg !1838
  %27 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !1838
  %cmp28 = icmp ne %struct.__DMA_HandleTypeDef* %27, null, !dbg !1839
  br i1 %cmp28, label %if.then30, label %if.else39, !dbg !1837

if.then30:                                        ; preds = %if.then27
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1840
  %hdmarx31 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 9, !dbg !1841
  %29 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx31, align 4, !dbg !1841
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %29, i32 0, i32 5, !dbg !1842
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAMasterReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !1843
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1844
  %hdmarx32 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 9, !dbg !1845
  %31 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx32, align 4, !dbg !1845
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %31, i32 0, i32 9, !dbg !1846
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !1847
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1848
  %hdmarx33 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 9, !dbg !1849
  %33 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx33, align 4, !dbg !1849
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %33, i32 0, i32 6, !dbg !1850
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !1851
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1852
  %hdmarx34 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 9, !dbg !1853
  %35 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx34, align 4, !dbg !1853
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %35, i32 0, i32 10, !dbg !1854
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !1855
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1856
  %hdmarx35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 9, !dbg !1857
  %37 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx35, align 4, !dbg !1857
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1858
  %Instance36 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 0, !dbg !1859
  %39 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance36, align 4, !dbg !1859
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %39, i32 0, i32 9, !dbg !1860
  %40 = ptrtoint i32* %RXDR to i32, !dbg !1861
  %41 = load i8*, i8** %pData.addr, align 4, !dbg !1862
  %42 = ptrtoint i8* %41 to i32, !dbg !1863
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1864
  %XferSize37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 3, !dbg !1865
  %44 = load i16, i16* %XferSize37, align 4, !dbg !1865
  %conv38 = zext i16 %44 to i32, !dbg !1864
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %37, i32 %40, i32 %42, i32 %conv38), !dbg !1866
  store i8 %call, i8* %dmaxferstatus, align 1, !dbg !1867
  br label %if.end46, !dbg !1868

if.else39:                                        ; preds = %if.then27
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1869
  %State40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 11, !dbg !1870
  store volatile i8 32, i8* %State40, align 1, !dbg !1871
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1872
  %Mode41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %46, i32 0, i32 12, !dbg !1873
  store volatile i8 0, i8* %Mode41, align 2, !dbg !1874
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1875
  %ErrorCode42 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 13, !dbg !1876
  %48 = load volatile i32, i32* %ErrorCode42, align 4, !dbg !1877
  %or = or i32 %48, 128, !dbg !1877
  store volatile i32 %or, i32* %ErrorCode42, align 4, !dbg !1877
  br label %do.body43, !dbg !1878

do.body43:                                        ; preds = %if.else39
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1878
  %Lock44 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 10, !dbg !1878
  store i8 0, i8* %Lock44, align 4, !dbg !1878
  br label %do.end45, !dbg !1878

do.end45:                                         ; preds = %do.body43
  store i8 1, i8* %retval, align 1, !dbg !1879
  br label %return, !dbg !1879

if.end46:                                         ; preds = %if.then30
  %50 = load i8, i8* %dmaxferstatus, align 1, !dbg !1880
  %conv47 = zext i8 %50 to i32, !dbg !1880
  %cmp48 = icmp eq i32 %conv47, 0, !dbg !1881
  br i1 %cmp48, label %if.then50, label %if.else63, !dbg !1880

if.then50:                                        ; preds = %if.end46
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1882
  %52 = load i16, i16* %DevAddress.addr, align 2, !dbg !1883
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1884
  %XferSize51 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 3, !dbg !1885
  %54 = load i16, i16* %XferSize51, align 4, !dbg !1885
  %conv52 = trunc i16 %54 to i8, !dbg !1886
  %55 = load i32, i32* %xfermode, align 4, !dbg !1887
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %51, i16 zeroext %52, i8 zeroext %conv52, i32 %55, i32 -2147474432), !dbg !1888
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1889
  %XferSize53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 3, !dbg !1890
  %57 = load i16, i16* %XferSize53, align 4, !dbg !1890
  %conv54 = zext i16 %57 to i32, !dbg !1889
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1891
  %XferCount55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 4, !dbg !1892
  %59 = load volatile i16, i16* %XferCount55, align 2, !dbg !1893
  %conv56 = zext i16 %59 to i32, !dbg !1893
  %sub = sub nsw i32 %conv56, %conv54, !dbg !1893
  %conv57 = trunc i32 %sub to i16, !dbg !1893
  store volatile i16 %conv57, i16* %XferCount55, align 2, !dbg !1893
  br label %do.body58, !dbg !1894

do.body58:                                        ; preds = %if.then50
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1894
  %Lock59 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 10, !dbg !1894
  store i8 0, i8* %Lock59, align 4, !dbg !1894
  br label %do.end60, !dbg !1894

do.end60:                                         ; preds = %do.body58
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1895
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %61, i16 zeroext 16), !dbg !1896
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1897
  %Instance61 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 0, !dbg !1898
  %63 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance61, align 4, !dbg !1898
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %63, i32 0, i32 0, !dbg !1899
  %64 = load volatile i32, i32* %CR1, align 4, !dbg !1900
  %or62 = or i32 %64, 32768, !dbg !1900
  store volatile i32 %or62, i32* %CR1, align 4, !dbg !1900
  br label %if.end71, !dbg !1901

if.else63:                                        ; preds = %if.end46
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1902
  %State64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 11, !dbg !1903
  store volatile i8 32, i8* %State64, align 1, !dbg !1904
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1905
  %Mode65 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 12, !dbg !1906
  store volatile i8 0, i8* %Mode65, align 2, !dbg !1907
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1908
  %ErrorCode66 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %67, i32 0, i32 13, !dbg !1909
  %68 = load volatile i32, i32* %ErrorCode66, align 4, !dbg !1910
  %or67 = or i32 %68, 16, !dbg !1910
  store volatile i32 %or67, i32* %ErrorCode66, align 4, !dbg !1910
  br label %do.body68, !dbg !1911

do.body68:                                        ; preds = %if.else63
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1911
  %Lock69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 10, !dbg !1911
  store i8 0, i8* %Lock69, align 4, !dbg !1911
  br label %do.end70, !dbg !1911

do.end70:                                         ; preds = %do.body68
  store i8 1, i8* %retval, align 1, !dbg !1912
  br label %return, !dbg !1912

if.end71:                                         ; preds = %do.end60
  br label %if.end79, !dbg !1913

if.else72:                                        ; preds = %if.end22
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1914
  %XferISR73 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %70, i32 0, i32 7, !dbg !1915
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR73, align 4, !dbg !1916
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1917
  %72 = load i16, i16* %DevAddress.addr, align 2, !dbg !1918
  %73 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1919
  %XferSize74 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %73, i32 0, i32 3, !dbg !1920
  %74 = load i16, i16* %XferSize74, align 4, !dbg !1920
  %conv75 = trunc i16 %74 to i8, !dbg !1921
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %71, i16 zeroext %72, i8 zeroext %conv75, i32 33554432, i32 -2147474432), !dbg !1922
  br label %do.body76, !dbg !1923

do.body76:                                        ; preds = %if.else72
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1923
  %Lock77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 10, !dbg !1923
  store i8 0, i8* %Lock77, align 4, !dbg !1923
  br label %do.end78, !dbg !1923

do.end78:                                         ; preds = %do.body76
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1924
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %76, i16 zeroext 1), !dbg !1925
  br label %if.end79

if.end79:                                         ; preds = %do.end78, %if.end71
  store i8 0, i8* %retval, align 1, !dbg !1926
  br label %return, !dbg !1926

if.else80:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !1927
  br label %return, !dbg !1927

return:                                           ; preds = %if.else80, %if.end79, %do.end70, %do.end45, %if.then10, %if.then6
  %77 = load i8, i8* %retval, align 1, !dbg !1928
  ret i8 %77, !dbg !1928
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_DMAMasterReceiveCplt(%struct.__DMA_HandleTypeDef* %hdma) #0 !dbg !1929 {
entry:
  %hdma.addr = alloca %struct.__DMA_HandleTypeDef*, align 4
  %hi2c = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__DMA_HandleTypeDef* %hdma, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4
  %0 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4, !dbg !1930
  %Parent = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !1931
  %1 = load i8*, i8** %Parent, align 4, !dbg !1931
  %2 = bitcast i8* %1 to %struct.__I2C_HandleTypeDef*, !dbg !1932
  store %struct.__I2C_HandleTypeDef* %2, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1933
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1934
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 0, !dbg !1935
  %4 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !1935
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %4, i32 0, i32 0, !dbg !1936
  %5 = load volatile i32, i32* %CR1, align 4, !dbg !1937
  %and = and i32 %5, -32769, !dbg !1937
  store volatile i32 %and, i32* %CR1, align 4, !dbg !1937
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1938
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 4, !dbg !1939
  %7 = load volatile i16, i16* %XferCount, align 2, !dbg !1939
  %conv = zext i16 %7 to i32, !dbg !1938
  %cmp = icmp eq i32 %conv, 0, !dbg !1940
  br i1 %cmp, label %if.then, label %if.else, !dbg !1938

if.then:                                          ; preds = %entry
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1941
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %8, i16 zeroext 32), !dbg !1942
  br label %if.end22, !dbg !1943

if.else:                                          ; preds = %entry
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1944
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 3, !dbg !1945
  %10 = load i16, i16* %XferSize, align 4, !dbg !1945
  %conv2 = zext i16 %10 to i32, !dbg !1944
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1946
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 2, !dbg !1947
  %12 = load i8*, i8** %pBuffPtr, align 4, !dbg !1948
  %add.ptr = getelementptr inbounds i8, i8* %12, i32 %conv2, !dbg !1948
  store i8* %add.ptr, i8** %pBuffPtr, align 4, !dbg !1948
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1949
  %XferCount3 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 4, !dbg !1950
  %14 = load volatile i16, i16* %XferCount3, align 2, !dbg !1950
  %conv4 = zext i16 %14 to i32, !dbg !1949
  %cmp5 = icmp ugt i32 %conv4, 255, !dbg !1951
  br i1 %cmp5, label %if.then7, label %if.else9, !dbg !1949

if.then7:                                         ; preds = %if.else
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1952
  %XferSize8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 3, !dbg !1953
  store i16 255, i16* %XferSize8, align 4, !dbg !1954
  br label %if.end, !dbg !1955

if.else9:                                         ; preds = %if.else
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1956
  %XferCount10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 4, !dbg !1957
  %17 = load volatile i16, i16* %XferCount10, align 2, !dbg !1957
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1958
  %XferSize11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 3, !dbg !1959
  store i16 %17, i16* %XferSize11, align 4, !dbg !1960
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then7
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1961
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 9, !dbg !1962
  %20 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !1962
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1963
  %Instance12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 0, !dbg !1964
  %22 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance12, align 4, !dbg !1964
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %22, i32 0, i32 9, !dbg !1965
  %23 = ptrtoint i32* %RXDR to i32, !dbg !1966
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1967
  %pBuffPtr13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 2, !dbg !1968
  %25 = load i8*, i8** %pBuffPtr13, align 4, !dbg !1968
  %26 = ptrtoint i8* %25 to i32, !dbg !1969
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1970
  %XferSize14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 3, !dbg !1971
  %28 = load i16, i16* %XferSize14, align 4, !dbg !1971
  %conv15 = zext i16 %28 to i32, !dbg !1970
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %20, i32 %23, i32 %26, i32 %conv15), !dbg !1972
  %conv16 = zext i8 %call to i32, !dbg !1972
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !1973
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !1972

if.then19:                                        ; preds = %if.end
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1974
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %29, i32 16), !dbg !1975
  br label %if.end21, !dbg !1976

if.else20:                                        ; preds = %if.end
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !1977
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %30, i16 zeroext 64), !dbg !1978
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then19
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  ret void, !dbg !1979
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Transmit_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size) #0 !dbg !1980 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1981
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !1982
  %1 = load volatile i8, i8* %State, align 1, !dbg !1982
  %conv = zext i8 %1 to i32, !dbg !1981
  %cmp = icmp eq i32 %conv, 32, !dbg !1983
  br i1 %cmp, label %if.then, label %if.else54, !dbg !1981

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !1984
  %cmp2 = icmp eq i8* %2, null, !dbg !1985
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !1986

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !1987
  %conv4 = zext i16 %3 to i32, !dbg !1987
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !1988
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !1989

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1990
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !1991
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !1992
  store i8 1, i8* %retval, align 1, !dbg !1993
  br label %return, !dbg !1993

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !1994

do.body:                                          ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1994
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 10, !dbg !1994
  %6 = load i8, i8* %Lock, align 4, !dbg !1994
  %conv8 = zext i8 %6 to i32, !dbg !1994
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !1994
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !1994

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !1994
  br label %return, !dbg !1994

if.else:                                          ; preds = %do.body
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1994
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !1994
  store i8 1, i8* %Lock12, align 4, !dbg !1994
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !1994

do.end:                                           ; preds = %if.end13
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1995
  %State14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 11, !dbg !1996
  store volatile i8 33, i8* %State14, align 1, !dbg !1997
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !1998
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 12, !dbg !1999
  store volatile i8 32, i8* %Mode, align 2, !dbg !2000
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2001
  %ErrorCode15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 13, !dbg !2002
  store volatile i32 0, i32* %ErrorCode15, align 4, !dbg !2003
  %11 = load i8*, i8** %pData.addr, align 4, !dbg !2004
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2005
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 2, !dbg !2006
  store i8* %11, i8** %pBuffPtr, align 4, !dbg !2007
  %13 = load i16, i16* %Size.addr, align 2, !dbg !2008
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2009
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 4, !dbg !2010
  store volatile i16 %13, i16* %XferCount, align 2, !dbg !2011
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2012
  %XferCount16 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !2013
  %16 = load volatile i16, i16* %XferCount16, align 2, !dbg !2013
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2014
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !2015
  store i16 %16, i16* %XferSize, align 4, !dbg !2016
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2017
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 5, !dbg !2018
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !2019
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2020
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 7, !dbg !2021
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !2022
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2023
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 8, !dbg !2024
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !2024
  %cmp17 = icmp ne %struct.__DMA_HandleTypeDef* %21, null, !dbg !2025
  br i1 %cmp17, label %if.then19, label %if.else27, !dbg !2023

if.then19:                                        ; preds = %do.end
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2026
  %hdmatx20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 8, !dbg !2027
  %23 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx20, align 4, !dbg !2027
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %23, i32 0, i32 5, !dbg !2028
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMASlaveTransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !2029
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2030
  %hdmatx21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 8, !dbg !2031
  %25 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx21, align 4, !dbg !2031
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %25, i32 0, i32 9, !dbg !2032
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !2033
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2034
  %hdmatx22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 8, !dbg !2035
  %27 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx22, align 4, !dbg !2035
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %27, i32 0, i32 6, !dbg !2036
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !2037
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2038
  %hdmatx23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 8, !dbg !2039
  %29 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx23, align 4, !dbg !2039
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %29, i32 0, i32 10, !dbg !2040
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !2041
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2042
  %hdmatx24 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 8, !dbg !2043
  %31 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx24, align 4, !dbg !2043
  %32 = load i8*, i8** %pData.addr, align 4, !dbg !2044
  %33 = ptrtoint i8* %32 to i32, !dbg !2045
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2046
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 0, !dbg !2047
  %35 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2047
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %35, i32 0, i32 10, !dbg !2048
  %36 = ptrtoint i32* %TXDR to i32, !dbg !2049
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2050
  %XferSize25 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 3, !dbg !2051
  %38 = load i16, i16* %XferSize25, align 4, !dbg !2051
  %conv26 = zext i16 %38 to i32, !dbg !2050
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %31, i32 %33, i32 %36, i32 %conv26), !dbg !2052
  store i8 %call, i8* %dmaxferstatus, align 1, !dbg !2053
  br label %if.end34, !dbg !2054

if.else27:                                        ; preds = %do.end
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2055
  %State28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 11, !dbg !2056
  store volatile i8 40, i8* %State28, align 1, !dbg !2057
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2058
  %Mode29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 12, !dbg !2059
  store volatile i8 0, i8* %Mode29, align 2, !dbg !2060
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2061
  %ErrorCode30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 13, !dbg !2062
  %42 = load volatile i32, i32* %ErrorCode30, align 4, !dbg !2063
  %or = or i32 %42, 128, !dbg !2063
  store volatile i32 %or, i32* %ErrorCode30, align 4, !dbg !2063
  br label %do.body31, !dbg !2064

do.body31:                                        ; preds = %if.else27
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2064
  %Lock32 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 10, !dbg !2064
  store i8 0, i8* %Lock32, align 4, !dbg !2064
  br label %do.end33, !dbg !2064

do.end33:                                         ; preds = %do.body31
  store i8 1, i8* %retval, align 1, !dbg !2065
  br label %return, !dbg !2065

if.end34:                                         ; preds = %if.then19
  %44 = load i8, i8* %dmaxferstatus, align 1, !dbg !2066
  %conv35 = zext i8 %44 to i32, !dbg !2066
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !2067
  br i1 %cmp36, label %if.then38, label %if.else45, !dbg !2066

if.then38:                                        ; preds = %if.end34
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2068
  %Instance39 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 0, !dbg !2069
  %46 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance39, align 4, !dbg !2069
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %46, i32 0, i32 1, !dbg !2070
  %47 = load volatile i32, i32* %CR2, align 4, !dbg !2071
  %and = and i32 %47, -32769, !dbg !2071
  store volatile i32 %and, i32* %CR2, align 4, !dbg !2071
  br label %do.body40, !dbg !2072

do.body40:                                        ; preds = %if.then38
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2072
  %Lock41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 10, !dbg !2072
  store i8 0, i8* %Lock41, align 4, !dbg !2072
  br label %do.end42, !dbg !2072

do.end42:                                         ; preds = %do.body40
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2073
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %49, i16 zeroext -32768), !dbg !2074
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2075
  %Instance43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 0, !dbg !2076
  %51 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance43, align 4, !dbg !2076
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %51, i32 0, i32 0, !dbg !2077
  %52 = load volatile i32, i32* %CR1, align 4, !dbg !2078
  %or44 = or i32 %52, 16384, !dbg !2078
  store volatile i32 %or44, i32* %CR1, align 4, !dbg !2078
  br label %if.end53, !dbg !2079

if.else45:                                        ; preds = %if.end34
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2080
  %State46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 11, !dbg !2081
  store volatile i8 40, i8* %State46, align 1, !dbg !2082
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2083
  %Mode47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 12, !dbg !2084
  store volatile i8 0, i8* %Mode47, align 2, !dbg !2085
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2086
  %ErrorCode48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 13, !dbg !2087
  %56 = load volatile i32, i32* %ErrorCode48, align 4, !dbg !2088
  %or49 = or i32 %56, 16, !dbg !2088
  store volatile i32 %or49, i32* %ErrorCode48, align 4, !dbg !2088
  br label %do.body50, !dbg !2089

do.body50:                                        ; preds = %if.else45
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2089
  %Lock51 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 10, !dbg !2089
  store i8 0, i8* %Lock51, align 4, !dbg !2089
  br label %do.end52, !dbg !2089

do.end52:                                         ; preds = %do.body50
  store i8 1, i8* %retval, align 1, !dbg !2090
  br label %return, !dbg !2090

if.end53:                                         ; preds = %do.end42
  store i8 0, i8* %retval, align 1, !dbg !2091
  br label %return, !dbg !2091

if.else54:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !2092
  br label %return, !dbg !2092

return:                                           ; preds = %if.else54, %if.end53, %do.end52, %do.end33, %if.then11, %if.then7
  %58 = load i8, i8* %retval, align 1, !dbg !2093
  ret i8 %58, !dbg !2093
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_Slave_ISR_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ITFlags, i32 %ITSources) #0 !dbg !2094 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ITFlags.addr = alloca i32, align 4
  %ITSources.addr = alloca i32, align 4
  %tmpoptions = alloca i32, align 4
  %treatdmanack = alloca i32, align 4
  %tmpstate = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ITFlags, i32* %ITFlags.addr, align 4
  store i32 %ITSources, i32* %ITSources.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2095
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 5, !dbg !2096
  %1 = load volatile i32, i32* %XferOptions, align 4, !dbg !2096
  store i32 %1, i32* %tmpoptions, align 4, !dbg !2097
  store i32 0, i32* %treatdmanack, align 4, !dbg !2098
  br label %do.body, !dbg !2099

do.body:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2099
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !2099
  %3 = load i8, i8* %Lock, align 4, !dbg !2099
  %conv = zext i8 %3 to i32, !dbg !2099
  %cmp = icmp eq i32 %conv, 1, !dbg !2099
  br i1 %cmp, label %if.then, label %if.else, !dbg !2099

if.then:                                          ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !2099
  br label %return, !dbg !2099

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2099
  %Lock2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !2099
  store i8 1, i8* %Lock2, align 4, !dbg !2099
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !2099

do.end:                                           ; preds = %if.end
  %5 = load i32, i32* %ITFlags.addr, align 4, !dbg !2100
  %and = and i32 %5, 32, !dbg !2100
  %cmp3 = icmp eq i32 %and, 32, !dbg !2100
  %6 = zext i1 %cmp3 to i64, !dbg !2100
  %cond = select i1 %cmp3, i32 1, i32 0, !dbg !2100
  %cmp5 = icmp ne i32 %cond, 0, !dbg !2101
  br i1 %cmp5, label %land.lhs.true, label %if.end14, !dbg !2102

land.lhs.true:                                    ; preds = %do.end
  %7 = load i32, i32* %ITSources.addr, align 4, !dbg !2103
  %and7 = and i32 %7, 32, !dbg !2103
  %cmp8 = icmp eq i32 %and7, 32, !dbg !2103
  %8 = zext i1 %cmp8 to i64, !dbg !2103
  %cond10 = select i1 %cmp8, i32 1, i32 0, !dbg !2103
  %cmp11 = icmp ne i32 %cond10, 0, !dbg !2104
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !2105

if.then13:                                        ; preds = %land.lhs.true
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2106
  %10 = load i32, i32* %ITFlags.addr, align 4, !dbg !2107
  call arm_aapcs_vfpcc void @I2C_ITSlaveCplt(%struct.__I2C_HandleTypeDef* %9, i32 %10), !dbg !2108
  br label %if.end14, !dbg !2109

if.end14:                                         ; preds = %if.then13, %land.lhs.true, %do.end
  %11 = load i32, i32* %ITFlags.addr, align 4, !dbg !2110
  %and15 = and i32 %11, 16, !dbg !2110
  %cmp16 = icmp eq i32 %and15, 16, !dbg !2110
  %12 = zext i1 %cmp16 to i64, !dbg !2110
  %cond18 = select i1 %cmp16, i32 1, i32 0, !dbg !2110
  %cmp19 = icmp ne i32 %cond18, 0, !dbg !2111
  br i1 %cmp19, label %land.lhs.true21, label %if.else141, !dbg !2112

land.lhs.true21:                                  ; preds = %if.end14
  %13 = load i32, i32* %ITSources.addr, align 4, !dbg !2113
  %and22 = and i32 %13, 16, !dbg !2113
  %cmp23 = icmp eq i32 %and22, 16, !dbg !2113
  %14 = zext i1 %cmp23 to i64, !dbg !2113
  %cond25 = select i1 %cmp23, i32 1, i32 0, !dbg !2113
  %cmp26 = icmp ne i32 %cond25, 0, !dbg !2114
  br i1 %cmp26, label %if.then28, label %if.else141, !dbg !2115

if.then28:                                        ; preds = %land.lhs.true21
  %15 = load i32, i32* %ITSources.addr, align 4, !dbg !2116
  %and29 = and i32 %15, 16384, !dbg !2116
  %cmp30 = icmp eq i32 %and29, 16384, !dbg !2116
  %16 = zext i1 %cmp30 to i64, !dbg !2116
  %cond32 = select i1 %cmp30, i32 1, i32 0, !dbg !2116
  %cmp33 = icmp ne i32 %cond32, 0, !dbg !2117
  br i1 %cmp33, label %if.then41, label %lor.lhs.false, !dbg !2118

lor.lhs.false:                                    ; preds = %if.then28
  %17 = load i32, i32* %ITSources.addr, align 4, !dbg !2119
  %and35 = and i32 %17, 32768, !dbg !2119
  %cmp36 = icmp eq i32 %and35, 32768, !dbg !2119
  %18 = zext i1 %cmp36 to i64, !dbg !2119
  %cond38 = select i1 %cmp36, i32 1, i32 0, !dbg !2119
  %cmp39 = icmp ne i32 %cond38, 0, !dbg !2120
  br i1 %cmp39, label %if.then41, label %if.else137, !dbg !2121

if.then41:                                        ; preds = %lor.lhs.false, %if.then28
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2122
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 9, !dbg !2123
  %20 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !2123
  %cmp42 = icmp ne %struct.__DMA_HandleTypeDef* %20, null, !dbg !2124
  br i1 %cmp42, label %if.then44, label %if.end58, !dbg !2122

if.then44:                                        ; preds = %if.then41
  %21 = load i32, i32* %ITSources.addr, align 4, !dbg !2125
  %and45 = and i32 %21, 32768, !dbg !2125
  %cmp46 = icmp eq i32 %and45, 32768, !dbg !2125
  %22 = zext i1 %cmp46 to i64, !dbg !2125
  %cond48 = select i1 %cmp46, i32 1, i32 0, !dbg !2125
  %cmp49 = icmp ne i32 %cond48, 0, !dbg !2126
  br i1 %cmp49, label %if.then51, label %if.end57, !dbg !2125

if.then51:                                        ; preds = %if.then44
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2127
  %hdmarx52 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 9, !dbg !2127
  %24 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx52, align 4, !dbg !2127
  %Instance = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %24, i32 0, i32 0, !dbg !2127
  %25 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %Instance, align 4, !dbg !2127
  %CNDTR = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %25, i32 0, i32 1, !dbg !2127
  %26 = load volatile i32, i32* %CNDTR, align 4, !dbg !2127
  %cmp53 = icmp eq i32 %26, 0, !dbg !2128
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !2127

if.then55:                                        ; preds = %if.then51
  store i32 1, i32* %treatdmanack, align 4, !dbg !2129
  br label %if.end56, !dbg !2130

if.end56:                                         ; preds = %if.then55, %if.then51
  br label %if.end57, !dbg !2131

if.end57:                                         ; preds = %if.end56, %if.then44
  br label %if.end58, !dbg !2132

if.end58:                                         ; preds = %if.end57, %if.then41
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2133
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 8, !dbg !2134
  %28 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !2134
  %cmp59 = icmp ne %struct.__DMA_HandleTypeDef* %28, null, !dbg !2135
  br i1 %cmp59, label %if.then61, label %if.end77, !dbg !2133

if.then61:                                        ; preds = %if.end58
  %29 = load i32, i32* %ITSources.addr, align 4, !dbg !2136
  %and62 = and i32 %29, 16384, !dbg !2136
  %cmp63 = icmp eq i32 %and62, 16384, !dbg !2136
  %30 = zext i1 %cmp63 to i64, !dbg !2136
  %cond65 = select i1 %cmp63, i32 1, i32 0, !dbg !2136
  %cmp66 = icmp ne i32 %cond65, 0, !dbg !2137
  br i1 %cmp66, label %if.then68, label %if.end76, !dbg !2136

if.then68:                                        ; preds = %if.then61
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2138
  %hdmatx69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 8, !dbg !2138
  %32 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx69, align 4, !dbg !2138
  %Instance70 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %32, i32 0, i32 0, !dbg !2138
  %33 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %Instance70, align 4, !dbg !2138
  %CNDTR71 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %33, i32 0, i32 1, !dbg !2138
  %34 = load volatile i32, i32* %CNDTR71, align 4, !dbg !2138
  %cmp72 = icmp eq i32 %34, 0, !dbg !2139
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !2138

if.then74:                                        ; preds = %if.then68
  store i32 1, i32* %treatdmanack, align 4, !dbg !2140
  br label %if.end75, !dbg !2141

if.end75:                                         ; preds = %if.then74, %if.then68
  br label %if.end76, !dbg !2142

if.end76:                                         ; preds = %if.end75, %if.then61
  br label %if.end77, !dbg !2143

if.end77:                                         ; preds = %if.end76, %if.end58
  %35 = load i32, i32* %treatdmanack, align 4, !dbg !2144
  %cmp78 = icmp eq i32 %35, 1, !dbg !2145
  br i1 %cmp78, label %if.then80, label %if.else103, !dbg !2144

if.then80:                                        ; preds = %if.end77
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2146
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 11, !dbg !2147
  %37 = load volatile i8, i8* %State, align 1, !dbg !2147
  %conv81 = zext i8 %37 to i32, !dbg !2146
  %cmp82 = icmp eq i32 %conv81, 40, !dbg !2148
  br i1 %cmp82, label %land.lhs.true84, label %if.else88, !dbg !2149

land.lhs.true84:                                  ; preds = %if.then80
  %38 = load i32, i32* %tmpoptions, align 4, !dbg !2150
  %cmp85 = icmp eq i32 %38, 33554432, !dbg !2151
  br i1 %cmp85, label %if.then87, label %if.else88, !dbg !2152

if.then87:                                        ; preds = %land.lhs.true84
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2153
  %40 = load i32, i32* %ITFlags.addr, align 4, !dbg !2154
  call arm_aapcs_vfpcc void @I2C_ITListenCplt(%struct.__I2C_HandleTypeDef* %39, i32 %40), !dbg !2155
  br label %if.end102, !dbg !2156

if.else88:                                        ; preds = %land.lhs.true84, %if.then80
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2157
  %State89 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 11, !dbg !2158
  %42 = load volatile i8, i8* %State89, align 1, !dbg !2158
  %conv90 = zext i8 %42 to i32, !dbg !2157
  %cmp91 = icmp eq i32 %conv90, 41, !dbg !2159
  br i1 %cmp91, label %land.lhs.true93, label %if.else98, !dbg !2160

land.lhs.true93:                                  ; preds = %if.else88
  %43 = load i32, i32* %tmpoptions, align 4, !dbg !2161
  %cmp94 = icmp ne i32 %43, -65536, !dbg !2162
  br i1 %cmp94, label %if.then96, label %if.else98, !dbg !2163

if.then96:                                        ; preds = %land.lhs.true93
  %44 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2164
  %Instance97 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %44, i32 0, i32 0, !dbg !2164
  %45 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance97, align 4, !dbg !2164
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %45, i32 0, i32 7, !dbg !2164
  store volatile i32 16, i32* %ICR, align 4, !dbg !2164
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2165
  call arm_aapcs_vfpcc void @I2C_Flush_TXDR(%struct.__I2C_HandleTypeDef* %46), !dbg !2166
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2167
  call arm_aapcs_vfpcc void @I2C_ITSlaveSeqCplt(%struct.__I2C_HandleTypeDef* %47), !dbg !2168
  br label %if.end101, !dbg !2169

if.else98:                                        ; preds = %land.lhs.true93, %if.else88
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2170
  %Instance99 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 0, !dbg !2170
  %49 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance99, align 4, !dbg !2170
  %ICR100 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %49, i32 0, i32 7, !dbg !2170
  store volatile i32 16, i32* %ICR100, align 4, !dbg !2170
  br label %if.end101

if.end101:                                        ; preds = %if.else98, %if.then96
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then87
  br label %if.end136, !dbg !2171

if.else103:                                       ; preds = %if.end77
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2172
  %Instance104 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 0, !dbg !2172
  %51 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance104, align 4, !dbg !2172
  %ICR105 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %51, i32 0, i32 7, !dbg !2172
  store volatile i32 16, i32* %ICR105, align 4, !dbg !2172
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2173
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 13, !dbg !2174
  %53 = load volatile i32, i32* %ErrorCode, align 4, !dbg !2175
  %or = or i32 %53, 4, !dbg !2175
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !2175
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2176
  %State106 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 11, !dbg !2177
  %55 = load volatile i8, i8* %State106, align 1, !dbg !2177
  store i8 %55, i8* %tmpstate, align 1, !dbg !2178
  %56 = load i32, i32* %tmpoptions, align 4, !dbg !2179
  %cmp107 = icmp eq i32 %56, 0, !dbg !2180
  br i1 %cmp107, label %if.then112, label %lor.lhs.false109, !dbg !2181

lor.lhs.false109:                                 ; preds = %if.else103
  %57 = load i32, i32* %tmpoptions, align 4, !dbg !2182
  %cmp110 = icmp eq i32 %57, 16777216, !dbg !2183
  br i1 %cmp110, label %if.then112, label %if.end135, !dbg !2184

if.then112:                                       ; preds = %lor.lhs.false109, %if.else103
  %58 = load i8, i8* %tmpstate, align 1, !dbg !2185
  %conv113 = zext i8 %58 to i32, !dbg !2185
  %cmp114 = icmp eq i32 %conv113, 33, !dbg !2186
  br i1 %cmp114, label %if.then120, label %lor.lhs.false116, !dbg !2187

lor.lhs.false116:                                 ; preds = %if.then112
  %59 = load i8, i8* %tmpstate, align 1, !dbg !2188
  %conv117 = zext i8 %59 to i32, !dbg !2188
  %cmp118 = icmp eq i32 %conv117, 41, !dbg !2189
  br i1 %cmp118, label %if.then120, label %if.else121, !dbg !2190

if.then120:                                       ; preds = %lor.lhs.false116, %if.then112
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2191
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 6, !dbg !2192
  store volatile i32 33, i32* %PreviousState, align 4, !dbg !2193
  br label %if.end133, !dbg !2194

if.else121:                                       ; preds = %lor.lhs.false116
  %61 = load i8, i8* %tmpstate, align 1, !dbg !2195
  %conv122 = zext i8 %61 to i32, !dbg !2195
  %cmp123 = icmp eq i32 %conv122, 34, !dbg !2196
  br i1 %cmp123, label %if.then129, label %lor.lhs.false125, !dbg !2197

lor.lhs.false125:                                 ; preds = %if.else121
  %62 = load i8, i8* %tmpstate, align 1, !dbg !2198
  %conv126 = zext i8 %62 to i32, !dbg !2198
  %cmp127 = icmp eq i32 %conv126, 42, !dbg !2199
  br i1 %cmp127, label %if.then129, label %if.else131, !dbg !2200

if.then129:                                       ; preds = %lor.lhs.false125, %if.else121
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2201
  %PreviousState130 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %63, i32 0, i32 6, !dbg !2202
  store volatile i32 34, i32* %PreviousState130, align 4, !dbg !2203
  br label %if.end132, !dbg !2204

if.else131:                                       ; preds = %lor.lhs.false125
  br label %if.end132

if.end132:                                        ; preds = %if.else131, %if.then129
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then120
  %64 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2205
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2206
  %ErrorCode134 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 13, !dbg !2207
  %66 = load volatile i32, i32* %ErrorCode134, align 4, !dbg !2207
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %64, i32 %66), !dbg !2208
  br label %if.end135, !dbg !2209

if.end135:                                        ; preds = %if.end133, %lor.lhs.false109
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end102
  br label %if.end140, !dbg !2210

if.else137:                                       ; preds = %lor.lhs.false
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2211
  %Instance138 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %67, i32 0, i32 0, !dbg !2211
  %68 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance138, align 4, !dbg !2211
  %ICR139 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %68, i32 0, i32 7, !dbg !2211
  store volatile i32 16, i32* %ICR139, align 4, !dbg !2211
  br label %if.end140

if.end140:                                        ; preds = %if.else137, %if.end136
  br label %if.end158, !dbg !2212

if.else141:                                       ; preds = %land.lhs.true21, %if.end14
  %69 = load i32, i32* %ITFlags.addr, align 4, !dbg !2213
  %and142 = and i32 %69, 8, !dbg !2213
  %cmp143 = icmp eq i32 %and142, 8, !dbg !2213
  %70 = zext i1 %cmp143 to i64, !dbg !2213
  %cond145 = select i1 %cmp143, i32 1, i32 0, !dbg !2213
  %cmp146 = icmp ne i32 %cond145, 0, !dbg !2214
  br i1 %cmp146, label %land.lhs.true148, label %if.else156, !dbg !2215

land.lhs.true148:                                 ; preds = %if.else141
  %71 = load i32, i32* %ITSources.addr, align 4, !dbg !2216
  %and149 = and i32 %71, 8, !dbg !2216
  %cmp150 = icmp eq i32 %and149, 8, !dbg !2216
  %72 = zext i1 %cmp150 to i64, !dbg !2216
  %cond152 = select i1 %cmp150, i32 1, i32 0, !dbg !2216
  %cmp153 = icmp ne i32 %cond152, 0, !dbg !2217
  br i1 %cmp153, label %if.then155, label %if.else156, !dbg !2218

if.then155:                                       ; preds = %land.lhs.true148
  %73 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2219
  %74 = load i32, i32* %ITFlags.addr, align 4, !dbg !2220
  call arm_aapcs_vfpcc void @I2C_ITAddrCplt(%struct.__I2C_HandleTypeDef* %73, i32 %74), !dbg !2221
  br label %if.end157, !dbg !2222

if.else156:                                       ; preds = %land.lhs.true148, %if.else141
  br label %if.end157

if.end157:                                        ; preds = %if.else156, %if.then155
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.end140
  br label %do.body159, !dbg !2223

do.body159:                                       ; preds = %if.end158
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2223
  %Lock160 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 10, !dbg !2223
  store i8 0, i8* %Lock160, align 4, !dbg !2223
  br label %do.end161, !dbg !2223

do.end161:                                        ; preds = %do.body159
  store i8 0, i8* %retval, align 1, !dbg !2224
  br label %return, !dbg !2224

return:                                           ; preds = %do.end161, %if.then
  %76 = load i8, i8* %retval, align 1, !dbg !2225
  ret i8 %76, !dbg !2225
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_DMASlaveTransmitCplt(%struct.__DMA_HandleTypeDef* %hdma) #0 !dbg !2226 {
entry:
  %hdma.addr = alloca %struct.__DMA_HandleTypeDef*, align 4
  %hi2c = alloca %struct.__I2C_HandleTypeDef*, align 4
  %tmpoptions = alloca i32, align 4
  store %struct.__DMA_HandleTypeDef* %hdma, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4
  %0 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4, !dbg !2227
  %Parent = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !2228
  %1 = load i8*, i8** %Parent, align 4, !dbg !2228
  %2 = bitcast i8* %1 to %struct.__I2C_HandleTypeDef*, !dbg !2229
  store %struct.__I2C_HandleTypeDef* %2, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2230
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2231
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 5, !dbg !2232
  %4 = load volatile i32, i32* %XferOptions, align 4, !dbg !2232
  store i32 %4, i32* %tmpoptions, align 4, !dbg !2233
  %5 = load i32, i32* %tmpoptions, align 4, !dbg !2234
  %cmp = icmp eq i32 %5, 16777216, !dbg !2235
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2236

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %tmpoptions, align 4, !dbg !2237
  %cmp1 = icmp eq i32 %6, 0, !dbg !2238
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2239

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2240
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 0, !dbg !2241
  %8 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2241
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %8, i32 0, i32 0, !dbg !2242
  %9 = load volatile i32, i32* %CR1, align 4, !dbg !2243
  %and = and i32 %9, -16385, !dbg !2243
  store volatile i32 %and, i32* %CR1, align 4, !dbg !2243
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2244
  call arm_aapcs_vfpcc void @I2C_ITSlaveSeqCplt(%struct.__I2C_HandleTypeDef* %10), !dbg !2245
  br label %if.end, !dbg !2246

if.else:                                          ; preds = %lor.lhs.false
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2247
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Receive_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size) #0 !dbg !2248 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2249
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !2250
  %1 = load volatile i8, i8* %State, align 1, !dbg !2250
  %conv = zext i8 %1 to i32, !dbg !2249
  %cmp = icmp eq i32 %conv, 32, !dbg !2251
  br i1 %cmp, label %if.then, label %if.else54, !dbg !2249

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !2252
  %cmp2 = icmp eq i8* %2, null, !dbg !2253
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !2254

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !2255
  %conv4 = zext i16 %3 to i32, !dbg !2255
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !2256
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !2257

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2258
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !2259
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !2260
  store i8 1, i8* %retval, align 1, !dbg !2261
  br label %return, !dbg !2261

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !2262

do.body:                                          ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2262
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 10, !dbg !2262
  %6 = load i8, i8* %Lock, align 4, !dbg !2262
  %conv8 = zext i8 %6 to i32, !dbg !2262
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !2262
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !2262

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !2262
  br label %return, !dbg !2262

if.else:                                          ; preds = %do.body
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2262
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !2262
  store i8 1, i8* %Lock12, align 4, !dbg !2262
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !2262

do.end:                                           ; preds = %if.end13
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2263
  %State14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 11, !dbg !2264
  store volatile i8 34, i8* %State14, align 1, !dbg !2265
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2266
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 12, !dbg !2267
  store volatile i8 32, i8* %Mode, align 2, !dbg !2268
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2269
  %ErrorCode15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 13, !dbg !2270
  store volatile i32 0, i32* %ErrorCode15, align 4, !dbg !2271
  %11 = load i8*, i8** %pData.addr, align 4, !dbg !2272
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2273
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 2, !dbg !2274
  store i8* %11, i8** %pBuffPtr, align 4, !dbg !2275
  %13 = load i16, i16* %Size.addr, align 2, !dbg !2276
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2277
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 4, !dbg !2278
  store volatile i16 %13, i16* %XferCount, align 2, !dbg !2279
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2280
  %XferCount16 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !2281
  %16 = load volatile i16, i16* %XferCount16, align 2, !dbg !2281
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2282
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !2283
  store i16 %16, i16* %XferSize, align 4, !dbg !2284
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2285
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 5, !dbg !2286
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !2287
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2288
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 7, !dbg !2289
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !2290
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2291
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 9, !dbg !2292
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !2292
  %cmp17 = icmp ne %struct.__DMA_HandleTypeDef* %21, null, !dbg !2293
  br i1 %cmp17, label %if.then19, label %if.else27, !dbg !2291

if.then19:                                        ; preds = %do.end
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2294
  %hdmarx20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 9, !dbg !2295
  %23 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx20, align 4, !dbg !2295
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %23, i32 0, i32 5, !dbg !2296
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMASlaveReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !2297
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2298
  %hdmarx21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 9, !dbg !2299
  %25 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx21, align 4, !dbg !2299
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %25, i32 0, i32 9, !dbg !2300
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !2301
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2302
  %hdmarx22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 9, !dbg !2303
  %27 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx22, align 4, !dbg !2303
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %27, i32 0, i32 6, !dbg !2304
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !2305
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2306
  %hdmarx23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 9, !dbg !2307
  %29 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx23, align 4, !dbg !2307
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %29, i32 0, i32 10, !dbg !2308
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !2309
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2310
  %hdmarx24 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 9, !dbg !2311
  %31 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx24, align 4, !dbg !2311
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2312
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 0, !dbg !2313
  %33 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2313
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %33, i32 0, i32 9, !dbg !2314
  %34 = ptrtoint i32* %RXDR to i32, !dbg !2315
  %35 = load i8*, i8** %pData.addr, align 4, !dbg !2316
  %36 = ptrtoint i8* %35 to i32, !dbg !2317
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2318
  %XferSize25 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 3, !dbg !2319
  %38 = load i16, i16* %XferSize25, align 4, !dbg !2319
  %conv26 = zext i16 %38 to i32, !dbg !2318
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %31, i32 %34, i32 %36, i32 %conv26), !dbg !2320
  store i8 %call, i8* %dmaxferstatus, align 1, !dbg !2321
  br label %if.end34, !dbg !2322

if.else27:                                        ; preds = %do.end
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2323
  %State28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 11, !dbg !2324
  store volatile i8 40, i8* %State28, align 1, !dbg !2325
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2326
  %Mode29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 12, !dbg !2327
  store volatile i8 0, i8* %Mode29, align 2, !dbg !2328
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2329
  %ErrorCode30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 13, !dbg !2330
  %42 = load volatile i32, i32* %ErrorCode30, align 4, !dbg !2331
  %or = or i32 %42, 128, !dbg !2331
  store volatile i32 %or, i32* %ErrorCode30, align 4, !dbg !2331
  br label %do.body31, !dbg !2332

do.body31:                                        ; preds = %if.else27
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2332
  %Lock32 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 10, !dbg !2332
  store i8 0, i8* %Lock32, align 4, !dbg !2332
  br label %do.end33, !dbg !2332

do.end33:                                         ; preds = %do.body31
  store i8 1, i8* %retval, align 1, !dbg !2333
  br label %return, !dbg !2333

if.end34:                                         ; preds = %if.then19
  %44 = load i8, i8* %dmaxferstatus, align 1, !dbg !2334
  %conv35 = zext i8 %44 to i32, !dbg !2334
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !2335
  br i1 %cmp36, label %if.then38, label %if.else45, !dbg !2334

if.then38:                                        ; preds = %if.end34
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2336
  %Instance39 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 0, !dbg !2337
  %46 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance39, align 4, !dbg !2337
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %46, i32 0, i32 1, !dbg !2338
  %47 = load volatile i32, i32* %CR2, align 4, !dbg !2339
  %and = and i32 %47, -32769, !dbg !2339
  store volatile i32 %and, i32* %CR2, align 4, !dbg !2339
  br label %do.body40, !dbg !2340

do.body40:                                        ; preds = %if.then38
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2340
  %Lock41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 10, !dbg !2340
  store i8 0, i8* %Lock41, align 4, !dbg !2340
  br label %do.end42, !dbg !2340

do.end42:                                         ; preds = %do.body40
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2341
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %49, i16 zeroext -32768), !dbg !2342
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2343
  %Instance43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 0, !dbg !2344
  %51 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance43, align 4, !dbg !2344
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %51, i32 0, i32 0, !dbg !2345
  %52 = load volatile i32, i32* %CR1, align 4, !dbg !2346
  %or44 = or i32 %52, 32768, !dbg !2346
  store volatile i32 %or44, i32* %CR1, align 4, !dbg !2346
  br label %if.end53, !dbg !2347

if.else45:                                        ; preds = %if.end34
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2348
  %State46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 11, !dbg !2349
  store volatile i8 40, i8* %State46, align 1, !dbg !2350
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2351
  %Mode47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 12, !dbg !2352
  store volatile i8 0, i8* %Mode47, align 2, !dbg !2353
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2354
  %ErrorCode48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 13, !dbg !2355
  %56 = load volatile i32, i32* %ErrorCode48, align 4, !dbg !2356
  %or49 = or i32 %56, 16, !dbg !2356
  store volatile i32 %or49, i32* %ErrorCode48, align 4, !dbg !2356
  br label %do.body50, !dbg !2357

do.body50:                                        ; preds = %if.else45
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2357
  %Lock51 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 10, !dbg !2357
  store i8 0, i8* %Lock51, align 4, !dbg !2357
  br label %do.end52, !dbg !2357

do.end52:                                         ; preds = %do.body50
  store i8 1, i8* %retval, align 1, !dbg !2358
  br label %return, !dbg !2358

if.end53:                                         ; preds = %do.end42
  store i8 0, i8* %retval, align 1, !dbg !2359
  br label %return, !dbg !2359

if.else54:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !2360
  br label %return, !dbg !2360

return:                                           ; preds = %if.else54, %if.end53, %do.end52, %do.end33, %if.then11, %if.then7
  %58 = load i8, i8* %retval, align 1, !dbg !2361
  ret i8 %58, !dbg !2361
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_DMASlaveReceiveCplt(%struct.__DMA_HandleTypeDef* %hdma) #0 !dbg !2362 {
entry:
  %hdma.addr = alloca %struct.__DMA_HandleTypeDef*, align 4
  %hi2c = alloca %struct.__I2C_HandleTypeDef*, align 4
  %tmpoptions = alloca i32, align 4
  store %struct.__DMA_HandleTypeDef* %hdma, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4
  %0 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4, !dbg !2363
  %Parent = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !2364
  %1 = load i8*, i8** %Parent, align 4, !dbg !2364
  %2 = bitcast i8* %1 to %struct.__I2C_HandleTypeDef*, !dbg !2365
  store %struct.__I2C_HandleTypeDef* %2, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2366
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2367
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 5, !dbg !2368
  %4 = load volatile i32, i32* %XferOptions, align 4, !dbg !2368
  store i32 %4, i32* %tmpoptions, align 4, !dbg !2369
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2370
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 9, !dbg !2370
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !2370
  %Instance = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 0, !dbg !2370
  %7 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %Instance, align 4, !dbg !2370
  %CNDTR = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %7, i32 0, i32 1, !dbg !2370
  %8 = load volatile i32, i32* %CNDTR, align 4, !dbg !2370
  %cmp = icmp eq i32 %8, 0, !dbg !2371
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2372

land.lhs.true:                                    ; preds = %entry
  %9 = load i32, i32* %tmpoptions, align 4, !dbg !2373
  %cmp1 = icmp ne i32 %9, -65536, !dbg !2374
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2375

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2376
  %Instance2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 0, !dbg !2377
  %11 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance2, align 4, !dbg !2377
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %11, i32 0, i32 0, !dbg !2378
  %12 = load volatile i32, i32* %CR1, align 4, !dbg !2379
  %and = and i32 %12, -32769, !dbg !2379
  store volatile i32 %and, i32* %CR1, align 4, !dbg !2379
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !2380
  call arm_aapcs_vfpcc void @I2C_ITSlaveSeqCplt(%struct.__I2C_HandleTypeDef* %13), !dbg !2381
  br label %if.end, !dbg !2382

if.else:                                          ; preds = %land.lhs.true, %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2383
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Mem_Write(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i16 zeroext %MemAddress, i16 zeroext %MemAddSize, i8* %pData, i16 zeroext %Size, i32 %Timeout) #0 !dbg !2384 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %MemAddress.addr = alloca i16, align 2
  %MemAddSize.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %Timeout.addr = alloca i32, align 4
  %tickstart = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i16 %MemAddress, i16* %MemAddress.addr, align 2
  store i16 %MemAddSize, i16* %MemAddSize.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %Timeout, i32* %Timeout.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2385
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !2386
  %1 = load volatile i8, i8* %State, align 1, !dbg !2386
  %conv = zext i8 %1 to i32, !dbg !2385
  %cmp = icmp eq i32 %conv, 32, !dbg !2387
  br i1 %cmp, label %if.then, label %if.else106, !dbg !2385

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !2388
  %cmp2 = icmp eq i8* %2, null, !dbg !2389
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !2390

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !2391
  %conv4 = zext i16 %3 to i32, !dbg !2391
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !2392
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !2393

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2394
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !2395
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !2396
  store i8 1, i8* %retval, align 1, !dbg !2397
  br label %return, !dbg !2397

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !2398

do.body:                                          ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2398
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 10, !dbg !2398
  %6 = load i8, i8* %Lock, align 4, !dbg !2398
  %conv8 = zext i8 %6 to i32, !dbg !2398
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !2398
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !2398

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !2398
  br label %return, !dbg !2398

if.else:                                          ; preds = %do.body
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2398
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !2398
  store i8 1, i8* %Lock12, align 4, !dbg !2398
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !2398

do.end:                                           ; preds = %if.end13
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !2399
  store i32 %call, i32* %tickstart, align 4, !dbg !2400
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2401
  %9 = load i32, i32* %tickstart, align 4, !dbg !2402
  %call14 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %8, i32 32768, i8 zeroext 1, i32 25, i32 %9), !dbg !2403
  %conv15 = zext i8 %call14 to i32, !dbg !2403
  %cmp16 = icmp ne i32 %conv15, 0, !dbg !2404
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !2403

if.then18:                                        ; preds = %do.end
  store i8 1, i8* %retval, align 1, !dbg !2405
  br label %return, !dbg !2405

if.end19:                                         ; preds = %do.end
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2406
  %State20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 11, !dbg !2407
  store volatile i8 33, i8* %State20, align 1, !dbg !2408
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2409
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 12, !dbg !2410
  store volatile i8 64, i8* %Mode, align 2, !dbg !2411
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2412
  %ErrorCode21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 13, !dbg !2413
  store volatile i32 0, i32* %ErrorCode21, align 4, !dbg !2414
  %13 = load i8*, i8** %pData.addr, align 4, !dbg !2415
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2416
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 2, !dbg !2417
  store i8* %13, i8** %pBuffPtr, align 4, !dbg !2418
  %15 = load i16, i16* %Size.addr, align 2, !dbg !2419
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2420
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 4, !dbg !2421
  store volatile i16 %15, i16* %XferCount, align 2, !dbg !2422
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2423
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 7, !dbg !2424
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !2425
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2426
  %19 = load i16, i16* %DevAddress.addr, align 2, !dbg !2427
  %20 = load i16, i16* %MemAddress.addr, align 2, !dbg !2428
  %21 = load i16, i16* %MemAddSize.addr, align 2, !dbg !2429
  %22 = load i32, i32* %Timeout.addr, align 4, !dbg !2430
  %23 = load i32, i32* %tickstart, align 4, !dbg !2431
  %call22 = call arm_aapcs_vfpcc zeroext i8 @I2C_RequestMemoryWrite(%struct.__I2C_HandleTypeDef* %18, i16 zeroext %19, i16 zeroext %20, i16 zeroext %21, i32 %22, i32 %23), !dbg !2432
  %conv23 = zext i8 %call22 to i32, !dbg !2432
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !2433
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !2432

if.then26:                                        ; preds = %if.end19
  br label %do.body27, !dbg !2434

do.body27:                                        ; preds = %if.then26
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2434
  %Lock28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 10, !dbg !2434
  store i8 0, i8* %Lock28, align 4, !dbg !2434
  br label %do.end29, !dbg !2434

do.end29:                                         ; preds = %do.body27
  store i8 1, i8* %retval, align 1, !dbg !2435
  br label %return, !dbg !2435

if.end30:                                         ; preds = %if.end19
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2436
  %XferCount31 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 4, !dbg !2437
  %26 = load volatile i16, i16* %XferCount31, align 2, !dbg !2437
  %conv32 = zext i16 %26 to i32, !dbg !2436
  %cmp33 = icmp ugt i32 %conv32, 255, !dbg !2438
  br i1 %cmp33, label %if.then35, label %if.else38, !dbg !2436

if.then35:                                        ; preds = %if.end30
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2439
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 3, !dbg !2440
  store i16 255, i16* %XferSize, align 4, !dbg !2441
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2442
  %29 = load i16, i16* %DevAddress.addr, align 2, !dbg !2443
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2444
  %XferSize36 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 3, !dbg !2445
  %31 = load i16, i16* %XferSize36, align 4, !dbg !2445
  %conv37 = trunc i16 %31 to i8, !dbg !2446
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %28, i16 zeroext %29, i8 zeroext %conv37, i32 16777216, i32 0), !dbg !2447
  br label %if.end43, !dbg !2448

if.else38:                                        ; preds = %if.end30
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2449
  %XferCount39 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 4, !dbg !2450
  %33 = load volatile i16, i16* %XferCount39, align 2, !dbg !2450
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2451
  %XferSize40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 3, !dbg !2452
  store i16 %33, i16* %XferSize40, align 4, !dbg !2453
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2454
  %36 = load i16, i16* %DevAddress.addr, align 2, !dbg !2455
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2456
  %XferSize41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 3, !dbg !2457
  %38 = load i16, i16* %XferSize41, align 4, !dbg !2457
  %conv42 = trunc i16 %38 to i8, !dbg !2458
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %35, i16 zeroext %36, i8 zeroext %conv42, i32 33554432, i32 0), !dbg !2459
  br label %if.end43

if.end43:                                         ; preds = %if.else38, %if.then35
  br label %do.body44, !dbg !2460

do.body44:                                        ; preds = %do.cond, %if.end43
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2461
  %40 = load i32, i32* %Timeout.addr, align 4, !dbg !2462
  %41 = load i32, i32* %tickstart, align 4, !dbg !2463
  %call45 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnTXISFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %39, i32 %40, i32 %41), !dbg !2464
  %conv46 = zext i8 %call45 to i32, !dbg !2464
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !2465
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !2464

if.then49:                                        ; preds = %do.body44
  store i8 1, i8* %retval, align 1, !dbg !2466
  br label %return, !dbg !2466

if.end50:                                         ; preds = %do.body44
  %42 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2467
  %pBuffPtr51 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %42, i32 0, i32 2, !dbg !2468
  %43 = load i8*, i8** %pBuffPtr51, align 4, !dbg !2468
  %44 = load i8, i8* %43, align 1, !dbg !2469
  %conv52 = zext i8 %44 to i32, !dbg !2469
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2470
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 0, !dbg !2471
  %46 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2471
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %46, i32 0, i32 10, !dbg !2472
  store volatile i32 %conv52, i32* %TXDR, align 4, !dbg !2473
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2474
  %pBuffPtr53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 2, !dbg !2475
  %48 = load i8*, i8** %pBuffPtr53, align 4, !dbg !2476
  %incdec.ptr = getelementptr inbounds i8, i8* %48, i32 1, !dbg !2476
  store i8* %incdec.ptr, i8** %pBuffPtr53, align 4, !dbg !2476
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2477
  %XferCount54 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 4, !dbg !2478
  %50 = load volatile i16, i16* %XferCount54, align 2, !dbg !2479
  %dec = add i16 %50, -1, !dbg !2479
  store volatile i16 %dec, i16* %XferCount54, align 2, !dbg !2479
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2480
  %XferSize55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %51, i32 0, i32 3, !dbg !2481
  %52 = load i16, i16* %XferSize55, align 4, !dbg !2482
  %dec56 = add i16 %52, -1, !dbg !2482
  store i16 %dec56, i16* %XferSize55, align 4, !dbg !2482
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2483
  %XferCount57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 4, !dbg !2484
  %54 = load volatile i16, i16* %XferCount57, align 2, !dbg !2484
  %conv58 = zext i16 %54 to i32, !dbg !2483
  %cmp59 = icmp ne i32 %conv58, 0, !dbg !2485
  br i1 %cmp59, label %land.lhs.true, label %if.end86, !dbg !2486

land.lhs.true:                                    ; preds = %if.end50
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2487
  %XferSize61 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 3, !dbg !2488
  %56 = load i16, i16* %XferSize61, align 4, !dbg !2488
  %conv62 = zext i16 %56 to i32, !dbg !2487
  %cmp63 = icmp eq i32 %conv62, 0, !dbg !2489
  br i1 %cmp63, label %if.then65, label %if.end86, !dbg !2490

if.then65:                                        ; preds = %land.lhs.true
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2491
  %58 = load i32, i32* %Timeout.addr, align 4, !dbg !2492
  %59 = load i32, i32* %tickstart, align 4, !dbg !2493
  %call66 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %57, i32 128, i8 zeroext 0, i32 %58, i32 %59), !dbg !2494
  %conv67 = zext i8 %call66 to i32, !dbg !2494
  %cmp68 = icmp ne i32 %conv67, 0, !dbg !2495
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !2494

if.then70:                                        ; preds = %if.then65
  store i8 1, i8* %retval, align 1, !dbg !2496
  br label %return, !dbg !2496

if.end71:                                         ; preds = %if.then65
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2497
  %XferCount72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 4, !dbg !2498
  %61 = load volatile i16, i16* %XferCount72, align 2, !dbg !2498
  %conv73 = zext i16 %61 to i32, !dbg !2497
  %cmp74 = icmp ugt i32 %conv73, 255, !dbg !2499
  br i1 %cmp74, label %if.then76, label %if.else80, !dbg !2497

if.then76:                                        ; preds = %if.end71
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2500
  %XferSize77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 3, !dbg !2501
  store i16 255, i16* %XferSize77, align 4, !dbg !2502
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2503
  %64 = load i16, i16* %DevAddress.addr, align 2, !dbg !2504
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2505
  %XferSize78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 3, !dbg !2506
  %66 = load i16, i16* %XferSize78, align 4, !dbg !2506
  %conv79 = trunc i16 %66 to i8, !dbg !2507
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %63, i16 zeroext %64, i8 zeroext %conv79, i32 16777216, i32 0), !dbg !2508
  br label %if.end85, !dbg !2509

if.else80:                                        ; preds = %if.end71
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2510
  %XferCount81 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %67, i32 0, i32 4, !dbg !2511
  %68 = load volatile i16, i16* %XferCount81, align 2, !dbg !2511
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2512
  %XferSize82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 3, !dbg !2513
  store i16 %68, i16* %XferSize82, align 4, !dbg !2514
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2515
  %71 = load i16, i16* %DevAddress.addr, align 2, !dbg !2516
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2517
  %XferSize83 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 3, !dbg !2518
  %73 = load i16, i16* %XferSize83, align 4, !dbg !2518
  %conv84 = trunc i16 %73 to i8, !dbg !2519
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %70, i16 zeroext %71, i8 zeroext %conv84, i32 33554432, i32 0), !dbg !2520
  br label %if.end85

if.end85:                                         ; preds = %if.else80, %if.then76
  br label %if.end86, !dbg !2521

if.end86:                                         ; preds = %if.end85, %land.lhs.true, %if.end50
  br label %do.cond, !dbg !2522

do.cond:                                          ; preds = %if.end86
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2523
  %XferCount87 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 4, !dbg !2524
  %75 = load volatile i16, i16* %XferCount87, align 2, !dbg !2524
  %conv88 = zext i16 %75 to i32, !dbg !2523
  %cmp89 = icmp ugt i32 %conv88, 0, !dbg !2525
  br i1 %cmp89, label %do.body44, label %do.end91, !dbg !2522, !llvm.loop !2526

do.end91:                                         ; preds = %do.cond
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2528
  %77 = load i32, i32* %Timeout.addr, align 4, !dbg !2529
  %78 = load i32, i32* %tickstart, align 4, !dbg !2530
  %call92 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnSTOPFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %76, i32 %77, i32 %78), !dbg !2531
  %conv93 = zext i8 %call92 to i32, !dbg !2531
  %cmp94 = icmp ne i32 %conv93, 0, !dbg !2532
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !2531

if.then96:                                        ; preds = %do.end91
  store i8 1, i8* %retval, align 1, !dbg !2533
  br label %return, !dbg !2533

if.end97:                                         ; preds = %do.end91
  %79 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2534
  %Instance98 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %79, i32 0, i32 0, !dbg !2534
  %80 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance98, align 4, !dbg !2534
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %80, i32 0, i32 7, !dbg !2534
  store volatile i32 32, i32* %ICR, align 4, !dbg !2534
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2535
  %Instance99 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %81, i32 0, i32 0, !dbg !2535
  %82 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance99, align 4, !dbg !2535
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %82, i32 0, i32 1, !dbg !2535
  %83 = load volatile i32, i32* %CR2, align 4, !dbg !2535
  %and = and i32 %83, -33495040, !dbg !2535
  store volatile i32 %and, i32* %CR2, align 4, !dbg !2535
  %84 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2536
  %State100 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %84, i32 0, i32 11, !dbg !2537
  store volatile i8 32, i8* %State100, align 1, !dbg !2538
  %85 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2539
  %Mode101 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %85, i32 0, i32 12, !dbg !2540
  store volatile i8 0, i8* %Mode101, align 2, !dbg !2541
  br label %do.body102, !dbg !2542

do.body102:                                       ; preds = %if.end97
  %86 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2542
  %Lock103 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %86, i32 0, i32 10, !dbg !2542
  store i8 0, i8* %Lock103, align 4, !dbg !2542
  br label %do.end105, !dbg !2542

do.end105:                                        ; preds = %do.body102
  store i8 0, i8* %retval, align 1, !dbg !2543
  br label %return, !dbg !2543

if.else106:                                       ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !2544
  br label %return, !dbg !2544

return:                                           ; preds = %if.else106, %do.end105, %if.then96, %if.then70, %if.then49, %do.end29, %if.then18, %if.then11, %if.then7
  %87 = load i8, i8* %retval, align 1, !dbg !2545
  ret i8 %87, !dbg !2545
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_RequestMemoryWrite(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i16 zeroext %MemAddress, i16 zeroext %MemAddSize, i32 %Timeout, i32 %Tickstart) #0 !dbg !2546 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %MemAddress.addr = alloca i16, align 2
  %MemAddSize.addr = alloca i16, align 2
  %Timeout.addr = alloca i32, align 4
  %Tickstart.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i16 %MemAddress, i16* %MemAddress.addr, align 2
  store i16 %MemAddSize, i16* %MemAddSize.addr, align 2
  store i32 %Timeout, i32* %Timeout.addr, align 4
  store i32 %Tickstart, i32* %Tickstart.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2547
  %1 = load i16, i16* %DevAddress.addr, align 2, !dbg !2548
  %2 = load i16, i16* %MemAddSize.addr, align 2, !dbg !2549
  %conv = trunc i16 %2 to i8, !dbg !2550
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %0, i16 zeroext %1, i8 zeroext %conv, i32 16777216, i32 -2147475456), !dbg !2551
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2552
  %4 = load i32, i32* %Timeout.addr, align 4, !dbg !2553
  %5 = load i32, i32* %Tickstart.addr, align 4, !dbg !2554
  %call = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnTXISFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %3, i32 %4, i32 %5), !dbg !2555
  %conv1 = zext i8 %call to i32, !dbg !2555
  %cmp = icmp ne i32 %conv1, 0, !dbg !2556
  br i1 %cmp, label %if.then, label %if.end, !dbg !2555

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !2557
  br label %return, !dbg !2557

if.end:                                           ; preds = %entry
  %6 = load i16, i16* %MemAddSize.addr, align 2, !dbg !2558
  %conv3 = zext i16 %6 to i32, !dbg !2558
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !2559
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !2558

if.then6:                                         ; preds = %if.end
  %7 = load i16, i16* %MemAddress.addr, align 2, !dbg !2560
  %conv7 = zext i16 %7 to i32, !dbg !2560
  %and = and i32 %conv7, 255, !dbg !2560
  %conv8 = trunc i32 %and to i16, !dbg !2560
  %conv9 = trunc i16 %conv8 to i8, !dbg !2560
  %conv10 = zext i8 %conv9 to i32, !dbg !2560
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2561
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 0, !dbg !2562
  %9 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2562
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %9, i32 0, i32 10, !dbg !2563
  store volatile i32 %conv10, i32* %TXDR, align 4, !dbg !2564
  br label %if.end33, !dbg !2565

if.else:                                          ; preds = %if.end
  %10 = load i16, i16* %MemAddress.addr, align 2, !dbg !2566
  %conv11 = zext i16 %10 to i32, !dbg !2566
  %and12 = and i32 %conv11, 65280, !dbg !2566
  %conv13 = trunc i32 %and12 to i16, !dbg !2566
  %conv14 = zext i16 %conv13 to i32, !dbg !2566
  %shr = ashr i32 %conv14, 8, !dbg !2566
  %conv15 = trunc i32 %shr to i16, !dbg !2566
  %conv16 = trunc i16 %conv15 to i8, !dbg !2566
  %conv17 = zext i8 %conv16 to i32, !dbg !2566
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2567
  %Instance18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 0, !dbg !2568
  %12 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance18, align 4, !dbg !2568
  %TXDR19 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %12, i32 0, i32 10, !dbg !2569
  store volatile i32 %conv17, i32* %TXDR19, align 4, !dbg !2570
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2571
  %14 = load i32, i32* %Timeout.addr, align 4, !dbg !2572
  %15 = load i32, i32* %Tickstart.addr, align 4, !dbg !2573
  %call20 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnTXISFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %13, i32 %14, i32 %15), !dbg !2574
  %conv21 = zext i8 %call20 to i32, !dbg !2574
  %cmp22 = icmp ne i32 %conv21, 0, !dbg !2575
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !2574

if.then24:                                        ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !2576
  br label %return, !dbg !2576

if.end25:                                         ; preds = %if.else
  %16 = load i16, i16* %MemAddress.addr, align 2, !dbg !2577
  %conv26 = zext i16 %16 to i32, !dbg !2577
  %and27 = and i32 %conv26, 255, !dbg !2577
  %conv28 = trunc i32 %and27 to i16, !dbg !2577
  %conv29 = trunc i16 %conv28 to i8, !dbg !2577
  %conv30 = zext i8 %conv29 to i32, !dbg !2577
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2578
  %Instance31 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 0, !dbg !2579
  %18 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance31, align 4, !dbg !2579
  %TXDR32 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %18, i32 0, i32 10, !dbg !2580
  store volatile i32 %conv30, i32* %TXDR32, align 4, !dbg !2581
  br label %if.end33

if.end33:                                         ; preds = %if.end25, %if.then6
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2582
  %20 = load i32, i32* %Timeout.addr, align 4, !dbg !2583
  %21 = load i32, i32* %Tickstart.addr, align 4, !dbg !2584
  %call34 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %19, i32 128, i8 zeroext 0, i32 %20, i32 %21), !dbg !2585
  %conv35 = zext i8 %call34 to i32, !dbg !2585
  %cmp36 = icmp ne i32 %conv35, 0, !dbg !2586
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2585

if.then38:                                        ; preds = %if.end33
  store i8 1, i8* %retval, align 1, !dbg !2587
  br label %return, !dbg !2587

if.end39:                                         ; preds = %if.end33
  store i8 0, i8* %retval, align 1, !dbg !2588
  br label %return, !dbg !2588

return:                                           ; preds = %if.end39, %if.then38, %if.then24, %if.then
  %22 = load i8, i8* %retval, align 1, !dbg !2589
  ret i8 %22, !dbg !2589
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Mem_Read(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i16 zeroext %MemAddress, i16 zeroext %MemAddSize, i8* %pData, i16 zeroext %Size, i32 %Timeout) #0 !dbg !2590 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %MemAddress.addr = alloca i16, align 2
  %MemAddSize.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %Timeout.addr = alloca i32, align 4
  %tickstart = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i16 %MemAddress, i16* %MemAddress.addr, align 2
  store i16 %MemAddSize, i16* %MemAddSize.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %Timeout, i32* %Timeout.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2591
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !2592
  %1 = load volatile i8, i8* %State, align 1, !dbg !2592
  %conv = zext i8 %1 to i32, !dbg !2591
  %cmp = icmp eq i32 %conv, 32, !dbg !2593
  br i1 %cmp, label %if.then, label %if.else106, !dbg !2591

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !2594
  %cmp2 = icmp eq i8* %2, null, !dbg !2595
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !2596

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !2597
  %conv4 = zext i16 %3 to i32, !dbg !2597
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !2598
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !2599

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2600
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !2601
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !2602
  store i8 1, i8* %retval, align 1, !dbg !2603
  br label %return, !dbg !2603

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !2604

do.body:                                          ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2604
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 10, !dbg !2604
  %6 = load i8, i8* %Lock, align 4, !dbg !2604
  %conv8 = zext i8 %6 to i32, !dbg !2604
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !2604
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !2604

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !2604
  br label %return, !dbg !2604

if.else:                                          ; preds = %do.body
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2604
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !2604
  store i8 1, i8* %Lock12, align 4, !dbg !2604
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !2604

do.end:                                           ; preds = %if.end13
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !2605
  store i32 %call, i32* %tickstart, align 4, !dbg !2606
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2607
  %9 = load i32, i32* %tickstart, align 4, !dbg !2608
  %call14 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %8, i32 32768, i8 zeroext 1, i32 25, i32 %9), !dbg !2609
  %conv15 = zext i8 %call14 to i32, !dbg !2609
  %cmp16 = icmp ne i32 %conv15, 0, !dbg !2610
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !2609

if.then18:                                        ; preds = %do.end
  store i8 1, i8* %retval, align 1, !dbg !2611
  br label %return, !dbg !2611

if.end19:                                         ; preds = %do.end
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2612
  %State20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 11, !dbg !2613
  store volatile i8 34, i8* %State20, align 1, !dbg !2614
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2615
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 12, !dbg !2616
  store volatile i8 64, i8* %Mode, align 2, !dbg !2617
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2618
  %ErrorCode21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 13, !dbg !2619
  store volatile i32 0, i32* %ErrorCode21, align 4, !dbg !2620
  %13 = load i8*, i8** %pData.addr, align 4, !dbg !2621
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2622
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 2, !dbg !2623
  store i8* %13, i8** %pBuffPtr, align 4, !dbg !2624
  %15 = load i16, i16* %Size.addr, align 2, !dbg !2625
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2626
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 4, !dbg !2627
  store volatile i16 %15, i16* %XferCount, align 2, !dbg !2628
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2629
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 7, !dbg !2630
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !2631
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2632
  %19 = load i16, i16* %DevAddress.addr, align 2, !dbg !2633
  %20 = load i16, i16* %MemAddress.addr, align 2, !dbg !2634
  %21 = load i16, i16* %MemAddSize.addr, align 2, !dbg !2635
  %22 = load i32, i32* %Timeout.addr, align 4, !dbg !2636
  %23 = load i32, i32* %tickstart, align 4, !dbg !2637
  %call22 = call arm_aapcs_vfpcc zeroext i8 @I2C_RequestMemoryRead(%struct.__I2C_HandleTypeDef* %18, i16 zeroext %19, i16 zeroext %20, i16 zeroext %21, i32 %22, i32 %23), !dbg !2638
  %conv23 = zext i8 %call22 to i32, !dbg !2638
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !2639
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !2638

if.then26:                                        ; preds = %if.end19
  br label %do.body27, !dbg !2640

do.body27:                                        ; preds = %if.then26
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2640
  %Lock28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 10, !dbg !2640
  store i8 0, i8* %Lock28, align 4, !dbg !2640
  br label %do.end29, !dbg !2640

do.end29:                                         ; preds = %do.body27
  store i8 1, i8* %retval, align 1, !dbg !2641
  br label %return, !dbg !2641

if.end30:                                         ; preds = %if.end19
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2642
  %XferCount31 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 4, !dbg !2643
  %26 = load volatile i16, i16* %XferCount31, align 2, !dbg !2643
  %conv32 = zext i16 %26 to i32, !dbg !2642
  %cmp33 = icmp ugt i32 %conv32, 255, !dbg !2644
  br i1 %cmp33, label %if.then35, label %if.else38, !dbg !2642

if.then35:                                        ; preds = %if.end30
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2645
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 3, !dbg !2646
  store i16 255, i16* %XferSize, align 4, !dbg !2647
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2648
  %29 = load i16, i16* %DevAddress.addr, align 2, !dbg !2649
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2650
  %XferSize36 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 3, !dbg !2651
  %31 = load i16, i16* %XferSize36, align 4, !dbg !2651
  %conv37 = trunc i16 %31 to i8, !dbg !2652
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %28, i16 zeroext %29, i8 zeroext %conv37, i32 16777216, i32 -2147474432), !dbg !2653
  br label %if.end43, !dbg !2654

if.else38:                                        ; preds = %if.end30
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2655
  %XferCount39 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 4, !dbg !2656
  %33 = load volatile i16, i16* %XferCount39, align 2, !dbg !2656
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2657
  %XferSize40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 3, !dbg !2658
  store i16 %33, i16* %XferSize40, align 4, !dbg !2659
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2660
  %36 = load i16, i16* %DevAddress.addr, align 2, !dbg !2661
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2662
  %XferSize41 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 3, !dbg !2663
  %38 = load i16, i16* %XferSize41, align 4, !dbg !2663
  %conv42 = trunc i16 %38 to i8, !dbg !2664
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %35, i16 zeroext %36, i8 zeroext %conv42, i32 33554432, i32 -2147474432), !dbg !2665
  br label %if.end43

if.end43:                                         ; preds = %if.else38, %if.then35
  br label %do.body44, !dbg !2666

do.body44:                                        ; preds = %do.cond, %if.end43
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2667
  %40 = load i32, i32* %Timeout.addr, align 4, !dbg !2668
  %41 = load i32, i32* %tickstart, align 4, !dbg !2669
  %call45 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %39, i32 4, i8 zeroext 0, i32 %40, i32 %41), !dbg !2670
  %conv46 = zext i8 %call45 to i32, !dbg !2670
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !2671
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !2670

if.then49:                                        ; preds = %do.body44
  store i8 1, i8* %retval, align 1, !dbg !2672
  br label %return, !dbg !2672

if.end50:                                         ; preds = %do.body44
  %42 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2673
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %42, i32 0, i32 0, !dbg !2674
  %43 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2674
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %43, i32 0, i32 9, !dbg !2675
  %44 = load volatile i32, i32* %RXDR, align 4, !dbg !2675
  %conv51 = trunc i32 %44 to i8, !dbg !2676
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2677
  %pBuffPtr52 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 2, !dbg !2678
  %46 = load i8*, i8** %pBuffPtr52, align 4, !dbg !2678
  store i8 %conv51, i8* %46, align 1, !dbg !2679
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2680
  %pBuffPtr53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 2, !dbg !2681
  %48 = load i8*, i8** %pBuffPtr53, align 4, !dbg !2682
  %incdec.ptr = getelementptr inbounds i8, i8* %48, i32 1, !dbg !2682
  store i8* %incdec.ptr, i8** %pBuffPtr53, align 4, !dbg !2682
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2683
  %XferSize54 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 3, !dbg !2684
  %50 = load i16, i16* %XferSize54, align 4, !dbg !2685
  %dec = add i16 %50, -1, !dbg !2685
  store i16 %dec, i16* %XferSize54, align 4, !dbg !2685
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2686
  %XferCount55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %51, i32 0, i32 4, !dbg !2687
  %52 = load volatile i16, i16* %XferCount55, align 2, !dbg !2688
  %dec56 = add i16 %52, -1, !dbg !2688
  store volatile i16 %dec56, i16* %XferCount55, align 2, !dbg !2688
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2689
  %XferCount57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 4, !dbg !2690
  %54 = load volatile i16, i16* %XferCount57, align 2, !dbg !2690
  %conv58 = zext i16 %54 to i32, !dbg !2689
  %cmp59 = icmp ne i32 %conv58, 0, !dbg !2691
  br i1 %cmp59, label %land.lhs.true, label %if.end86, !dbg !2692

land.lhs.true:                                    ; preds = %if.end50
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2693
  %XferSize61 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 3, !dbg !2694
  %56 = load i16, i16* %XferSize61, align 4, !dbg !2694
  %conv62 = zext i16 %56 to i32, !dbg !2693
  %cmp63 = icmp eq i32 %conv62, 0, !dbg !2695
  br i1 %cmp63, label %if.then65, label %if.end86, !dbg !2696

if.then65:                                        ; preds = %land.lhs.true
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2697
  %58 = load i32, i32* %Timeout.addr, align 4, !dbg !2698
  %59 = load i32, i32* %tickstart, align 4, !dbg !2699
  %call66 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %57, i32 128, i8 zeroext 0, i32 %58, i32 %59), !dbg !2700
  %conv67 = zext i8 %call66 to i32, !dbg !2700
  %cmp68 = icmp ne i32 %conv67, 0, !dbg !2701
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !2700

if.then70:                                        ; preds = %if.then65
  store i8 1, i8* %retval, align 1, !dbg !2702
  br label %return, !dbg !2702

if.end71:                                         ; preds = %if.then65
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2703
  %XferCount72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 4, !dbg !2704
  %61 = load volatile i16, i16* %XferCount72, align 2, !dbg !2704
  %conv73 = zext i16 %61 to i32, !dbg !2703
  %cmp74 = icmp ugt i32 %conv73, 255, !dbg !2705
  br i1 %cmp74, label %if.then76, label %if.else80, !dbg !2703

if.then76:                                        ; preds = %if.end71
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2706
  %XferSize77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 3, !dbg !2707
  store i16 255, i16* %XferSize77, align 4, !dbg !2708
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2709
  %64 = load i16, i16* %DevAddress.addr, align 2, !dbg !2710
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2711
  %XferSize78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 3, !dbg !2712
  %66 = load i16, i16* %XferSize78, align 4, !dbg !2712
  %conv79 = trunc i16 %66 to i8, !dbg !2713
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %63, i16 zeroext %64, i8 zeroext %conv79, i32 16777216, i32 0), !dbg !2714
  br label %if.end85, !dbg !2715

if.else80:                                        ; preds = %if.end71
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2716
  %XferCount81 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %67, i32 0, i32 4, !dbg !2717
  %68 = load volatile i16, i16* %XferCount81, align 2, !dbg !2717
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2718
  %XferSize82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 3, !dbg !2719
  store i16 %68, i16* %XferSize82, align 4, !dbg !2720
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2721
  %71 = load i16, i16* %DevAddress.addr, align 2, !dbg !2722
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2723
  %XferSize83 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 3, !dbg !2724
  %73 = load i16, i16* %XferSize83, align 4, !dbg !2724
  %conv84 = trunc i16 %73 to i8, !dbg !2725
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %70, i16 zeroext %71, i8 zeroext %conv84, i32 33554432, i32 0), !dbg !2726
  br label %if.end85

if.end85:                                         ; preds = %if.else80, %if.then76
  br label %if.end86, !dbg !2727

if.end86:                                         ; preds = %if.end85, %land.lhs.true, %if.end50
  br label %do.cond, !dbg !2728

do.cond:                                          ; preds = %if.end86
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2729
  %XferCount87 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 4, !dbg !2730
  %75 = load volatile i16, i16* %XferCount87, align 2, !dbg !2730
  %conv88 = zext i16 %75 to i32, !dbg !2729
  %cmp89 = icmp ugt i32 %conv88, 0, !dbg !2731
  br i1 %cmp89, label %do.body44, label %do.end91, !dbg !2728, !llvm.loop !2732

do.end91:                                         ; preds = %do.cond
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2734
  %77 = load i32, i32* %Timeout.addr, align 4, !dbg !2735
  %78 = load i32, i32* %tickstart, align 4, !dbg !2736
  %call92 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnSTOPFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %76, i32 %77, i32 %78), !dbg !2737
  %conv93 = zext i8 %call92 to i32, !dbg !2737
  %cmp94 = icmp ne i32 %conv93, 0, !dbg !2738
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !2737

if.then96:                                        ; preds = %do.end91
  store i8 1, i8* %retval, align 1, !dbg !2739
  br label %return, !dbg !2739

if.end97:                                         ; preds = %do.end91
  %79 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2740
  %Instance98 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %79, i32 0, i32 0, !dbg !2740
  %80 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance98, align 4, !dbg !2740
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %80, i32 0, i32 7, !dbg !2740
  store volatile i32 32, i32* %ICR, align 4, !dbg !2740
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2741
  %Instance99 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %81, i32 0, i32 0, !dbg !2741
  %82 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance99, align 4, !dbg !2741
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %82, i32 0, i32 1, !dbg !2741
  %83 = load volatile i32, i32* %CR2, align 4, !dbg !2741
  %and = and i32 %83, -33495040, !dbg !2741
  store volatile i32 %and, i32* %CR2, align 4, !dbg !2741
  %84 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2742
  %State100 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %84, i32 0, i32 11, !dbg !2743
  store volatile i8 32, i8* %State100, align 1, !dbg !2744
  %85 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2745
  %Mode101 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %85, i32 0, i32 12, !dbg !2746
  store volatile i8 0, i8* %Mode101, align 2, !dbg !2747
  br label %do.body102, !dbg !2748

do.body102:                                       ; preds = %if.end97
  %86 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2748
  %Lock103 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %86, i32 0, i32 10, !dbg !2748
  store i8 0, i8* %Lock103, align 4, !dbg !2748
  br label %do.end105, !dbg !2748

do.end105:                                        ; preds = %do.body102
  store i8 0, i8* %retval, align 1, !dbg !2749
  br label %return, !dbg !2749

if.else106:                                       ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !2750
  br label %return, !dbg !2750

return:                                           ; preds = %if.else106, %do.end105, %if.then96, %if.then70, %if.then49, %do.end29, %if.then18, %if.then11, %if.then7
  %87 = load i8, i8* %retval, align 1, !dbg !2751
  ret i8 %87, !dbg !2751
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_RequestMemoryRead(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i16 zeroext %MemAddress, i16 zeroext %MemAddSize, i32 %Timeout, i32 %Tickstart) #0 !dbg !2752 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %MemAddress.addr = alloca i16, align 2
  %MemAddSize.addr = alloca i16, align 2
  %Timeout.addr = alloca i32, align 4
  %Tickstart.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i16 %MemAddress, i16* %MemAddress.addr, align 2
  store i16 %MemAddSize, i16* %MemAddSize.addr, align 2
  store i32 %Timeout, i32* %Timeout.addr, align 4
  store i32 %Tickstart, i32* %Tickstart.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2753
  %1 = load i16, i16* %DevAddress.addr, align 2, !dbg !2754
  %2 = load i16, i16* %MemAddSize.addr, align 2, !dbg !2755
  %conv = trunc i16 %2 to i8, !dbg !2756
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %0, i16 zeroext %1, i8 zeroext %conv, i32 0, i32 -2147475456), !dbg !2757
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2758
  %4 = load i32, i32* %Timeout.addr, align 4, !dbg !2759
  %5 = load i32, i32* %Tickstart.addr, align 4, !dbg !2760
  %call = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnTXISFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %3, i32 %4, i32 %5), !dbg !2761
  %conv1 = zext i8 %call to i32, !dbg !2761
  %cmp = icmp ne i32 %conv1, 0, !dbg !2762
  br i1 %cmp, label %if.then, label %if.end, !dbg !2761

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !2763
  br label %return, !dbg !2763

if.end:                                           ; preds = %entry
  %6 = load i16, i16* %MemAddSize.addr, align 2, !dbg !2764
  %conv3 = zext i16 %6 to i32, !dbg !2764
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !2765
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !2764

if.then6:                                         ; preds = %if.end
  %7 = load i16, i16* %MemAddress.addr, align 2, !dbg !2766
  %conv7 = zext i16 %7 to i32, !dbg !2766
  %and = and i32 %conv7, 255, !dbg !2766
  %conv8 = trunc i32 %and to i16, !dbg !2766
  %conv9 = trunc i16 %conv8 to i8, !dbg !2766
  %conv10 = zext i8 %conv9 to i32, !dbg !2766
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2767
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 0, !dbg !2768
  %9 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2768
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %9, i32 0, i32 10, !dbg !2769
  store volatile i32 %conv10, i32* %TXDR, align 4, !dbg !2770
  br label %if.end33, !dbg !2771

if.else:                                          ; preds = %if.end
  %10 = load i16, i16* %MemAddress.addr, align 2, !dbg !2772
  %conv11 = zext i16 %10 to i32, !dbg !2772
  %and12 = and i32 %conv11, 65280, !dbg !2772
  %conv13 = trunc i32 %and12 to i16, !dbg !2772
  %conv14 = zext i16 %conv13 to i32, !dbg !2772
  %shr = ashr i32 %conv14, 8, !dbg !2772
  %conv15 = trunc i32 %shr to i16, !dbg !2772
  %conv16 = trunc i16 %conv15 to i8, !dbg !2772
  %conv17 = zext i8 %conv16 to i32, !dbg !2772
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2773
  %Instance18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 0, !dbg !2774
  %12 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance18, align 4, !dbg !2774
  %TXDR19 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %12, i32 0, i32 10, !dbg !2775
  store volatile i32 %conv17, i32* %TXDR19, align 4, !dbg !2776
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2777
  %14 = load i32, i32* %Timeout.addr, align 4, !dbg !2778
  %15 = load i32, i32* %Tickstart.addr, align 4, !dbg !2779
  %call20 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnTXISFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %13, i32 %14, i32 %15), !dbg !2780
  %conv21 = zext i8 %call20 to i32, !dbg !2780
  %cmp22 = icmp ne i32 %conv21, 0, !dbg !2781
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !2780

if.then24:                                        ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !2782
  br label %return, !dbg !2782

if.end25:                                         ; preds = %if.else
  %16 = load i16, i16* %MemAddress.addr, align 2, !dbg !2783
  %conv26 = zext i16 %16 to i32, !dbg !2783
  %and27 = and i32 %conv26, 255, !dbg !2783
  %conv28 = trunc i32 %and27 to i16, !dbg !2783
  %conv29 = trunc i16 %conv28 to i8, !dbg !2783
  %conv30 = zext i8 %conv29 to i32, !dbg !2783
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2784
  %Instance31 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 0, !dbg !2785
  %18 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance31, align 4, !dbg !2785
  %TXDR32 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %18, i32 0, i32 10, !dbg !2786
  store volatile i32 %conv30, i32* %TXDR32, align 4, !dbg !2787
  br label %if.end33

if.end33:                                         ; preds = %if.end25, %if.then6
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2788
  %20 = load i32, i32* %Timeout.addr, align 4, !dbg !2789
  %21 = load i32, i32* %Tickstart.addr, align 4, !dbg !2790
  %call34 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %19, i32 64, i8 zeroext 0, i32 %20, i32 %21), !dbg !2791
  %conv35 = zext i8 %call34 to i32, !dbg !2791
  %cmp36 = icmp ne i32 %conv35, 0, !dbg !2792
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2791

if.then38:                                        ; preds = %if.end33
  store i8 1, i8* %retval, align 1, !dbg !2793
  br label %return, !dbg !2793

if.end39:                                         ; preds = %if.end33
  store i8 0, i8* %retval, align 1, !dbg !2794
  br label %return, !dbg !2794

return:                                           ; preds = %if.end39, %if.then38, %if.then24, %if.then
  %22 = load i8, i8* %retval, align 1, !dbg !2795
  ret i8 %22, !dbg !2795
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Mem_Write_IT(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i16 zeroext %MemAddress, i16 zeroext %MemAddSize, i8* %pData, i16 zeroext %Size) #0 !dbg !2796 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %MemAddress.addr = alloca i16, align 2
  %MemAddSize.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %tickstart = alloca i32, align 4
  %xfermode = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i16 %MemAddress, i16* %MemAddress.addr, align 2
  store i16 %MemAddSize, i16* %MemAddSize.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2797
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !2798
  %1 = load volatile i8, i8* %State, align 1, !dbg !2798
  %conv = zext i8 %1 to i32, !dbg !2797
  %cmp = icmp eq i32 %conv, 32, !dbg !2799
  br i1 %cmp, label %if.then, label %if.else45, !dbg !2797

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !2800
  %cmp2 = icmp eq i8* %2, null, !dbg !2801
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !2802

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !2803
  %conv4 = zext i16 %3 to i32, !dbg !2803
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !2804
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !2805

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2806
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !2807
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !2808
  store i8 1, i8* %retval, align 1, !dbg !2809
  br label %return, !dbg !2809

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2810
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 0, !dbg !2810
  %6 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2810
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %6, i32 0, i32 6, !dbg !2810
  %7 = load volatile i32, i32* %ISR, align 4, !dbg !2810
  %and = and i32 %7, 32768, !dbg !2810
  %cmp8 = icmp eq i32 %and, 32768, !dbg !2810
  %8 = zext i1 %cmp8 to i64, !dbg !2810
  %cond = select i1 %cmp8, i32 1, i32 0, !dbg !2810
  %cmp10 = icmp eq i32 %cond, 1, !dbg !2811
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2810

if.then12:                                        ; preds = %if.end
  store i8 2, i8* %retval, align 1, !dbg !2812
  br label %return, !dbg !2812

if.end13:                                         ; preds = %if.end
  br label %do.body, !dbg !2813

do.body:                                          ; preds = %if.end13
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2813
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 10, !dbg !2813
  %10 = load i8, i8* %Lock, align 4, !dbg !2813
  %conv14 = zext i8 %10 to i32, !dbg !2813
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !2813
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2813

if.then17:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !2813
  br label %return, !dbg !2813

if.else:                                          ; preds = %do.body
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2813
  %Lock18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 10, !dbg !2813
  store i8 1, i8* %Lock18, align 4, !dbg !2813
  br label %if.end19

if.end19:                                         ; preds = %if.else
  br label %do.end, !dbg !2813

do.end:                                           ; preds = %if.end19
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !2814
  store i32 %call, i32* %tickstart, align 4, !dbg !2815
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2816
  %State20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 11, !dbg !2817
  store volatile i8 33, i8* %State20, align 1, !dbg !2818
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2819
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 12, !dbg !2820
  store volatile i8 64, i8* %Mode, align 2, !dbg !2821
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2822
  %ErrorCode21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 13, !dbg !2823
  store volatile i32 0, i32* %ErrorCode21, align 4, !dbg !2824
  %15 = load i8*, i8** %pData.addr, align 4, !dbg !2825
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2826
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 2, !dbg !2827
  store i8* %15, i8** %pBuffPtr, align 4, !dbg !2828
  %17 = load i16, i16* %Size.addr, align 2, !dbg !2829
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2830
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !2831
  store volatile i16 %17, i16* %XferCount, align 2, !dbg !2832
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2833
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 5, !dbg !2834
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !2835
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2836
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 7, !dbg !2837
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !2838
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2839
  %XferCount22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 4, !dbg !2840
  %22 = load volatile i16, i16* %XferCount22, align 2, !dbg !2840
  %conv23 = zext i16 %22 to i32, !dbg !2839
  %cmp24 = icmp ugt i32 %conv23, 255, !dbg !2841
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !2839

if.then26:                                        ; preds = %do.end
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2842
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 3, !dbg !2843
  store i16 255, i16* %XferSize, align 4, !dbg !2844
  store i32 16777216, i32* %xfermode, align 4, !dbg !2845
  br label %if.end30, !dbg !2846

if.else27:                                        ; preds = %do.end
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2847
  %XferCount28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 4, !dbg !2848
  %25 = load volatile i16, i16* %XferCount28, align 2, !dbg !2848
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2849
  %XferSize29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 3, !dbg !2850
  store i16 %25, i16* %XferSize29, align 4, !dbg !2851
  store i32 33554432, i32* %xfermode, align 4, !dbg !2852
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.then26
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2853
  %28 = load i16, i16* %DevAddress.addr, align 2, !dbg !2854
  %29 = load i16, i16* %MemAddress.addr, align 2, !dbg !2855
  %30 = load i16, i16* %MemAddSize.addr, align 2, !dbg !2856
  %31 = load i32, i32* %tickstart, align 4, !dbg !2857
  %call31 = call arm_aapcs_vfpcc zeroext i8 @I2C_RequestMemoryWrite(%struct.__I2C_HandleTypeDef* %27, i16 zeroext %28, i16 zeroext %29, i16 zeroext %30, i32 25, i32 %31), !dbg !2858
  %conv32 = zext i8 %call31 to i32, !dbg !2858
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !2859
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !2858

if.then35:                                        ; preds = %if.end30
  br label %do.body36, !dbg !2860

do.body36:                                        ; preds = %if.then35
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2860
  %Lock37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 10, !dbg !2860
  store i8 0, i8* %Lock37, align 4, !dbg !2860
  br label %do.end38, !dbg !2860

do.end38:                                         ; preds = %do.body36
  store i8 1, i8* %retval, align 1, !dbg !2861
  br label %return, !dbg !2861

if.end39:                                         ; preds = %if.end30
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2862
  %34 = load i16, i16* %DevAddress.addr, align 2, !dbg !2863
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2864
  %XferSize40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 3, !dbg !2865
  %36 = load i16, i16* %XferSize40, align 4, !dbg !2865
  %conv41 = trunc i16 %36 to i8, !dbg !2866
  %37 = load i32, i32* %xfermode, align 4, !dbg !2867
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %33, i16 zeroext %34, i8 zeroext %conv41, i32 %37, i32 0), !dbg !2868
  br label %do.body42, !dbg !2869

do.body42:                                        ; preds = %if.end39
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2869
  %Lock43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 10, !dbg !2869
  store i8 0, i8* %Lock43, align 4, !dbg !2869
  br label %do.end44, !dbg !2869

do.end44:                                         ; preds = %do.body42
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2870
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %39, i16 zeroext 1), !dbg !2871
  store i8 0, i8* %retval, align 1, !dbg !2872
  br label %return, !dbg !2872

if.else45:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !2873
  br label %return, !dbg !2873

return:                                           ; preds = %if.else45, %do.end44, %do.end38, %if.then17, %if.then12, %if.then7
  %40 = load i8, i8* %retval, align 1, !dbg !2874
  ret i8 %40, !dbg !2874
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Mem_Read_IT(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i16 zeroext %MemAddress, i16 zeroext %MemAddSize, i8* %pData, i16 zeroext %Size) #0 !dbg !2875 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %MemAddress.addr = alloca i16, align 2
  %MemAddSize.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %tickstart = alloca i32, align 4
  %xfermode = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i16 %MemAddress, i16* %MemAddress.addr, align 2
  store i16 %MemAddSize, i16* %MemAddSize.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2876
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !2877
  %1 = load volatile i8, i8* %State, align 1, !dbg !2877
  %conv = zext i8 %1 to i32, !dbg !2876
  %cmp = icmp eq i32 %conv, 32, !dbg !2878
  br i1 %cmp, label %if.then, label %if.else45, !dbg !2876

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !2879
  %cmp2 = icmp eq i8* %2, null, !dbg !2880
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !2881

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !2882
  %conv4 = zext i16 %3 to i32, !dbg !2882
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !2883
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !2884

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2885
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !2886
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !2887
  store i8 1, i8* %retval, align 1, !dbg !2888
  br label %return, !dbg !2888

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2889
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 0, !dbg !2889
  %6 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2889
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %6, i32 0, i32 6, !dbg !2889
  %7 = load volatile i32, i32* %ISR, align 4, !dbg !2889
  %and = and i32 %7, 32768, !dbg !2889
  %cmp8 = icmp eq i32 %and, 32768, !dbg !2889
  %8 = zext i1 %cmp8 to i64, !dbg !2889
  %cond = select i1 %cmp8, i32 1, i32 0, !dbg !2889
  %cmp10 = icmp eq i32 %cond, 1, !dbg !2890
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2889

if.then12:                                        ; preds = %if.end
  store i8 2, i8* %retval, align 1, !dbg !2891
  br label %return, !dbg !2891

if.end13:                                         ; preds = %if.end
  br label %do.body, !dbg !2892

do.body:                                          ; preds = %if.end13
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2892
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 10, !dbg !2892
  %10 = load i8, i8* %Lock, align 4, !dbg !2892
  %conv14 = zext i8 %10 to i32, !dbg !2892
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !2892
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2892

if.then17:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !2892
  br label %return, !dbg !2892

if.else:                                          ; preds = %do.body
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2892
  %Lock18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 10, !dbg !2892
  store i8 1, i8* %Lock18, align 4, !dbg !2892
  br label %if.end19

if.end19:                                         ; preds = %if.else
  br label %do.end, !dbg !2892

do.end:                                           ; preds = %if.end19
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !2893
  store i32 %call, i32* %tickstart, align 4, !dbg !2894
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2895
  %State20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 11, !dbg !2896
  store volatile i8 34, i8* %State20, align 1, !dbg !2897
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2898
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 12, !dbg !2899
  store volatile i8 64, i8* %Mode, align 2, !dbg !2900
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2901
  %ErrorCode21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 13, !dbg !2902
  store volatile i32 0, i32* %ErrorCode21, align 4, !dbg !2903
  %15 = load i8*, i8** %pData.addr, align 4, !dbg !2904
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2905
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 2, !dbg !2906
  store i8* %15, i8** %pBuffPtr, align 4, !dbg !2907
  %17 = load i16, i16* %Size.addr, align 2, !dbg !2908
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2909
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !2910
  store volatile i16 %17, i16* %XferCount, align 2, !dbg !2911
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2912
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 5, !dbg !2913
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !2914
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2915
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 7, !dbg !2916
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !2917
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2918
  %XferCount22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 4, !dbg !2919
  %22 = load volatile i16, i16* %XferCount22, align 2, !dbg !2919
  %conv23 = zext i16 %22 to i32, !dbg !2918
  %cmp24 = icmp ugt i32 %conv23, 255, !dbg !2920
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !2918

if.then26:                                        ; preds = %do.end
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2921
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 3, !dbg !2922
  store i16 255, i16* %XferSize, align 4, !dbg !2923
  store i32 16777216, i32* %xfermode, align 4, !dbg !2924
  br label %if.end30, !dbg !2925

if.else27:                                        ; preds = %do.end
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2926
  %XferCount28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 4, !dbg !2927
  %25 = load volatile i16, i16* %XferCount28, align 2, !dbg !2927
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2928
  %XferSize29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 3, !dbg !2929
  store i16 %25, i16* %XferSize29, align 4, !dbg !2930
  store i32 33554432, i32* %xfermode, align 4, !dbg !2931
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.then26
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2932
  %28 = load i16, i16* %DevAddress.addr, align 2, !dbg !2933
  %29 = load i16, i16* %MemAddress.addr, align 2, !dbg !2934
  %30 = load i16, i16* %MemAddSize.addr, align 2, !dbg !2935
  %31 = load i32, i32* %tickstart, align 4, !dbg !2936
  %call31 = call arm_aapcs_vfpcc zeroext i8 @I2C_RequestMemoryRead(%struct.__I2C_HandleTypeDef* %27, i16 zeroext %28, i16 zeroext %29, i16 zeroext %30, i32 25, i32 %31), !dbg !2937
  %conv32 = zext i8 %call31 to i32, !dbg !2937
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !2938
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !2937

if.then35:                                        ; preds = %if.end30
  br label %do.body36, !dbg !2939

do.body36:                                        ; preds = %if.then35
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2939
  %Lock37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 10, !dbg !2939
  store i8 0, i8* %Lock37, align 4, !dbg !2939
  br label %do.end38, !dbg !2939

do.end38:                                         ; preds = %do.body36
  store i8 1, i8* %retval, align 1, !dbg !2940
  br label %return, !dbg !2940

if.end39:                                         ; preds = %if.end30
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2941
  %34 = load i16, i16* %DevAddress.addr, align 2, !dbg !2942
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2943
  %XferSize40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 3, !dbg !2944
  %36 = load i16, i16* %XferSize40, align 4, !dbg !2944
  %conv41 = trunc i16 %36 to i8, !dbg !2945
  %37 = load i32, i32* %xfermode, align 4, !dbg !2946
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %33, i16 zeroext %34, i8 zeroext %conv41, i32 %37, i32 -2147474432), !dbg !2947
  br label %do.body42, !dbg !2948

do.body42:                                        ; preds = %if.end39
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2948
  %Lock43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 10, !dbg !2948
  store i8 0, i8* %Lock43, align 4, !dbg !2948
  br label %do.end44, !dbg !2948

do.end44:                                         ; preds = %do.body42
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2949
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %39, i16 zeroext 2), !dbg !2950
  store i8 0, i8* %retval, align 1, !dbg !2951
  br label %return, !dbg !2951

if.else45:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !2952
  br label %return, !dbg !2952

return:                                           ; preds = %if.else45, %do.end44, %do.end38, %if.then17, %if.then12, %if.then7
  %40 = load i8, i8* %retval, align 1, !dbg !2953
  ret i8 %40, !dbg !2953
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Mem_Write_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i16 zeroext %MemAddress, i16 zeroext %MemAddSize, i8* %pData, i16 zeroext %Size) #0 !dbg !2954 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %MemAddress.addr = alloca i16, align 2
  %MemAddSize.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %tickstart = alloca i32, align 4
  %xfermode = alloca i32, align 4
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i16 %MemAddress, i16* %MemAddress.addr, align 2
  store i16 %MemAddSize, i16* %MemAddSize.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2955
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !2956
  %1 = load volatile i8, i8* %State, align 1, !dbg !2956
  %conv = zext i8 %1 to i32, !dbg !2955
  %cmp = icmp eq i32 %conv, 32, !dbg !2957
  br i1 %cmp, label %if.then, label %if.else85, !dbg !2955

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !2958
  %cmp2 = icmp eq i8* %2, null, !dbg !2959
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !2960

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !2961
  %conv4 = zext i16 %3 to i32, !dbg !2961
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !2962
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !2963

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2964
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !2965
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !2966
  store i8 1, i8* %retval, align 1, !dbg !2967
  br label %return, !dbg !2967

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2968
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 0, !dbg !2968
  %6 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !2968
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %6, i32 0, i32 6, !dbg !2968
  %7 = load volatile i32, i32* %ISR, align 4, !dbg !2968
  %and = and i32 %7, 32768, !dbg !2968
  %cmp8 = icmp eq i32 %and, 32768, !dbg !2968
  %8 = zext i1 %cmp8 to i64, !dbg !2968
  %cond = select i1 %cmp8, i32 1, i32 0, !dbg !2968
  %cmp10 = icmp eq i32 %cond, 1, !dbg !2969
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2968

if.then12:                                        ; preds = %if.end
  store i8 2, i8* %retval, align 1, !dbg !2970
  br label %return, !dbg !2970

if.end13:                                         ; preds = %if.end
  br label %do.body, !dbg !2971

do.body:                                          ; preds = %if.end13
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2971
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 10, !dbg !2971
  %10 = load i8, i8* %Lock, align 4, !dbg !2971
  %conv14 = zext i8 %10 to i32, !dbg !2971
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !2971
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2971

if.then17:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !2971
  br label %return, !dbg !2971

if.else:                                          ; preds = %do.body
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2971
  %Lock18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 10, !dbg !2971
  store i8 1, i8* %Lock18, align 4, !dbg !2971
  br label %if.end19

if.end19:                                         ; preds = %if.else
  br label %do.end, !dbg !2971

do.end:                                           ; preds = %if.end19
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !2972
  store i32 %call, i32* %tickstart, align 4, !dbg !2973
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2974
  %State20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 11, !dbg !2975
  store volatile i8 33, i8* %State20, align 1, !dbg !2976
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2977
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 12, !dbg !2978
  store volatile i8 64, i8* %Mode, align 2, !dbg !2979
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2980
  %ErrorCode21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 13, !dbg !2981
  store volatile i32 0, i32* %ErrorCode21, align 4, !dbg !2982
  %15 = load i8*, i8** %pData.addr, align 4, !dbg !2983
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2984
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 2, !dbg !2985
  store i8* %15, i8** %pBuffPtr, align 4, !dbg !2986
  %17 = load i16, i16* %Size.addr, align 2, !dbg !2987
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2988
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !2989
  store volatile i16 %17, i16* %XferCount, align 2, !dbg !2990
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2991
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 5, !dbg !2992
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !2993
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2994
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 7, !dbg !2995
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !2996
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !2997
  %XferCount22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 4, !dbg !2998
  %22 = load volatile i16, i16* %XferCount22, align 2, !dbg !2998
  %conv23 = zext i16 %22 to i32, !dbg !2997
  %cmp24 = icmp ugt i32 %conv23, 255, !dbg !2999
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !2997

if.then26:                                        ; preds = %do.end
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3000
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 3, !dbg !3001
  store i16 255, i16* %XferSize, align 4, !dbg !3002
  store i32 16777216, i32* %xfermode, align 4, !dbg !3003
  br label %if.end30, !dbg !3004

if.else27:                                        ; preds = %do.end
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3005
  %XferCount28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 4, !dbg !3006
  %25 = load volatile i16, i16* %XferCount28, align 2, !dbg !3006
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3007
  %XferSize29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 3, !dbg !3008
  store i16 %25, i16* %XferSize29, align 4, !dbg !3009
  store i32 33554432, i32* %xfermode, align 4, !dbg !3010
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.then26
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3011
  %28 = load i16, i16* %DevAddress.addr, align 2, !dbg !3012
  %29 = load i16, i16* %MemAddress.addr, align 2, !dbg !3013
  %30 = load i16, i16* %MemAddSize.addr, align 2, !dbg !3014
  %31 = load i32, i32* %tickstart, align 4, !dbg !3015
  %call31 = call arm_aapcs_vfpcc zeroext i8 @I2C_RequestMemoryWrite(%struct.__I2C_HandleTypeDef* %27, i16 zeroext %28, i16 zeroext %29, i16 zeroext %30, i32 25, i32 %31), !dbg !3016
  %conv32 = zext i8 %call31 to i32, !dbg !3016
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !3017
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !3016

if.then35:                                        ; preds = %if.end30
  br label %do.body36, !dbg !3018

do.body36:                                        ; preds = %if.then35
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3018
  %Lock37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 10, !dbg !3018
  store i8 0, i8* %Lock37, align 4, !dbg !3018
  br label %do.end38, !dbg !3018

do.end38:                                         ; preds = %do.body36
  store i8 1, i8* %retval, align 1, !dbg !3019
  br label %return, !dbg !3019

if.end39:                                         ; preds = %if.end30
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3020
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 8, !dbg !3021
  %34 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !3021
  %cmp40 = icmp ne %struct.__DMA_HandleTypeDef* %34, null, !dbg !3022
  br i1 %cmp40, label %if.then42, label %if.else52, !dbg !3020

if.then42:                                        ; preds = %if.end39
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3023
  %hdmatx43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 8, !dbg !3024
  %36 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx43, align 4, !dbg !3024
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %36, i32 0, i32 5, !dbg !3025
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAMasterTransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !3026
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3027
  %hdmatx44 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 8, !dbg !3028
  %38 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx44, align 4, !dbg !3028
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %38, i32 0, i32 9, !dbg !3029
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !3030
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3031
  %hdmatx45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 8, !dbg !3032
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx45, align 4, !dbg !3032
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 6, !dbg !3033
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !3034
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3035
  %hdmatx46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 8, !dbg !3036
  %42 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx46, align 4, !dbg !3036
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %42, i32 0, i32 10, !dbg !3037
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !3038
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3039
  %hdmatx47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 8, !dbg !3040
  %44 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx47, align 4, !dbg !3040
  %45 = load i8*, i8** %pData.addr, align 4, !dbg !3041
  %46 = ptrtoint i8* %45 to i32, !dbg !3042
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3043
  %Instance48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 0, !dbg !3044
  %48 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance48, align 4, !dbg !3044
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %48, i32 0, i32 10, !dbg !3045
  %49 = ptrtoint i32* %TXDR to i32, !dbg !3046
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3047
  %XferSize49 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 3, !dbg !3048
  %51 = load i16, i16* %XferSize49, align 4, !dbg !3048
  %conv50 = zext i16 %51 to i32, !dbg !3047
  %call51 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %44, i32 %46, i32 %49, i32 %conv50), !dbg !3049
  store i8 %call51, i8* %dmaxferstatus, align 1, !dbg !3050
  br label %if.end59, !dbg !3051

if.else52:                                        ; preds = %if.end39
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3052
  %State53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 11, !dbg !3053
  store volatile i8 32, i8* %State53, align 1, !dbg !3054
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3055
  %Mode54 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 12, !dbg !3056
  store volatile i8 0, i8* %Mode54, align 2, !dbg !3057
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3058
  %ErrorCode55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 13, !dbg !3059
  %55 = load volatile i32, i32* %ErrorCode55, align 4, !dbg !3060
  %or = or i32 %55, 128, !dbg !3060
  store volatile i32 %or, i32* %ErrorCode55, align 4, !dbg !3060
  br label %do.body56, !dbg !3061

do.body56:                                        ; preds = %if.else52
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3061
  %Lock57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 10, !dbg !3061
  store i8 0, i8* %Lock57, align 4, !dbg !3061
  br label %do.end58, !dbg !3061

do.end58:                                         ; preds = %do.body56
  store i8 1, i8* %retval, align 1, !dbg !3062
  br label %return, !dbg !3062

if.end59:                                         ; preds = %if.then42
  %57 = load i8, i8* %dmaxferstatus, align 1, !dbg !3063
  %conv60 = zext i8 %57 to i32, !dbg !3063
  %cmp61 = icmp eq i32 %conv60, 0, !dbg !3064
  br i1 %cmp61, label %if.then63, label %if.else76, !dbg !3063

if.then63:                                        ; preds = %if.end59
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3065
  %59 = load i16, i16* %DevAddress.addr, align 2, !dbg !3066
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3067
  %XferSize64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 3, !dbg !3068
  %61 = load i16, i16* %XferSize64, align 4, !dbg !3068
  %conv65 = trunc i16 %61 to i8, !dbg !3069
  %62 = load i32, i32* %xfermode, align 4, !dbg !3070
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %58, i16 zeroext %59, i8 zeroext %conv65, i32 %62, i32 0), !dbg !3071
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3072
  %XferSize66 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %63, i32 0, i32 3, !dbg !3073
  %64 = load i16, i16* %XferSize66, align 4, !dbg !3073
  %conv67 = zext i16 %64 to i32, !dbg !3072
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3074
  %XferCount68 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 4, !dbg !3075
  %66 = load volatile i16, i16* %XferCount68, align 2, !dbg !3076
  %conv69 = zext i16 %66 to i32, !dbg !3076
  %sub = sub nsw i32 %conv69, %conv67, !dbg !3076
  %conv70 = trunc i32 %sub to i16, !dbg !3076
  store volatile i16 %conv70, i16* %XferCount68, align 2, !dbg !3076
  br label %do.body71, !dbg !3077

do.body71:                                        ; preds = %if.then63
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3077
  %Lock72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %67, i32 0, i32 10, !dbg !3077
  store i8 0, i8* %Lock72, align 4, !dbg !3077
  br label %do.end73, !dbg !3077

do.end73:                                         ; preds = %do.body71
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3078
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %68, i16 zeroext 16), !dbg !3079
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3080
  %Instance74 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 0, !dbg !3081
  %70 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance74, align 4, !dbg !3081
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %70, i32 0, i32 0, !dbg !3082
  %71 = load volatile i32, i32* %CR1, align 4, !dbg !3083
  %or75 = or i32 %71, 16384, !dbg !3083
  store volatile i32 %or75, i32* %CR1, align 4, !dbg !3083
  br label %if.end84, !dbg !3084

if.else76:                                        ; preds = %if.end59
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3085
  %State77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 11, !dbg !3086
  store volatile i8 32, i8* %State77, align 1, !dbg !3087
  %73 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3088
  %Mode78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %73, i32 0, i32 12, !dbg !3089
  store volatile i8 0, i8* %Mode78, align 2, !dbg !3090
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3091
  %ErrorCode79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 13, !dbg !3092
  %75 = load volatile i32, i32* %ErrorCode79, align 4, !dbg !3093
  %or80 = or i32 %75, 16, !dbg !3093
  store volatile i32 %or80, i32* %ErrorCode79, align 4, !dbg !3093
  br label %do.body81, !dbg !3094

do.body81:                                        ; preds = %if.else76
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3094
  %Lock82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %76, i32 0, i32 10, !dbg !3094
  store i8 0, i8* %Lock82, align 4, !dbg !3094
  br label %do.end83, !dbg !3094

do.end83:                                         ; preds = %do.body81
  store i8 1, i8* %retval, align 1, !dbg !3095
  br label %return, !dbg !3095

if.end84:                                         ; preds = %do.end73
  store i8 0, i8* %retval, align 1, !dbg !3096
  br label %return, !dbg !3096

if.else85:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !3097
  br label %return, !dbg !3097

return:                                           ; preds = %if.else85, %if.end84, %do.end83, %do.end58, %do.end38, %if.then17, %if.then12, %if.then7
  %77 = load i8, i8* %retval, align 1, !dbg !3098
  ret i8 %77, !dbg !3098
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Mem_Read_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i16 zeroext %MemAddress, i16 zeroext %MemAddSize, i8* %pData, i16 zeroext %Size) #0 !dbg !3099 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %MemAddress.addr = alloca i16, align 2
  %MemAddSize.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %tickstart = alloca i32, align 4
  %xfermode = alloca i32, align 4
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i16 %MemAddress, i16* %MemAddress.addr, align 2
  store i16 %MemAddSize, i16* %MemAddSize.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3100
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !3101
  %1 = load volatile i8, i8* %State, align 1, !dbg !3101
  %conv = zext i8 %1 to i32, !dbg !3100
  %cmp = icmp eq i32 %conv, 32, !dbg !3102
  br i1 %cmp, label %if.then, label %if.else85, !dbg !3100

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !3103
  %cmp2 = icmp eq i8* %2, null, !dbg !3104
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !3105

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !3106
  %conv4 = zext i16 %3 to i32, !dbg !3106
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !3107
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !3108

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3109
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !3110
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !3111
  store i8 1, i8* %retval, align 1, !dbg !3112
  br label %return, !dbg !3112

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3113
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 0, !dbg !3113
  %6 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !3113
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %6, i32 0, i32 6, !dbg !3113
  %7 = load volatile i32, i32* %ISR, align 4, !dbg !3113
  %and = and i32 %7, 32768, !dbg !3113
  %cmp8 = icmp eq i32 %and, 32768, !dbg !3113
  %8 = zext i1 %cmp8 to i64, !dbg !3113
  %cond = select i1 %cmp8, i32 1, i32 0, !dbg !3113
  %cmp10 = icmp eq i32 %cond, 1, !dbg !3114
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !3113

if.then12:                                        ; preds = %if.end
  store i8 2, i8* %retval, align 1, !dbg !3115
  br label %return, !dbg !3115

if.end13:                                         ; preds = %if.end
  br label %do.body, !dbg !3116

do.body:                                          ; preds = %if.end13
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3116
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 10, !dbg !3116
  %10 = load i8, i8* %Lock, align 4, !dbg !3116
  %conv14 = zext i8 %10 to i32, !dbg !3116
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !3116
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !3116

if.then17:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !3116
  br label %return, !dbg !3116

if.else:                                          ; preds = %do.body
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3116
  %Lock18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 10, !dbg !3116
  store i8 1, i8* %Lock18, align 4, !dbg !3116
  br label %if.end19

if.end19:                                         ; preds = %if.else
  br label %do.end, !dbg !3116

do.end:                                           ; preds = %if.end19
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !3117
  store i32 %call, i32* %tickstart, align 4, !dbg !3118
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3119
  %State20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 11, !dbg !3120
  store volatile i8 34, i8* %State20, align 1, !dbg !3121
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3122
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 12, !dbg !3123
  store volatile i8 64, i8* %Mode, align 2, !dbg !3124
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3125
  %ErrorCode21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 13, !dbg !3126
  store volatile i32 0, i32* %ErrorCode21, align 4, !dbg !3127
  %15 = load i8*, i8** %pData.addr, align 4, !dbg !3128
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3129
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 2, !dbg !3130
  store i8* %15, i8** %pBuffPtr, align 4, !dbg !3131
  %17 = load i16, i16* %Size.addr, align 2, !dbg !3132
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3133
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !3134
  store volatile i16 %17, i16* %XferCount, align 2, !dbg !3135
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3136
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 5, !dbg !3137
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !3138
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3139
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 7, !dbg !3140
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !3141
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3142
  %XferCount22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 4, !dbg !3143
  %22 = load volatile i16, i16* %XferCount22, align 2, !dbg !3143
  %conv23 = zext i16 %22 to i32, !dbg !3142
  %cmp24 = icmp ugt i32 %conv23, 255, !dbg !3144
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !3142

if.then26:                                        ; preds = %do.end
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3145
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 3, !dbg !3146
  store i16 255, i16* %XferSize, align 4, !dbg !3147
  store i32 16777216, i32* %xfermode, align 4, !dbg !3148
  br label %if.end30, !dbg !3149

if.else27:                                        ; preds = %do.end
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3150
  %XferCount28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 4, !dbg !3151
  %25 = load volatile i16, i16* %XferCount28, align 2, !dbg !3151
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3152
  %XferSize29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 3, !dbg !3153
  store i16 %25, i16* %XferSize29, align 4, !dbg !3154
  store i32 33554432, i32* %xfermode, align 4, !dbg !3155
  br label %if.end30

if.end30:                                         ; preds = %if.else27, %if.then26
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3156
  %28 = load i16, i16* %DevAddress.addr, align 2, !dbg !3157
  %29 = load i16, i16* %MemAddress.addr, align 2, !dbg !3158
  %30 = load i16, i16* %MemAddSize.addr, align 2, !dbg !3159
  %31 = load i32, i32* %tickstart, align 4, !dbg !3160
  %call31 = call arm_aapcs_vfpcc zeroext i8 @I2C_RequestMemoryRead(%struct.__I2C_HandleTypeDef* %27, i16 zeroext %28, i16 zeroext %29, i16 zeroext %30, i32 25, i32 %31), !dbg !3161
  %conv32 = zext i8 %call31 to i32, !dbg !3161
  %cmp33 = icmp ne i32 %conv32, 0, !dbg !3162
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !3161

if.then35:                                        ; preds = %if.end30
  br label %do.body36, !dbg !3163

do.body36:                                        ; preds = %if.then35
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3163
  %Lock37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 10, !dbg !3163
  store i8 0, i8* %Lock37, align 4, !dbg !3163
  br label %do.end38, !dbg !3163

do.end38:                                         ; preds = %do.body36
  store i8 1, i8* %retval, align 1, !dbg !3164
  br label %return, !dbg !3164

if.end39:                                         ; preds = %if.end30
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3165
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 9, !dbg !3166
  %34 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !3166
  %cmp40 = icmp ne %struct.__DMA_HandleTypeDef* %34, null, !dbg !3167
  br i1 %cmp40, label %if.then42, label %if.else52, !dbg !3165

if.then42:                                        ; preds = %if.end39
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3168
  %hdmarx43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 9, !dbg !3169
  %36 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx43, align 4, !dbg !3169
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %36, i32 0, i32 5, !dbg !3170
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAMasterReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !3171
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3172
  %hdmarx44 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 9, !dbg !3173
  %38 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx44, align 4, !dbg !3173
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %38, i32 0, i32 9, !dbg !3174
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !3175
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3176
  %hdmarx45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 9, !dbg !3177
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx45, align 4, !dbg !3177
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 6, !dbg !3178
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !3179
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3180
  %hdmarx46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 9, !dbg !3181
  %42 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx46, align 4, !dbg !3181
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %42, i32 0, i32 10, !dbg !3182
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !3183
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3184
  %hdmarx47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 9, !dbg !3185
  %44 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx47, align 4, !dbg !3185
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3186
  %Instance48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 0, !dbg !3187
  %46 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance48, align 4, !dbg !3187
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %46, i32 0, i32 9, !dbg !3188
  %47 = ptrtoint i32* %RXDR to i32, !dbg !3189
  %48 = load i8*, i8** %pData.addr, align 4, !dbg !3190
  %49 = ptrtoint i8* %48 to i32, !dbg !3191
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3192
  %XferSize49 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 3, !dbg !3193
  %51 = load i16, i16* %XferSize49, align 4, !dbg !3193
  %conv50 = zext i16 %51 to i32, !dbg !3192
  %call51 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %44, i32 %47, i32 %49, i32 %conv50), !dbg !3194
  store i8 %call51, i8* %dmaxferstatus, align 1, !dbg !3195
  br label %if.end59, !dbg !3196

if.else52:                                        ; preds = %if.end39
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3197
  %State53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 11, !dbg !3198
  store volatile i8 32, i8* %State53, align 1, !dbg !3199
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3200
  %Mode54 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 12, !dbg !3201
  store volatile i8 0, i8* %Mode54, align 2, !dbg !3202
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3203
  %ErrorCode55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 13, !dbg !3204
  %55 = load volatile i32, i32* %ErrorCode55, align 4, !dbg !3205
  %or = or i32 %55, 128, !dbg !3205
  store volatile i32 %or, i32* %ErrorCode55, align 4, !dbg !3205
  br label %do.body56, !dbg !3206

do.body56:                                        ; preds = %if.else52
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3206
  %Lock57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 10, !dbg !3206
  store i8 0, i8* %Lock57, align 4, !dbg !3206
  br label %do.end58, !dbg !3206

do.end58:                                         ; preds = %do.body56
  store i8 1, i8* %retval, align 1, !dbg !3207
  br label %return, !dbg !3207

if.end59:                                         ; preds = %if.then42
  %57 = load i8, i8* %dmaxferstatus, align 1, !dbg !3208
  %conv60 = zext i8 %57 to i32, !dbg !3208
  %cmp61 = icmp eq i32 %conv60, 0, !dbg !3209
  br i1 %cmp61, label %if.then63, label %if.else76, !dbg !3208

if.then63:                                        ; preds = %if.end59
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3210
  %59 = load i16, i16* %DevAddress.addr, align 2, !dbg !3211
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3212
  %XferSize64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 3, !dbg !3213
  %61 = load i16, i16* %XferSize64, align 4, !dbg !3213
  %conv65 = trunc i16 %61 to i8, !dbg !3214
  %62 = load i32, i32* %xfermode, align 4, !dbg !3215
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %58, i16 zeroext %59, i8 zeroext %conv65, i32 %62, i32 -2147474432), !dbg !3216
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3217
  %XferSize66 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %63, i32 0, i32 3, !dbg !3218
  %64 = load i16, i16* %XferSize66, align 4, !dbg !3218
  %conv67 = zext i16 %64 to i32, !dbg !3217
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3219
  %XferCount68 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 4, !dbg !3220
  %66 = load volatile i16, i16* %XferCount68, align 2, !dbg !3221
  %conv69 = zext i16 %66 to i32, !dbg !3221
  %sub = sub nsw i32 %conv69, %conv67, !dbg !3221
  %conv70 = trunc i32 %sub to i16, !dbg !3221
  store volatile i16 %conv70, i16* %XferCount68, align 2, !dbg !3221
  br label %do.body71, !dbg !3222

do.body71:                                        ; preds = %if.then63
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3222
  %Lock72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %67, i32 0, i32 10, !dbg !3222
  store i8 0, i8* %Lock72, align 4, !dbg !3222
  br label %do.end73, !dbg !3222

do.end73:                                         ; preds = %do.body71
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3223
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %68, i16 zeroext 16), !dbg !3224
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3225
  %Instance74 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 0, !dbg !3226
  %70 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance74, align 4, !dbg !3226
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %70, i32 0, i32 0, !dbg !3227
  %71 = load volatile i32, i32* %CR1, align 4, !dbg !3228
  %or75 = or i32 %71, 32768, !dbg !3228
  store volatile i32 %or75, i32* %CR1, align 4, !dbg !3228
  br label %if.end84, !dbg !3229

if.else76:                                        ; preds = %if.end59
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3230
  %State77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 11, !dbg !3231
  store volatile i8 32, i8* %State77, align 1, !dbg !3232
  %73 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3233
  %Mode78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %73, i32 0, i32 12, !dbg !3234
  store volatile i8 0, i8* %Mode78, align 2, !dbg !3235
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3236
  %ErrorCode79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 13, !dbg !3237
  %75 = load volatile i32, i32* %ErrorCode79, align 4, !dbg !3238
  %or80 = or i32 %75, 16, !dbg !3238
  store volatile i32 %or80, i32* %ErrorCode79, align 4, !dbg !3238
  br label %do.body81, !dbg !3239

do.body81:                                        ; preds = %if.else76
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3239
  %Lock82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %76, i32 0, i32 10, !dbg !3239
  store i8 0, i8* %Lock82, align 4, !dbg !3239
  br label %do.end83, !dbg !3239

do.end83:                                         ; preds = %do.body81
  store i8 1, i8* %retval, align 1, !dbg !3240
  br label %return, !dbg !3240

if.end84:                                         ; preds = %do.end73
  store i8 0, i8* %retval, align 1, !dbg !3241
  br label %return, !dbg !3241

if.else85:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !3242
  br label %return, !dbg !3242

return:                                           ; preds = %if.else85, %if.end84, %do.end83, %do.end58, %do.end38, %if.then17, %if.then12, %if.then7
  %77 = load i8, i8* %retval, align 1, !dbg !3243
  ret i8 %77, !dbg !3243
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_IsDeviceReady(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i32 %Trials, i32 %Timeout) #0 !dbg !3244 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %Trials.addr = alloca i32, align 4
  %Timeout.addr = alloca i32, align 4
  %tickstart = alloca i32, align 4
  %I2C_Trials = alloca i32, align 4
  %tmp1 = alloca i8, align 1
  %tmp2 = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i32 %Trials, i32* %Trials.addr, align 4
  store i32 %Timeout, i32* %Timeout.addr, align 4
  store volatile i32 0, i32* %I2C_Trials, align 4, !dbg !3245
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3246
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !3247
  %1 = load volatile i8, i8* %State, align 1, !dbg !3247
  %conv = zext i8 %1 to i32, !dbg !3246
  %cmp = icmp eq i32 %conv, 32, !dbg !3248
  br i1 %cmp, label %if.then, label %if.else136, !dbg !3246

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3249
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 0, !dbg !3249
  %3 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !3249
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %3, i32 0, i32 6, !dbg !3249
  %4 = load volatile i32, i32* %ISR, align 4, !dbg !3249
  %and = and i32 %4, 32768, !dbg !3249
  %cmp2 = icmp eq i32 %and, 32768, !dbg !3249
  %5 = zext i1 %cmp2 to i64, !dbg !3249
  %cond = select i1 %cmp2, i32 1, i32 0, !dbg !3249
  %cmp4 = icmp eq i32 %cond, 1, !dbg !3250
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !3249

if.then6:                                         ; preds = %if.then
  store i8 2, i8* %retval, align 1, !dbg !3251
  br label %return, !dbg !3251

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !3252

do.body:                                          ; preds = %if.end
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3252
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 10, !dbg !3252
  %7 = load i8, i8* %Lock, align 4, !dbg !3252
  %conv7 = zext i8 %7 to i32, !dbg !3252
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !3252
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !3252

if.then10:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !3252
  br label %return, !dbg !3252

if.else:                                          ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3252
  %Lock11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 10, !dbg !3252
  store i8 1, i8* %Lock11, align 4, !dbg !3252
  br label %if.end12

if.end12:                                         ; preds = %if.else
  br label %do.end, !dbg !3252

do.end:                                           ; preds = %if.end12
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3253
  %State13 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !3254
  store volatile i8 36, i8* %State13, align 1, !dbg !3255
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3256
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 13, !dbg !3257
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !3258
  br label %do.body14, !dbg !3259

do.body14:                                        ; preds = %do.cond, %do.end
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3260
  %Init = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 1, !dbg !3260
  %AddressingMode = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init, i32 0, i32 2, !dbg !3260
  %12 = load i32, i32* %AddressingMode, align 4, !dbg !3260
  %cmp15 = icmp eq i32 %12, 1, !dbg !3260
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !3260

cond.true:                                        ; preds = %do.body14
  %13 = load i16, i16* %DevAddress.addr, align 2, !dbg !3260
  %conv17 = zext i16 %13 to i32, !dbg !3260
  %and18 = and i32 %conv17, 1023, !dbg !3260
  %or = or i32 %and18, 8192, !dbg !3260
  %or19 = or i32 %or, 33554432, !dbg !3260
  %and20 = and i32 %or19, -1025, !dbg !3260
  br label %cond.end, !dbg !3260

cond.false:                                       ; preds = %do.body14
  %14 = load i16, i16* %DevAddress.addr, align 2, !dbg !3260
  %conv21 = zext i16 %14 to i32, !dbg !3260
  %and22 = and i32 %conv21, 1023, !dbg !3260
  %or23 = or i32 %and22, 2048, !dbg !3260
  %or24 = or i32 %or23, 8192, !dbg !3260
  %and25 = and i32 %or24, -1025, !dbg !3260
  br label %cond.end, !dbg !3260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond26 = phi i32 [ %and20, %cond.true ], [ %and25, %cond.false ], !dbg !3260
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3261
  %Instance27 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 0, !dbg !3262
  %16 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance27, align 4, !dbg !3262
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %16, i32 0, i32 1, !dbg !3263
  store volatile i32 %cond26, i32* %CR2, align 4, !dbg !3264
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !3265
  store i32 %call, i32* %tickstart, align 4, !dbg !3266
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3267
  %Instance28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 0, !dbg !3267
  %18 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance28, align 4, !dbg !3267
  %ISR29 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %18, i32 0, i32 6, !dbg !3267
  %19 = load volatile i32, i32* %ISR29, align 4, !dbg !3267
  %and30 = and i32 %19, 32, !dbg !3267
  %cmp31 = icmp eq i32 %and30, 32, !dbg !3267
  %20 = zext i1 %cmp31 to i64, !dbg !3267
  %cond33 = select i1 %cmp31, i32 1, i32 0, !dbg !3267
  %conv34 = trunc i32 %cond33 to i8, !dbg !3267
  store i8 %conv34, i8* %tmp1, align 1, !dbg !3268
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3269
  %Instance35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 0, !dbg !3269
  %22 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance35, align 4, !dbg !3269
  %ISR36 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %22, i32 0, i32 6, !dbg !3269
  %23 = load volatile i32, i32* %ISR36, align 4, !dbg !3269
  %and37 = and i32 %23, 16, !dbg !3269
  %cmp38 = icmp eq i32 %and37, 16, !dbg !3269
  %24 = zext i1 %cmp38 to i64, !dbg !3269
  %cond40 = select i1 %cmp38, i32 1, i32 0, !dbg !3269
  %conv41 = trunc i32 %cond40 to i8, !dbg !3269
  store i8 %conv41, i8* %tmp2, align 1, !dbg !3270
  br label %while.cond, !dbg !3271

while.cond:                                       ; preds = %if.end64, %cond.end
  %25 = load i8, i8* %tmp1, align 1, !dbg !3272
  %conv42 = zext i8 %25 to i32, !dbg !3272
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !3273
  br i1 %cmp43, label %land.rhs, label %land.end, !dbg !3274

land.rhs:                                         ; preds = %while.cond
  %26 = load i8, i8* %tmp2, align 1, !dbg !3275
  %conv45 = zext i8 %26 to i32, !dbg !3275
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !3276
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %27 = phi i1 [ false, %while.cond ], [ %cmp46, %land.rhs ], !dbg !3277
  br i1 %27, label %while.body, label %while.end, !dbg !3271

while.body:                                       ; preds = %land.end
  %28 = load i32, i32* %Timeout.addr, align 4, !dbg !3278
  %cmp48 = icmp ne i32 %28, -1, !dbg !3279
  br i1 %cmp48, label %if.then50, label %if.end64, !dbg !3278

if.then50:                                        ; preds = %while.body
  %call51 = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !3280
  %29 = load i32, i32* %tickstart, align 4, !dbg !3281
  %sub = sub i32 %call51, %29, !dbg !3282
  %30 = load i32, i32* %Timeout.addr, align 4, !dbg !3283
  %cmp52 = icmp ugt i32 %sub, %30, !dbg !3284
  br i1 %cmp52, label %if.then56, label %lor.lhs.false, !dbg !3285

lor.lhs.false:                                    ; preds = %if.then50
  %31 = load i32, i32* %Timeout.addr, align 4, !dbg !3286
  %cmp54 = icmp eq i32 %31, 0, !dbg !3287
  br i1 %cmp54, label %if.then56, label %if.end63, !dbg !3288

if.then56:                                        ; preds = %lor.lhs.false, %if.then50
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3289
  %State57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 11, !dbg !3290
  store volatile i8 32, i8* %State57, align 1, !dbg !3291
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3292
  %ErrorCode58 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 13, !dbg !3293
  %34 = load volatile i32, i32* %ErrorCode58, align 4, !dbg !3294
  %or59 = or i32 %34, 32, !dbg !3294
  store volatile i32 %or59, i32* %ErrorCode58, align 4, !dbg !3294
  br label %do.body60, !dbg !3295

do.body60:                                        ; preds = %if.then56
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3295
  %Lock61 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 10, !dbg !3295
  store i8 0, i8* %Lock61, align 4, !dbg !3295
  br label %do.end62, !dbg !3295

do.end62:                                         ; preds = %do.body60
  store i8 1, i8* %retval, align 1, !dbg !3296
  br label %return, !dbg !3296

if.end63:                                         ; preds = %lor.lhs.false
  br label %if.end64, !dbg !3297

if.end64:                                         ; preds = %if.end63, %while.body
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3298
  %Instance65 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 0, !dbg !3298
  %37 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance65, align 4, !dbg !3298
  %ISR66 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %37, i32 0, i32 6, !dbg !3298
  %38 = load volatile i32, i32* %ISR66, align 4, !dbg !3298
  %and67 = and i32 %38, 32, !dbg !3298
  %cmp68 = icmp eq i32 %and67, 32, !dbg !3298
  %39 = zext i1 %cmp68 to i64, !dbg !3298
  %cond70 = select i1 %cmp68, i32 1, i32 0, !dbg !3298
  %conv71 = trunc i32 %cond70 to i8, !dbg !3298
  store i8 %conv71, i8* %tmp1, align 1, !dbg !3299
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3300
  %Instance72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 0, !dbg !3300
  %41 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance72, align 4, !dbg !3300
  %ISR73 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %41, i32 0, i32 6, !dbg !3300
  %42 = load volatile i32, i32* %ISR73, align 4, !dbg !3300
  %and74 = and i32 %42, 16, !dbg !3300
  %cmp75 = icmp eq i32 %and74, 16, !dbg !3300
  %43 = zext i1 %cmp75 to i64, !dbg !3300
  %cond77 = select i1 %cmp75, i32 1, i32 0, !dbg !3300
  %conv78 = trunc i32 %cond77 to i8, !dbg !3300
  store i8 %conv78, i8* %tmp2, align 1, !dbg !3301
  br label %while.cond, !dbg !3271, !llvm.loop !3302

while.end:                                        ; preds = %land.end
  %44 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3304
  %Instance79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %44, i32 0, i32 0, !dbg !3304
  %45 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance79, align 4, !dbg !3304
  %ISR80 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %45, i32 0, i32 6, !dbg !3304
  %46 = load volatile i32, i32* %ISR80, align 4, !dbg !3304
  %and81 = and i32 %46, 16, !dbg !3304
  %cmp82 = icmp eq i32 %and81, 16, !dbg !3304
  %47 = zext i1 %cmp82 to i64, !dbg !3304
  %cond84 = select i1 %cmp82, i32 1, i32 0, !dbg !3304
  %cmp85 = icmp eq i32 %cond84, 0, !dbg !3305
  br i1 %cmp85, label %if.then87, label %if.else99, !dbg !3304

if.then87:                                        ; preds = %while.end
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3306
  %49 = load i32, i32* %Timeout.addr, align 4, !dbg !3307
  %50 = load i32, i32* %tickstart, align 4, !dbg !3308
  %call88 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %48, i32 32, i8 zeroext 0, i32 %49, i32 %50), !dbg !3309
  %conv89 = zext i8 %call88 to i32, !dbg !3309
  %cmp90 = icmp ne i32 %conv89, 0, !dbg !3310
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !3309

if.then92:                                        ; preds = %if.then87
  store i8 1, i8* %retval, align 1, !dbg !3311
  br label %return, !dbg !3311

if.end93:                                         ; preds = %if.then87
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3312
  %Instance94 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %51, i32 0, i32 0, !dbg !3312
  %52 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance94, align 4, !dbg !3312
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %52, i32 0, i32 7, !dbg !3312
  store volatile i32 32, i32* %ICR, align 4, !dbg !3312
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3313
  %State95 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 11, !dbg !3314
  store volatile i8 32, i8* %State95, align 1, !dbg !3315
  br label %do.body96, !dbg !3316

do.body96:                                        ; preds = %if.end93
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3316
  %Lock97 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 10, !dbg !3316
  store i8 0, i8* %Lock97, align 4, !dbg !3316
  br label %do.end98, !dbg !3316

do.end98:                                         ; preds = %do.body96
  store i8 0, i8* %retval, align 1, !dbg !3317
  br label %return, !dbg !3317

if.else99:                                        ; preds = %while.end
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3318
  %56 = load i32, i32* %Timeout.addr, align 4, !dbg !3319
  %57 = load i32, i32* %tickstart, align 4, !dbg !3320
  %call100 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %55, i32 32, i8 zeroext 0, i32 %56, i32 %57), !dbg !3321
  %conv101 = zext i8 %call100 to i32, !dbg !3321
  %cmp102 = icmp ne i32 %conv101, 0, !dbg !3322
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !3321

if.then104:                                       ; preds = %if.else99
  store i8 1, i8* %retval, align 1, !dbg !3323
  br label %return, !dbg !3323

if.end105:                                        ; preds = %if.else99
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3324
  %Instance106 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 0, !dbg !3324
  %59 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance106, align 4, !dbg !3324
  %ICR107 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %59, i32 0, i32 7, !dbg !3324
  store volatile i32 16, i32* %ICR107, align 4, !dbg !3324
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3325
  %Instance108 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 0, !dbg !3325
  %61 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance108, align 4, !dbg !3325
  %ICR109 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %61, i32 0, i32 7, !dbg !3325
  store volatile i32 32, i32* %ICR109, align 4, !dbg !3325
  br label %if.end110

if.end110:                                        ; preds = %if.end105
  %62 = load volatile i32, i32* %I2C_Trials, align 4, !dbg !3326
  %63 = load i32, i32* %Trials.addr, align 4, !dbg !3327
  %cmp111 = icmp eq i32 %62, %63, !dbg !3328
  br i1 %cmp111, label %if.then113, label %if.end125, !dbg !3326

if.then113:                                       ; preds = %if.end110
  %64 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3329
  %Instance114 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %64, i32 0, i32 0, !dbg !3330
  %65 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance114, align 4, !dbg !3330
  %CR2115 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %65, i32 0, i32 1, !dbg !3331
  %66 = load volatile i32, i32* %CR2115, align 4, !dbg !3332
  %or116 = or i32 %66, 16384, !dbg !3332
  store volatile i32 %or116, i32* %CR2115, align 4, !dbg !3332
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3333
  %68 = load i32, i32* %Timeout.addr, align 4, !dbg !3334
  %69 = load i32, i32* %tickstart, align 4, !dbg !3335
  %call117 = call arm_aapcs_vfpcc zeroext i8 @I2C_WaitOnFlagUntilTimeout(%struct.__I2C_HandleTypeDef* %67, i32 32, i8 zeroext 0, i32 %68, i32 %69), !dbg !3336
  %conv118 = zext i8 %call117 to i32, !dbg !3336
  %cmp119 = icmp ne i32 %conv118, 0, !dbg !3337
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !3336

if.then121:                                       ; preds = %if.then113
  store i8 1, i8* %retval, align 1, !dbg !3338
  br label %return, !dbg !3338

if.end122:                                        ; preds = %if.then113
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3339
  %Instance123 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %70, i32 0, i32 0, !dbg !3339
  %71 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance123, align 4, !dbg !3339
  %ICR124 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %71, i32 0, i32 7, !dbg !3339
  store volatile i32 32, i32* %ICR124, align 4, !dbg !3339
  br label %if.end125, !dbg !3340

if.end125:                                        ; preds = %if.end122, %if.end110
  %72 = load volatile i32, i32* %I2C_Trials, align 4, !dbg !3341
  %inc = add i32 %72, 1, !dbg !3341
  store volatile i32 %inc, i32* %I2C_Trials, align 4, !dbg !3341
  br label %do.cond, !dbg !3342

do.cond:                                          ; preds = %if.end125
  %73 = load volatile i32, i32* %I2C_Trials, align 4, !dbg !3343
  %74 = load i32, i32* %Trials.addr, align 4, !dbg !3344
  %cmp126 = icmp ult i32 %73, %74, !dbg !3345
  br i1 %cmp126, label %do.body14, label %do.end128, !dbg !3342, !llvm.loop !3346

do.end128:                                        ; preds = %do.cond
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3348
  %State129 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 11, !dbg !3349
  store volatile i8 32, i8* %State129, align 1, !dbg !3350
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3351
  %ErrorCode130 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %76, i32 0, i32 13, !dbg !3352
  %77 = load volatile i32, i32* %ErrorCode130, align 4, !dbg !3353
  %or131 = or i32 %77, 32, !dbg !3353
  store volatile i32 %or131, i32* %ErrorCode130, align 4, !dbg !3353
  br label %do.body132, !dbg !3354

do.body132:                                       ; preds = %do.end128
  %78 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3354
  %Lock133 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %78, i32 0, i32 10, !dbg !3354
  store i8 0, i8* %Lock133, align 4, !dbg !3354
  br label %do.end135, !dbg !3354

do.end135:                                        ; preds = %do.body132
  store i8 1, i8* %retval, align 1, !dbg !3355
  br label %return, !dbg !3355

if.else136:                                       ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !3356
  br label %return, !dbg !3356

return:                                           ; preds = %if.else136, %do.end135, %if.then121, %if.then104, %do.end98, %if.then92, %do.end62, %if.then10, %if.then6
  %79 = load i8, i8* %retval, align 1, !dbg !3357
  ret i8 %79, !dbg !3357
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Seq_Transmit_IT(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size, i32 %XferOptions) #0 !dbg !3358 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %XferOptions.addr = alloca i32, align 4
  %xfermode = alloca i32, align 4
  %xferrequest = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %XferOptions, i32* %XferOptions.addr, align 4
  store i32 -2147475456, i32* %xferrequest, align 4, !dbg !3359
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3360
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !3361
  %1 = load volatile i8, i8* %State, align 1, !dbg !3361
  %conv = zext i8 %1 to i32, !dbg !3360
  %cmp = icmp eq i32 %conv, 32, !dbg !3362
  br i1 %cmp, label %if.then, label %if.else42, !dbg !3360

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3363

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3363
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !3363
  %3 = load i8, i8* %Lock, align 4, !dbg !3363
  %conv2 = zext i8 %3 to i32, !dbg !3363
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !3363
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3363

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !3363
  br label %return, !dbg !3363

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3363
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !3363
  store i8 1, i8* %Lock6, align 4, !dbg !3363
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !3363

do.end:                                           ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3364
  %State7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 11, !dbg !3365
  store volatile i8 33, i8* %State7, align 1, !dbg !3366
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3367
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 12, !dbg !3368
  store volatile i8 16, i8* %Mode, align 2, !dbg !3369
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3370
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 13, !dbg !3371
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !3372
  %8 = load i8*, i8** %pData.addr, align 4, !dbg !3373
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3374
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 2, !dbg !3375
  store i8* %8, i8** %pBuffPtr, align 4, !dbg !3376
  %10 = load i16, i16* %Size.addr, align 2, !dbg !3377
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3378
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 4, !dbg !3379
  store volatile i16 %10, i16* %XferCount, align 2, !dbg !3380
  %12 = load i32, i32* %XferOptions.addr, align 4, !dbg !3381
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3382
  %XferOptions8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 5, !dbg !3383
  store volatile i32 %12, i32* %XferOptions8, align 4, !dbg !3384
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3385
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 7, !dbg !3386
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !3387
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3388
  %XferCount9 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !3389
  %16 = load volatile i16, i16* %XferCount9, align 2, !dbg !3389
  %conv10 = zext i16 %16 to i32, !dbg !3388
  %cmp11 = icmp ugt i32 %conv10, 255, !dbg !3390
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !3388

if.then13:                                        ; preds = %do.end
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3391
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !3392
  store i16 255, i16* %XferSize, align 4, !dbg !3393
  store i32 16777216, i32* %xfermode, align 4, !dbg !3394
  br label %if.end18, !dbg !3395

if.else14:                                        ; preds = %do.end
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3396
  %XferCount15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !3397
  %19 = load volatile i16, i16* %XferCount15, align 2, !dbg !3397
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3398
  %XferSize16 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !3399
  store i16 %19, i16* %XferSize16, align 4, !dbg !3400
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3401
  %XferOptions17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 5, !dbg !3402
  %22 = load volatile i32, i32* %XferOptions17, align 4, !dbg !3402
  store i32 %22, i32* %xfermode, align 4, !dbg !3403
  br label %if.end18

if.end18:                                         ; preds = %if.else14, %if.then13
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3404
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 6, !dbg !3405
  %24 = load volatile i32, i32* %PreviousState, align 4, !dbg !3405
  %cmp19 = icmp eq i32 %24, 17, !dbg !3406
  br i1 %cmp19, label %land.lhs.true, label %if.else28, !dbg !3407

land.lhs.true:                                    ; preds = %if.end18
  %25 = load i32, i32* %XferOptions.addr, align 4, !dbg !3408
  %cmp21 = icmp eq i32 %25, 170, !dbg !3408
  br i1 %cmp21, label %lor.end, label %lor.rhs, !dbg !3408

lor.rhs:                                          ; preds = %land.lhs.true
  %26 = load i32, i32* %XferOptions.addr, align 4, !dbg !3408
  %cmp23 = icmp eq i32 %26, 43520, !dbg !3408
  br label %lor.end, !dbg !3408

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %27 = phi i1 [ true, %land.lhs.true ], [ %cmp23, %lor.rhs ]
  %lor.ext = zext i1 %27 to i32, !dbg !3408
  %cmp25 = icmp eq i32 %lor.ext, 0, !dbg !3409
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !3410

if.then27:                                        ; preds = %lor.end
  store i32 0, i32* %xferrequest, align 4, !dbg !3411
  br label %if.end36, !dbg !3412

if.else28:                                        ; preds = %lor.end, %if.end18
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3413
  call arm_aapcs_vfpcc void @I2C_ConvertOtherXferOptions(%struct.__I2C_HandleTypeDef* %28), !dbg !3414
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3415
  %XferCount29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 4, !dbg !3416
  %30 = load volatile i16, i16* %XferCount29, align 2, !dbg !3416
  %conv30 = zext i16 %30 to i32, !dbg !3415
  %cmp31 = icmp ule i32 %conv30, 255, !dbg !3417
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !3415

if.then33:                                        ; preds = %if.else28
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3418
  %XferOptions34 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 5, !dbg !3419
  %32 = load volatile i32, i32* %XferOptions34, align 4, !dbg !3419
  store i32 %32, i32* %xfermode, align 4, !dbg !3420
  br label %if.end35, !dbg !3421

if.end35:                                         ; preds = %if.then33, %if.else28
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then27
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3422
  %34 = load i16, i16* %DevAddress.addr, align 2, !dbg !3423
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3424
  %XferSize37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 3, !dbg !3425
  %36 = load i16, i16* %XferSize37, align 4, !dbg !3425
  %conv38 = trunc i16 %36 to i8, !dbg !3426
  %37 = load i32, i32* %xfermode, align 4, !dbg !3427
  %38 = load i32, i32* %xferrequest, align 4, !dbg !3428
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %33, i16 zeroext %34, i8 zeroext %conv38, i32 %37, i32 %38), !dbg !3429
  br label %do.body39, !dbg !3430

do.body39:                                        ; preds = %if.end36
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3430
  %Lock40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 10, !dbg !3430
  store i8 0, i8* %Lock40, align 4, !dbg !3430
  br label %do.end41, !dbg !3430

do.end41:                                         ; preds = %do.body39
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3431
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %40, i16 zeroext 1), !dbg !3432
  store i8 0, i8* %retval, align 1, !dbg !3433
  br label %return, !dbg !3433

if.else42:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !3434
  br label %return, !dbg !3434

return:                                           ; preds = %if.else42, %do.end41, %if.then5
  %41 = load i8, i8* %retval, align 1, !dbg !3435
  ret i8 %41, !dbg !3435
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_ConvertOtherXferOptions(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !3436 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3437
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 5, !dbg !3438
  %1 = load volatile i32, i32* %XferOptions, align 4, !dbg !3438
  %cmp = icmp eq i32 %1, 170, !dbg !3439
  br i1 %cmp, label %if.then, label %if.else, !dbg !3437

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3440
  %XferOptions1 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 5, !dbg !3441
  store volatile i32 0, i32* %XferOptions1, align 4, !dbg !3442
  br label %if.end7, !dbg !3443

if.else:                                          ; preds = %entry
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3444
  %XferOptions2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 5, !dbg !3445
  %4 = load volatile i32, i32* %XferOptions2, align 4, !dbg !3445
  %cmp3 = icmp eq i32 %4, 43520, !dbg !3446
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !3444

if.then4:                                         ; preds = %if.else
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3447
  %XferOptions5 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 5, !dbg !3448
  store volatile i32 33554432, i32* %XferOptions5, align 4, !dbg !3449
  br label %if.end, !dbg !3450

if.else6:                                         ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !3451
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Seq_Transmit_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size, i32 %XferOptions) #0 !dbg !3452 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %XferOptions.addr = alloca i32, align 4
  %xfermode = alloca i32, align 4
  %xferrequest = alloca i32, align 4
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %XferOptions, i32* %XferOptions.addr, align 4
  store i32 -2147475456, i32* %xferrequest, align 4, !dbg !3453
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3454
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !3455
  %1 = load volatile i8, i8* %State, align 1, !dbg !3455
  %conv = zext i8 %1 to i32, !dbg !3454
  %cmp = icmp eq i32 %conv, 32, !dbg !3456
  br i1 %cmp, label %if.then, label %if.else93, !dbg !3454

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3457

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3457
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !3457
  %3 = load i8, i8* %Lock, align 4, !dbg !3457
  %conv2 = zext i8 %3 to i32, !dbg !3457
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !3457
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3457

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !3457
  br label %return, !dbg !3457

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3457
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !3457
  store i8 1, i8* %Lock6, align 4, !dbg !3457
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !3457

do.end:                                           ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3458
  %State7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 11, !dbg !3459
  store volatile i8 33, i8* %State7, align 1, !dbg !3460
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3461
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 12, !dbg !3462
  store volatile i8 16, i8* %Mode, align 2, !dbg !3463
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3464
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 13, !dbg !3465
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !3466
  %8 = load i8*, i8** %pData.addr, align 4, !dbg !3467
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3468
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 2, !dbg !3469
  store i8* %8, i8** %pBuffPtr, align 4, !dbg !3470
  %10 = load i16, i16* %Size.addr, align 2, !dbg !3471
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3472
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 4, !dbg !3473
  store volatile i16 %10, i16* %XferCount, align 2, !dbg !3474
  %12 = load i32, i32* %XferOptions.addr, align 4, !dbg !3475
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3476
  %XferOptions8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 5, !dbg !3477
  store volatile i32 %12, i32* %XferOptions8, align 4, !dbg !3478
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3479
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 7, !dbg !3480
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !3481
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3482
  %XferCount9 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !3483
  %16 = load volatile i16, i16* %XferCount9, align 2, !dbg !3483
  %conv10 = zext i16 %16 to i32, !dbg !3482
  %cmp11 = icmp ugt i32 %conv10, 255, !dbg !3484
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !3482

if.then13:                                        ; preds = %do.end
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3485
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !3486
  store i16 255, i16* %XferSize, align 4, !dbg !3487
  store i32 16777216, i32* %xfermode, align 4, !dbg !3488
  br label %if.end18, !dbg !3489

if.else14:                                        ; preds = %do.end
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3490
  %XferCount15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !3491
  %19 = load volatile i16, i16* %XferCount15, align 2, !dbg !3491
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3492
  %XferSize16 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !3493
  store i16 %19, i16* %XferSize16, align 4, !dbg !3494
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3495
  %XferOptions17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 5, !dbg !3496
  %22 = load volatile i32, i32* %XferOptions17, align 4, !dbg !3496
  store i32 %22, i32* %xfermode, align 4, !dbg !3497
  br label %if.end18

if.end18:                                         ; preds = %if.else14, %if.then13
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3498
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 6, !dbg !3499
  %24 = load volatile i32, i32* %PreviousState, align 4, !dbg !3499
  %cmp19 = icmp eq i32 %24, 17, !dbg !3500
  br i1 %cmp19, label %land.lhs.true, label %if.else28, !dbg !3501

land.lhs.true:                                    ; preds = %if.end18
  %25 = load i32, i32* %XferOptions.addr, align 4, !dbg !3502
  %cmp21 = icmp eq i32 %25, 170, !dbg !3502
  br i1 %cmp21, label %lor.end, label %lor.rhs, !dbg !3502

lor.rhs:                                          ; preds = %land.lhs.true
  %26 = load i32, i32* %XferOptions.addr, align 4, !dbg !3502
  %cmp23 = icmp eq i32 %26, 43520, !dbg !3502
  br label %lor.end, !dbg !3502

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %27 = phi i1 [ true, %land.lhs.true ], [ %cmp23, %lor.rhs ]
  %lor.ext = zext i1 %27 to i32, !dbg !3502
  %cmp25 = icmp eq i32 %lor.ext, 0, !dbg !3503
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !3504

if.then27:                                        ; preds = %lor.end
  store i32 0, i32* %xferrequest, align 4, !dbg !3505
  br label %if.end36, !dbg !3506

if.else28:                                        ; preds = %lor.end, %if.end18
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3507
  call arm_aapcs_vfpcc void @I2C_ConvertOtherXferOptions(%struct.__I2C_HandleTypeDef* %28), !dbg !3508
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3509
  %XferCount29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 4, !dbg !3510
  %30 = load volatile i16, i16* %XferCount29, align 2, !dbg !3510
  %conv30 = zext i16 %30 to i32, !dbg !3509
  %cmp31 = icmp ule i32 %conv30, 255, !dbg !3511
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !3509

if.then33:                                        ; preds = %if.else28
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3512
  %XferOptions34 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 5, !dbg !3513
  %32 = load volatile i32, i32* %XferOptions34, align 4, !dbg !3513
  store i32 %32, i32* %xfermode, align 4, !dbg !3514
  br label %if.end35, !dbg !3515

if.end35:                                         ; preds = %if.then33, %if.else28
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then27
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3516
  %XferSize37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 3, !dbg !3517
  %34 = load i16, i16* %XferSize37, align 4, !dbg !3517
  %conv38 = zext i16 %34 to i32, !dbg !3516
  %cmp39 = icmp ugt i32 %conv38, 0, !dbg !3518
  br i1 %cmp39, label %if.then41, label %if.else85, !dbg !3516

if.then41:                                        ; preds = %if.end36
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3519
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 8, !dbg !3520
  %36 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !3520
  %cmp42 = icmp ne %struct.__DMA_HandleTypeDef* %36, null, !dbg !3521
  br i1 %cmp42, label %if.then44, label %if.else52, !dbg !3519

if.then44:                                        ; preds = %if.then41
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3522
  %hdmatx45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 8, !dbg !3523
  %38 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx45, align 4, !dbg !3523
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %38, i32 0, i32 5, !dbg !3524
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAMasterTransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !3525
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3526
  %hdmatx46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 8, !dbg !3527
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx46, align 4, !dbg !3527
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 9, !dbg !3528
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !3529
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3530
  %hdmatx47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 8, !dbg !3531
  %42 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx47, align 4, !dbg !3531
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %42, i32 0, i32 6, !dbg !3532
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !3533
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3534
  %hdmatx48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 8, !dbg !3535
  %44 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx48, align 4, !dbg !3535
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %44, i32 0, i32 10, !dbg !3536
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !3537
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3538
  %hdmatx49 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 8, !dbg !3539
  %46 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx49, align 4, !dbg !3539
  %47 = load i8*, i8** %pData.addr, align 4, !dbg !3540
  %48 = ptrtoint i8* %47 to i32, !dbg !3541
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3542
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 0, !dbg !3543
  %50 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !3543
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %50, i32 0, i32 10, !dbg !3544
  %51 = ptrtoint i32* %TXDR to i32, !dbg !3545
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3546
  %XferSize50 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 3, !dbg !3547
  %53 = load i16, i16* %XferSize50, align 4, !dbg !3547
  %conv51 = zext i16 %53 to i32, !dbg !3546
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %46, i32 %48, i32 %51, i32 %conv51), !dbg !3548
  store i8 %call, i8* %dmaxferstatus, align 1, !dbg !3549
  br label %if.end59, !dbg !3550

if.else52:                                        ; preds = %if.then41
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3551
  %State53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 11, !dbg !3552
  store volatile i8 32, i8* %State53, align 1, !dbg !3553
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3554
  %Mode54 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 12, !dbg !3555
  store volatile i8 0, i8* %Mode54, align 2, !dbg !3556
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3557
  %ErrorCode55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 13, !dbg !3558
  %57 = load volatile i32, i32* %ErrorCode55, align 4, !dbg !3559
  %or = or i32 %57, 128, !dbg !3559
  store volatile i32 %or, i32* %ErrorCode55, align 4, !dbg !3559
  br label %do.body56, !dbg !3560

do.body56:                                        ; preds = %if.else52
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3560
  %Lock57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 10, !dbg !3560
  store i8 0, i8* %Lock57, align 4, !dbg !3560
  br label %do.end58, !dbg !3560

do.end58:                                         ; preds = %do.body56
  store i8 1, i8* %retval, align 1, !dbg !3561
  br label %return, !dbg !3561

if.end59:                                         ; preds = %if.then44
  %59 = load i8, i8* %dmaxferstatus, align 1, !dbg !3562
  %conv60 = zext i8 %59 to i32, !dbg !3562
  %cmp61 = icmp eq i32 %conv60, 0, !dbg !3563
  br i1 %cmp61, label %if.then63, label %if.else76, !dbg !3562

if.then63:                                        ; preds = %if.end59
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3564
  %61 = load i16, i16* %DevAddress.addr, align 2, !dbg !3565
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3566
  %XferSize64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 3, !dbg !3567
  %63 = load i16, i16* %XferSize64, align 4, !dbg !3567
  %conv65 = trunc i16 %63 to i8, !dbg !3568
  %64 = load i32, i32* %xfermode, align 4, !dbg !3569
  %65 = load i32, i32* %xferrequest, align 4, !dbg !3570
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %60, i16 zeroext %61, i8 zeroext %conv65, i32 %64, i32 %65), !dbg !3571
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3572
  %XferSize66 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 3, !dbg !3573
  %67 = load i16, i16* %XferSize66, align 4, !dbg !3573
  %conv67 = zext i16 %67 to i32, !dbg !3572
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3574
  %XferCount68 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %68, i32 0, i32 4, !dbg !3575
  %69 = load volatile i16, i16* %XferCount68, align 2, !dbg !3576
  %conv69 = zext i16 %69 to i32, !dbg !3576
  %sub = sub nsw i32 %conv69, %conv67, !dbg !3576
  %conv70 = trunc i32 %sub to i16, !dbg !3576
  store volatile i16 %conv70, i16* %XferCount68, align 2, !dbg !3576
  br label %do.body71, !dbg !3577

do.body71:                                        ; preds = %if.then63
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3577
  %Lock72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %70, i32 0, i32 10, !dbg !3577
  store i8 0, i8* %Lock72, align 4, !dbg !3577
  br label %do.end73, !dbg !3577

do.end73:                                         ; preds = %do.body71
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3578
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %71, i16 zeroext 16), !dbg !3579
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3580
  %Instance74 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 0, !dbg !3581
  %73 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance74, align 4, !dbg !3581
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %73, i32 0, i32 0, !dbg !3582
  %74 = load volatile i32, i32* %CR1, align 4, !dbg !3583
  %or75 = or i32 %74, 16384, !dbg !3583
  store volatile i32 %or75, i32* %CR1, align 4, !dbg !3583
  br label %if.end84, !dbg !3584

if.else76:                                        ; preds = %if.end59
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3585
  %State77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 11, !dbg !3586
  store volatile i8 32, i8* %State77, align 1, !dbg !3587
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3588
  %Mode78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %76, i32 0, i32 12, !dbg !3589
  store volatile i8 0, i8* %Mode78, align 2, !dbg !3590
  %77 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3591
  %ErrorCode79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %77, i32 0, i32 13, !dbg !3592
  %78 = load volatile i32, i32* %ErrorCode79, align 4, !dbg !3593
  %or80 = or i32 %78, 16, !dbg !3593
  store volatile i32 %or80, i32* %ErrorCode79, align 4, !dbg !3593
  br label %do.body81, !dbg !3594

do.body81:                                        ; preds = %if.else76
  %79 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3594
  %Lock82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %79, i32 0, i32 10, !dbg !3594
  store i8 0, i8* %Lock82, align 4, !dbg !3594
  br label %do.end83, !dbg !3594

do.end83:                                         ; preds = %do.body81
  store i8 1, i8* %retval, align 1, !dbg !3595
  br label %return, !dbg !3595

if.end84:                                         ; preds = %do.end73
  br label %if.end92, !dbg !3596

if.else85:                                        ; preds = %if.end36
  %80 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3597
  %XferISR86 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %80, i32 0, i32 7, !dbg !3598
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR86, align 4, !dbg !3599
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3600
  %82 = load i16, i16* %DevAddress.addr, align 2, !dbg !3601
  %83 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3602
  %XferSize87 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %83, i32 0, i32 3, !dbg !3603
  %84 = load i16, i16* %XferSize87, align 4, !dbg !3603
  %conv88 = trunc i16 %84 to i8, !dbg !3604
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %81, i16 zeroext %82, i8 zeroext %conv88, i32 33554432, i32 -2147475456), !dbg !3605
  br label %do.body89, !dbg !3606

do.body89:                                        ; preds = %if.else85
  %85 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3606
  %Lock90 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %85, i32 0, i32 10, !dbg !3606
  store i8 0, i8* %Lock90, align 4, !dbg !3606
  br label %do.end91, !dbg !3606

do.end91:                                         ; preds = %do.body89
  %86 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3607
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %86, i16 zeroext 1), !dbg !3608
  br label %if.end92

if.end92:                                         ; preds = %do.end91, %if.end84
  store i8 0, i8* %retval, align 1, !dbg !3609
  br label %return, !dbg !3609

if.else93:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !3610
  br label %return, !dbg !3610

return:                                           ; preds = %if.else93, %if.end92, %do.end83, %do.end58, %if.then5
  %87 = load i8, i8* %retval, align 1, !dbg !3611
  ret i8 %87, !dbg !3611
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Seq_Receive_IT(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size, i32 %XferOptions) #0 !dbg !3612 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %XferOptions.addr = alloca i32, align 4
  %xfermode = alloca i32, align 4
  %xferrequest = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %XferOptions, i32* %XferOptions.addr, align 4
  store i32 -2147474432, i32* %xferrequest, align 4, !dbg !3613
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3614
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !3615
  %1 = load volatile i8, i8* %State, align 1, !dbg !3615
  %conv = zext i8 %1 to i32, !dbg !3614
  %cmp = icmp eq i32 %conv, 32, !dbg !3616
  br i1 %cmp, label %if.then, label %if.else42, !dbg !3614

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3617

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3617
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !3617
  %3 = load i8, i8* %Lock, align 4, !dbg !3617
  %conv2 = zext i8 %3 to i32, !dbg !3617
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !3617
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3617

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !3617
  br label %return, !dbg !3617

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3617
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !3617
  store i8 1, i8* %Lock6, align 4, !dbg !3617
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !3617

do.end:                                           ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3618
  %State7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 11, !dbg !3619
  store volatile i8 34, i8* %State7, align 1, !dbg !3620
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3621
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 12, !dbg !3622
  store volatile i8 16, i8* %Mode, align 2, !dbg !3623
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3624
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 13, !dbg !3625
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !3626
  %8 = load i8*, i8** %pData.addr, align 4, !dbg !3627
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3628
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 2, !dbg !3629
  store i8* %8, i8** %pBuffPtr, align 4, !dbg !3630
  %10 = load i16, i16* %Size.addr, align 2, !dbg !3631
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3632
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 4, !dbg !3633
  store volatile i16 %10, i16* %XferCount, align 2, !dbg !3634
  %12 = load i32, i32* %XferOptions.addr, align 4, !dbg !3635
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3636
  %XferOptions8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 5, !dbg !3637
  store volatile i32 %12, i32* %XferOptions8, align 4, !dbg !3638
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3639
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 7, !dbg !3640
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !3641
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3642
  %XferCount9 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !3643
  %16 = load volatile i16, i16* %XferCount9, align 2, !dbg !3643
  %conv10 = zext i16 %16 to i32, !dbg !3642
  %cmp11 = icmp ugt i32 %conv10, 255, !dbg !3644
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !3642

if.then13:                                        ; preds = %do.end
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3645
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !3646
  store i16 255, i16* %XferSize, align 4, !dbg !3647
  store i32 16777216, i32* %xfermode, align 4, !dbg !3648
  br label %if.end18, !dbg !3649

if.else14:                                        ; preds = %do.end
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3650
  %XferCount15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !3651
  %19 = load volatile i16, i16* %XferCount15, align 2, !dbg !3651
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3652
  %XferSize16 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !3653
  store i16 %19, i16* %XferSize16, align 4, !dbg !3654
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3655
  %XferOptions17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 5, !dbg !3656
  %22 = load volatile i32, i32* %XferOptions17, align 4, !dbg !3656
  store i32 %22, i32* %xfermode, align 4, !dbg !3657
  br label %if.end18

if.end18:                                         ; preds = %if.else14, %if.then13
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3658
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 6, !dbg !3659
  %24 = load volatile i32, i32* %PreviousState, align 4, !dbg !3659
  %cmp19 = icmp eq i32 %24, 18, !dbg !3660
  br i1 %cmp19, label %land.lhs.true, label %if.else28, !dbg !3661

land.lhs.true:                                    ; preds = %if.end18
  %25 = load i32, i32* %XferOptions.addr, align 4, !dbg !3662
  %cmp21 = icmp eq i32 %25, 170, !dbg !3662
  br i1 %cmp21, label %lor.end, label %lor.rhs, !dbg !3662

lor.rhs:                                          ; preds = %land.lhs.true
  %26 = load i32, i32* %XferOptions.addr, align 4, !dbg !3662
  %cmp23 = icmp eq i32 %26, 43520, !dbg !3662
  br label %lor.end, !dbg !3662

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %27 = phi i1 [ true, %land.lhs.true ], [ %cmp23, %lor.rhs ]
  %lor.ext = zext i1 %27 to i32, !dbg !3662
  %cmp25 = icmp eq i32 %lor.ext, 0, !dbg !3663
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !3664

if.then27:                                        ; preds = %lor.end
  store i32 0, i32* %xferrequest, align 4, !dbg !3665
  br label %if.end36, !dbg !3666

if.else28:                                        ; preds = %lor.end, %if.end18
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3667
  call arm_aapcs_vfpcc void @I2C_ConvertOtherXferOptions(%struct.__I2C_HandleTypeDef* %28), !dbg !3668
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3669
  %XferCount29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 4, !dbg !3670
  %30 = load volatile i16, i16* %XferCount29, align 2, !dbg !3670
  %conv30 = zext i16 %30 to i32, !dbg !3669
  %cmp31 = icmp ule i32 %conv30, 255, !dbg !3671
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !3669

if.then33:                                        ; preds = %if.else28
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3672
  %XferOptions34 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 5, !dbg !3673
  %32 = load volatile i32, i32* %XferOptions34, align 4, !dbg !3673
  store i32 %32, i32* %xfermode, align 4, !dbg !3674
  br label %if.end35, !dbg !3675

if.end35:                                         ; preds = %if.then33, %if.else28
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then27
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3676
  %34 = load i16, i16* %DevAddress.addr, align 2, !dbg !3677
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3678
  %XferSize37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 3, !dbg !3679
  %36 = load i16, i16* %XferSize37, align 4, !dbg !3679
  %conv38 = trunc i16 %36 to i8, !dbg !3680
  %37 = load i32, i32* %xfermode, align 4, !dbg !3681
  %38 = load i32, i32* %xferrequest, align 4, !dbg !3682
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %33, i16 zeroext %34, i8 zeroext %conv38, i32 %37, i32 %38), !dbg !3683
  br label %do.body39, !dbg !3684

do.body39:                                        ; preds = %if.end36
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3684
  %Lock40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 10, !dbg !3684
  store i8 0, i8* %Lock40, align 4, !dbg !3684
  br label %do.end41, !dbg !3684

do.end41:                                         ; preds = %do.body39
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3685
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %40, i16 zeroext 2), !dbg !3686
  store i8 0, i8* %retval, align 1, !dbg !3687
  br label %return, !dbg !3687

if.else42:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !3688
  br label %return, !dbg !3688

return:                                           ; preds = %if.else42, %do.end41, %if.then5
  %41 = load i8, i8* %retval, align 1, !dbg !3689
  ret i8 %41, !dbg !3689
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Seq_Receive_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress, i8* %pData, i16 zeroext %Size, i32 %XferOptions) #0 !dbg !3690 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %XferOptions.addr = alloca i32, align 4
  %xfermode = alloca i32, align 4
  %xferrequest = alloca i32, align 4
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %XferOptions, i32* %XferOptions.addr, align 4
  store i32 -2147474432, i32* %xferrequest, align 4, !dbg !3691
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3692
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !3693
  %1 = load volatile i8, i8* %State, align 1, !dbg !3693
  %conv = zext i8 %1 to i32, !dbg !3692
  %cmp = icmp eq i32 %conv, 32, !dbg !3694
  br i1 %cmp, label %if.then, label %if.else93, !dbg !3692

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3695

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3695
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !3695
  %3 = load i8, i8* %Lock, align 4, !dbg !3695
  %conv2 = zext i8 %3 to i32, !dbg !3695
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !3695
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3695

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !3695
  br label %return, !dbg !3695

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3695
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !3695
  store i8 1, i8* %Lock6, align 4, !dbg !3695
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !3695

do.end:                                           ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3696
  %State7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 11, !dbg !3697
  store volatile i8 34, i8* %State7, align 1, !dbg !3698
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3699
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 12, !dbg !3700
  store volatile i8 16, i8* %Mode, align 2, !dbg !3701
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3702
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 13, !dbg !3703
  store volatile i32 0, i32* %ErrorCode, align 4, !dbg !3704
  %8 = load i8*, i8** %pData.addr, align 4, !dbg !3705
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3706
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 2, !dbg !3707
  store i8* %8, i8** %pBuffPtr, align 4, !dbg !3708
  %10 = load i16, i16* %Size.addr, align 2, !dbg !3709
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3710
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 4, !dbg !3711
  store volatile i16 %10, i16* %XferCount, align 2, !dbg !3712
  %12 = load i32, i32* %XferOptions.addr, align 4, !dbg !3713
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3714
  %XferOptions8 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 5, !dbg !3715
  store volatile i32 %12, i32* %XferOptions8, align 4, !dbg !3716
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3717
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 7, !dbg !3718
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !3719
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3720
  %XferCount9 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 4, !dbg !3721
  %16 = load volatile i16, i16* %XferCount9, align 2, !dbg !3721
  %conv10 = zext i16 %16 to i32, !dbg !3720
  %cmp11 = icmp ugt i32 %conv10, 255, !dbg !3722
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !3720

if.then13:                                        ; preds = %do.end
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3723
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 3, !dbg !3724
  store i16 255, i16* %XferSize, align 4, !dbg !3725
  store i32 16777216, i32* %xfermode, align 4, !dbg !3726
  br label %if.end18, !dbg !3727

if.else14:                                        ; preds = %do.end
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3728
  %XferCount15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !3729
  %19 = load volatile i16, i16* %XferCount15, align 2, !dbg !3729
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3730
  %XferSize16 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 3, !dbg !3731
  store i16 %19, i16* %XferSize16, align 4, !dbg !3732
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3733
  %XferOptions17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 5, !dbg !3734
  %22 = load volatile i32, i32* %XferOptions17, align 4, !dbg !3734
  store i32 %22, i32* %xfermode, align 4, !dbg !3735
  br label %if.end18

if.end18:                                         ; preds = %if.else14, %if.then13
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3736
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 6, !dbg !3737
  %24 = load volatile i32, i32* %PreviousState, align 4, !dbg !3737
  %cmp19 = icmp eq i32 %24, 18, !dbg !3738
  br i1 %cmp19, label %land.lhs.true, label %if.else28, !dbg !3739

land.lhs.true:                                    ; preds = %if.end18
  %25 = load i32, i32* %XferOptions.addr, align 4, !dbg !3740
  %cmp21 = icmp eq i32 %25, 170, !dbg !3740
  br i1 %cmp21, label %lor.end, label %lor.rhs, !dbg !3740

lor.rhs:                                          ; preds = %land.lhs.true
  %26 = load i32, i32* %XferOptions.addr, align 4, !dbg !3740
  %cmp23 = icmp eq i32 %26, 43520, !dbg !3740
  br label %lor.end, !dbg !3740

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %27 = phi i1 [ true, %land.lhs.true ], [ %cmp23, %lor.rhs ]
  %lor.ext = zext i1 %27 to i32, !dbg !3740
  %cmp25 = icmp eq i32 %lor.ext, 0, !dbg !3741
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !3742

if.then27:                                        ; preds = %lor.end
  store i32 0, i32* %xferrequest, align 4, !dbg !3743
  br label %if.end36, !dbg !3744

if.else28:                                        ; preds = %lor.end, %if.end18
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3745
  call arm_aapcs_vfpcc void @I2C_ConvertOtherXferOptions(%struct.__I2C_HandleTypeDef* %28), !dbg !3746
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3747
  %XferCount29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 4, !dbg !3748
  %30 = load volatile i16, i16* %XferCount29, align 2, !dbg !3748
  %conv30 = zext i16 %30 to i32, !dbg !3747
  %cmp31 = icmp ule i32 %conv30, 255, !dbg !3749
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !3747

if.then33:                                        ; preds = %if.else28
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3750
  %XferOptions34 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 5, !dbg !3751
  %32 = load volatile i32, i32* %XferOptions34, align 4, !dbg !3751
  store i32 %32, i32* %xfermode, align 4, !dbg !3752
  br label %if.end35, !dbg !3753

if.end35:                                         ; preds = %if.then33, %if.else28
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then27
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3754
  %XferSize37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 3, !dbg !3755
  %34 = load i16, i16* %XferSize37, align 4, !dbg !3755
  %conv38 = zext i16 %34 to i32, !dbg !3754
  %cmp39 = icmp ugt i32 %conv38, 0, !dbg !3756
  br i1 %cmp39, label %if.then41, label %if.else85, !dbg !3754

if.then41:                                        ; preds = %if.end36
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3757
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 9, !dbg !3758
  %36 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !3758
  %cmp42 = icmp ne %struct.__DMA_HandleTypeDef* %36, null, !dbg !3759
  br i1 %cmp42, label %if.then44, label %if.else52, !dbg !3757

if.then44:                                        ; preds = %if.then41
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3760
  %hdmarx45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 9, !dbg !3761
  %38 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx45, align 4, !dbg !3761
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %38, i32 0, i32 5, !dbg !3762
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAMasterReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !3763
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3764
  %hdmarx46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 9, !dbg !3765
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx46, align 4, !dbg !3765
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 9, !dbg !3766
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !3767
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3768
  %hdmarx47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 9, !dbg !3769
  %42 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx47, align 4, !dbg !3769
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %42, i32 0, i32 6, !dbg !3770
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !3771
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3772
  %hdmarx48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 9, !dbg !3773
  %44 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx48, align 4, !dbg !3773
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %44, i32 0, i32 10, !dbg !3774
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !3775
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3776
  %hdmarx49 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 9, !dbg !3777
  %46 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx49, align 4, !dbg !3777
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3778
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %47, i32 0, i32 0, !dbg !3779
  %48 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !3779
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %48, i32 0, i32 9, !dbg !3780
  %49 = ptrtoint i32* %RXDR to i32, !dbg !3781
  %50 = load i8*, i8** %pData.addr, align 4, !dbg !3782
  %51 = ptrtoint i8* %50 to i32, !dbg !3783
  %52 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3784
  %XferSize50 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %52, i32 0, i32 3, !dbg !3785
  %53 = load i16, i16* %XferSize50, align 4, !dbg !3785
  %conv51 = zext i16 %53 to i32, !dbg !3784
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %46, i32 %49, i32 %51, i32 %conv51), !dbg !3786
  store i8 %call, i8* %dmaxferstatus, align 1, !dbg !3787
  br label %if.end59, !dbg !3788

if.else52:                                        ; preds = %if.then41
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3789
  %State53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 11, !dbg !3790
  store volatile i8 32, i8* %State53, align 1, !dbg !3791
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3792
  %Mode54 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 12, !dbg !3793
  store volatile i8 0, i8* %Mode54, align 2, !dbg !3794
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3795
  %ErrorCode55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 13, !dbg !3796
  %57 = load volatile i32, i32* %ErrorCode55, align 4, !dbg !3797
  %or = or i32 %57, 128, !dbg !3797
  store volatile i32 %or, i32* %ErrorCode55, align 4, !dbg !3797
  br label %do.body56, !dbg !3798

do.body56:                                        ; preds = %if.else52
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3798
  %Lock57 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 10, !dbg !3798
  store i8 0, i8* %Lock57, align 4, !dbg !3798
  br label %do.end58, !dbg !3798

do.end58:                                         ; preds = %do.body56
  store i8 1, i8* %retval, align 1, !dbg !3799
  br label %return, !dbg !3799

if.end59:                                         ; preds = %if.then44
  %59 = load i8, i8* %dmaxferstatus, align 1, !dbg !3800
  %conv60 = zext i8 %59 to i32, !dbg !3800
  %cmp61 = icmp eq i32 %conv60, 0, !dbg !3801
  br i1 %cmp61, label %if.then63, label %if.else76, !dbg !3800

if.then63:                                        ; preds = %if.end59
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3802
  %61 = load i16, i16* %DevAddress.addr, align 2, !dbg !3803
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3804
  %XferSize64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 3, !dbg !3805
  %63 = load i16, i16* %XferSize64, align 4, !dbg !3805
  %conv65 = trunc i16 %63 to i8, !dbg !3806
  %64 = load i32, i32* %xfermode, align 4, !dbg !3807
  %65 = load i32, i32* %xferrequest, align 4, !dbg !3808
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %60, i16 zeroext %61, i8 zeroext %conv65, i32 %64, i32 %65), !dbg !3809
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3810
  %XferSize66 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 3, !dbg !3811
  %67 = load i16, i16* %XferSize66, align 4, !dbg !3811
  %conv67 = zext i16 %67 to i32, !dbg !3810
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3812
  %XferCount68 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %68, i32 0, i32 4, !dbg !3813
  %69 = load volatile i16, i16* %XferCount68, align 2, !dbg !3814
  %conv69 = zext i16 %69 to i32, !dbg !3814
  %sub = sub nsw i32 %conv69, %conv67, !dbg !3814
  %conv70 = trunc i32 %sub to i16, !dbg !3814
  store volatile i16 %conv70, i16* %XferCount68, align 2, !dbg !3814
  br label %do.body71, !dbg !3815

do.body71:                                        ; preds = %if.then63
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3815
  %Lock72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %70, i32 0, i32 10, !dbg !3815
  store i8 0, i8* %Lock72, align 4, !dbg !3815
  br label %do.end73, !dbg !3815

do.end73:                                         ; preds = %do.body71
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3816
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %71, i16 zeroext 16), !dbg !3817
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3818
  %Instance74 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 0, !dbg !3819
  %73 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance74, align 4, !dbg !3819
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %73, i32 0, i32 0, !dbg !3820
  %74 = load volatile i32, i32* %CR1, align 4, !dbg !3821
  %or75 = or i32 %74, 32768, !dbg !3821
  store volatile i32 %or75, i32* %CR1, align 4, !dbg !3821
  br label %if.end84, !dbg !3822

if.else76:                                        ; preds = %if.end59
  %75 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3823
  %State77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %75, i32 0, i32 11, !dbg !3824
  store volatile i8 32, i8* %State77, align 1, !dbg !3825
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3826
  %Mode78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %76, i32 0, i32 12, !dbg !3827
  store volatile i8 0, i8* %Mode78, align 2, !dbg !3828
  %77 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3829
  %ErrorCode79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %77, i32 0, i32 13, !dbg !3830
  %78 = load volatile i32, i32* %ErrorCode79, align 4, !dbg !3831
  %or80 = or i32 %78, 16, !dbg !3831
  store volatile i32 %or80, i32* %ErrorCode79, align 4, !dbg !3831
  br label %do.body81, !dbg !3832

do.body81:                                        ; preds = %if.else76
  %79 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3832
  %Lock82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %79, i32 0, i32 10, !dbg !3832
  store i8 0, i8* %Lock82, align 4, !dbg !3832
  br label %do.end83, !dbg !3832

do.end83:                                         ; preds = %do.body81
  store i8 1, i8* %retval, align 1, !dbg !3833
  br label %return, !dbg !3833

if.end84:                                         ; preds = %do.end73
  br label %if.end92, !dbg !3834

if.else85:                                        ; preds = %if.end36
  %80 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3835
  %XferISR86 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %80, i32 0, i32 7, !dbg !3836
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Master_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR86, align 4, !dbg !3837
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3838
  %82 = load i16, i16* %DevAddress.addr, align 2, !dbg !3839
  %83 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3840
  %XferSize87 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %83, i32 0, i32 3, !dbg !3841
  %84 = load i16, i16* %XferSize87, align 4, !dbg !3841
  %conv88 = trunc i16 %84 to i8, !dbg !3842
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %81, i16 zeroext %82, i8 zeroext %conv88, i32 33554432, i32 -2147474432), !dbg !3843
  br label %do.body89, !dbg !3844

do.body89:                                        ; preds = %if.else85
  %85 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3844
  %Lock90 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %85, i32 0, i32 10, !dbg !3844
  store i8 0, i8* %Lock90, align 4, !dbg !3844
  br label %do.end91, !dbg !3844

do.end91:                                         ; preds = %do.body89
  %86 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3845
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %86, i16 zeroext 1), !dbg !3846
  br label %if.end92

if.end92:                                         ; preds = %do.end91, %if.end84
  store i8 0, i8* %retval, align 1, !dbg !3847
  br label %return, !dbg !3847

if.else93:                                        ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !3848
  br label %return, !dbg !3848

return:                                           ; preds = %if.else93, %if.end92, %do.end83, %do.end58, %if.then5
  %87 = load i8, i8* %retval, align 1, !dbg !3849
  ret i8 %87, !dbg !3849
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Seq_Transmit_IT(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size, i32 %XferOptions) #0 !dbg !3850 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %XferOptions.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %XferOptions, i32* %XferOptions.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3851
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !3852
  %1 = load volatile i8, i8* %State, align 1, !dbg !3852
  %conv = zext i8 %1 to i32, !dbg !3853
  %and = and i32 %conv, 40, !dbg !3854
  %cmp = icmp eq i32 %and, 40, !dbg !3855
  br i1 %cmp, label %if.then, label %if.else60, !dbg !3856

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !3857
  %cmp2 = icmp eq i8* %2, null, !dbg !3858
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !3859

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !3860
  %conv4 = zext i16 %3 to i32, !dbg !3860
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !3861
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !3862

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3863
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !3864
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !3865
  store i8 1, i8* %retval, align 1, !dbg !3866
  br label %return, !dbg !3866

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3867
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %5, i16 zeroext -32767), !dbg !3868
  br label %do.body, !dbg !3869

do.body:                                          ; preds = %if.end
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3869
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 10, !dbg !3869
  %7 = load i8, i8* %Lock, align 4, !dbg !3869
  %conv8 = zext i8 %7 to i32, !dbg !3869
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !3869
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3869

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !3869
  br label %return, !dbg !3869

if.else:                                          ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3869
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 10, !dbg !3869
  store i8 1, i8* %Lock12, align 4, !dbg !3869
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !3869

do.end:                                           ; preds = %if.end13
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3870
  %State14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !3871
  %10 = load volatile i8, i8* %State14, align 1, !dbg !3871
  %conv15 = zext i8 %10 to i32, !dbg !3870
  %cmp16 = icmp eq i32 %conv15, 42, !dbg !3872
  br i1 %cmp16, label %if.then18, label %if.end41, !dbg !3870

if.then18:                                        ; preds = %do.end
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3873
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %11, i16 zeroext 2), !dbg !3874
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3875
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 0, !dbg !3876
  %13 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !3876
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %13, i32 0, i32 0, !dbg !3877
  %14 = load volatile i32, i32* %CR1, align 4, !dbg !3877
  %and19 = and i32 %14, 32768, !dbg !3878
  %cmp20 = icmp eq i32 %and19, 32768, !dbg !3879
  br i1 %cmp20, label %if.then22, label %if.end40, !dbg !3880

if.then22:                                        ; preds = %if.then18
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3881
  %Instance23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 0, !dbg !3882
  %16 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance23, align 4, !dbg !3882
  %CR124 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %16, i32 0, i32 0, !dbg !3883
  %17 = load volatile i32, i32* %CR124, align 4, !dbg !3884
  %and25 = and i32 %17, -32769, !dbg !3884
  store volatile i32 %and25, i32* %CR124, align 4, !dbg !3884
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3885
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 9, !dbg !3886
  %19 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !3886
  %cmp26 = icmp ne %struct.__DMA_HandleTypeDef* %19, null, !dbg !3887
  br i1 %cmp26, label %if.then28, label %if.end39, !dbg !3885

if.then28:                                        ; preds = %if.then22
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3888
  %hdmarx29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 9, !dbg !3889
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx29, align 4, !dbg !3889
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 10, !dbg !3890
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAAbort, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !3891
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3892
  %hdmarx30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 9, !dbg !3893
  %23 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx30, align 4, !dbg !3893
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* %23), !dbg !3894
  %conv31 = zext i8 %call to i32, !dbg !3894
  %cmp32 = icmp ne i32 %conv31, 0, !dbg !3895
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !3894

if.then34:                                        ; preds = %if.then28
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3896
  %hdmarx35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 9, !dbg !3897
  %25 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx35, align 4, !dbg !3897
  %XferAbortCallback36 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %25, i32 0, i32 10, !dbg !3898
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback36, align 4, !dbg !3898
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3899
  %hdmarx37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 9, !dbg !3900
  %28 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx37, align 4, !dbg !3900
  call arm_aapcs_vfpcc void %26(%struct.__DMA_HandleTypeDef* %28), !dbg !3896
  br label %if.end38, !dbg !3901

if.end38:                                         ; preds = %if.then34, %if.then28
  br label %if.end39, !dbg !3902

if.end39:                                         ; preds = %if.end38, %if.then22
  br label %if.end40, !dbg !3903

if.end40:                                         ; preds = %if.end39, %if.then18
  br label %if.end41, !dbg !3904

if.end41:                                         ; preds = %if.end40, %do.end
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3905
  %State42 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 11, !dbg !3906
  store volatile i8 41, i8* %State42, align 1, !dbg !3907
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3908
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 12, !dbg !3909
  store volatile i8 32, i8* %Mode, align 2, !dbg !3910
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3911
  %ErrorCode43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 13, !dbg !3912
  store volatile i32 0, i32* %ErrorCode43, align 4, !dbg !3913
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3914
  %Instance44 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 0, !dbg !3915
  %33 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance44, align 4, !dbg !3915
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %33, i32 0, i32 1, !dbg !3916
  %34 = load volatile i32, i32* %CR2, align 4, !dbg !3917
  %and45 = and i32 %34, -32769, !dbg !3917
  store volatile i32 %and45, i32* %CR2, align 4, !dbg !3917
  %35 = load i8*, i8** %pData.addr, align 4, !dbg !3918
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3919
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 2, !dbg !3920
  store i8* %35, i8** %pBuffPtr, align 4, !dbg !3921
  %37 = load i16, i16* %Size.addr, align 2, !dbg !3922
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3923
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 4, !dbg !3924
  store volatile i16 %37, i16* %XferCount, align 2, !dbg !3925
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3926
  %XferCount46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 4, !dbg !3927
  %40 = load volatile i16, i16* %XferCount46, align 2, !dbg !3927
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3928
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 3, !dbg !3929
  store i16 %40, i16* %XferSize, align 4, !dbg !3930
  %42 = load i32, i32* %XferOptions.addr, align 4, !dbg !3931
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3932
  %XferOptions47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 5, !dbg !3933
  store volatile i32 %42, i32* %XferOptions47, align 4, !dbg !3934
  %44 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3935
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %44, i32 0, i32 7, !dbg !3936
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !3937
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3938
  %Instance48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 0, !dbg !3938
  %46 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance48, align 4, !dbg !3938
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %46, i32 0, i32 6, !dbg !3938
  %47 = load volatile i32, i32* %ISR, align 4, !dbg !3938
  %and49 = and i32 %47, 65536, !dbg !3938
  %shr = lshr i32 %and49, 16, !dbg !3938
  %conv50 = trunc i32 %shr to i8, !dbg !3938
  %conv51 = zext i8 %conv50 to i32, !dbg !3938
  %cmp52 = icmp eq i32 %conv51, 1, !dbg !3939
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !3938

if.then54:                                        ; preds = %if.end41
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3940
  %Instance55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 0, !dbg !3940
  %49 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance55, align 4, !dbg !3940
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %49, i32 0, i32 7, !dbg !3940
  store volatile i32 8, i32* %ICR, align 4, !dbg !3940
  br label %if.end56, !dbg !3941

if.end56:                                         ; preds = %if.then54, %if.end41
  br label %do.body57, !dbg !3942

do.body57:                                        ; preds = %if.end56
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3942
  %Lock58 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 10, !dbg !3942
  store i8 0, i8* %Lock58, align 4, !dbg !3942
  br label %do.end59, !dbg !3942

do.end59:                                         ; preds = %do.body57
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3943
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %51, i16 zeroext -32767), !dbg !3944
  store i8 0, i8* %retval, align 1, !dbg !3945
  br label %return, !dbg !3945

if.else60:                                        ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !3946
  br label %return, !dbg !3946

return:                                           ; preds = %if.else60, %do.end59, %if.then11, %if.then7
  %52 = load i8, i8* %retval, align 1, !dbg !3947
  ret i8 %52, !dbg !3947
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %InterruptRequest) #0 !dbg !3948 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %InterruptRequest.addr = alloca i16, align 2
  %tmpisr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %InterruptRequest, i16* %InterruptRequest.addr, align 2
  store i32 0, i32* %tmpisr, align 4, !dbg !3949
  %0 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !3950
  %conv = zext i16 %0 to i32, !dbg !3950
  %and = and i32 %conv, 1, !dbg !3951
  %cmp = icmp eq i32 %and, 1, !dbg !3952
  br i1 %cmp, label %if.then, label %if.end8, !dbg !3953

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %tmpisr, align 4, !dbg !3954
  %or = or i32 %1, 66, !dbg !3954
  store i32 %or, i32* %tmpisr, align 4, !dbg !3954
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3955
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 11, !dbg !3956
  %3 = load volatile i8, i8* %State, align 1, !dbg !3956
  %conv2 = zext i8 %3 to i32, !dbg !3957
  %and3 = and i32 %conv2, 40, !dbg !3958
  %cmp4 = icmp ne i32 %and3, 40, !dbg !3959
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !3960

if.then6:                                         ; preds = %if.then
  %4 = load i32, i32* %tmpisr, align 4, !dbg !3961
  %or7 = or i32 %4, 176, !dbg !3961
  store i32 %or7, i32* %tmpisr, align 4, !dbg !3961
  br label %if.end, !dbg !3962

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end8, !dbg !3963

if.end8:                                          ; preds = %if.end, %entry
  %5 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !3964
  %conv9 = zext i16 %5 to i32, !dbg !3964
  %and10 = and i32 %conv9, 2, !dbg !3965
  %cmp11 = icmp eq i32 %and10, 2, !dbg !3966
  br i1 %cmp11, label %if.then13, label %if.end23, !dbg !3967

if.then13:                                        ; preds = %if.end8
  %6 = load i32, i32* %tmpisr, align 4, !dbg !3968
  %or14 = or i32 %6, 68, !dbg !3968
  store i32 %or14, i32* %tmpisr, align 4, !dbg !3968
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3969
  %State15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 11, !dbg !3970
  %8 = load volatile i8, i8* %State15, align 1, !dbg !3970
  %conv16 = zext i8 %8 to i32, !dbg !3971
  %and17 = and i32 %conv16, 40, !dbg !3972
  %cmp18 = icmp ne i32 %and17, 40, !dbg !3973
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !3974

if.then20:                                        ; preds = %if.then13
  %9 = load i32, i32* %tmpisr, align 4, !dbg !3975
  %or21 = or i32 %9, 176, !dbg !3975
  store i32 %or21, i32* %tmpisr, align 4, !dbg !3975
  br label %if.end22, !dbg !3976

if.end22:                                         ; preds = %if.then20, %if.then13
  br label %if.end23, !dbg !3977

if.end23:                                         ; preds = %if.end22, %if.end8
  %10 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !3978
  %conv24 = zext i16 %10 to i32, !dbg !3978
  %and25 = and i32 %conv24, 32768, !dbg !3979
  %cmp26 = icmp eq i32 %and25, 32768, !dbg !3980
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !3981

if.then28:                                        ; preds = %if.end23
  %11 = load i32, i32* %tmpisr, align 4, !dbg !3982
  %or29 = or i32 %11, 184, !dbg !3982
  store i32 %or29, i32* %tmpisr, align 4, !dbg !3982
  br label %if.end30, !dbg !3983

if.end30:                                         ; preds = %if.then28, %if.end23
  %12 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !3984
  %conv31 = zext i16 %12 to i32, !dbg !3984
  %cmp32 = icmp eq i32 %conv31, 16, !dbg !3985
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !3984

if.then34:                                        ; preds = %if.end30
  %13 = load i32, i32* %tmpisr, align 4, !dbg !3986
  %or35 = or i32 %13, 144, !dbg !3986
  store i32 %or35, i32* %tmpisr, align 4, !dbg !3986
  br label %if.end36, !dbg !3987

if.end36:                                         ; preds = %if.then34, %if.end30
  %14 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !3988
  %conv37 = zext i16 %14 to i32, !dbg !3988
  %cmp38 = icmp eq i32 %conv37, 32, !dbg !3989
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !3988

if.then40:                                        ; preds = %if.end36
  %15 = load i32, i32* %tmpisr, align 4, !dbg !3990
  %or41 = or i32 %15, 32, !dbg !3990
  store i32 %or41, i32* %tmpisr, align 4, !dbg !3990
  br label %if.end42, !dbg !3991

if.end42:                                         ; preds = %if.then40, %if.end36
  %16 = load i16, i16* %InterruptRequest.addr, align 2, !dbg !3992
  %conv43 = zext i16 %16 to i32, !dbg !3992
  %cmp44 = icmp eq i32 %conv43, 64, !dbg !3993
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !3992

if.then46:                                        ; preds = %if.end42
  %17 = load i32, i32* %tmpisr, align 4, !dbg !3994
  %or47 = or i32 %17, 64, !dbg !3994
  store i32 %or47, i32* %tmpisr, align 4, !dbg !3994
  br label %if.end48, !dbg !3995

if.end48:                                         ; preds = %if.then46, %if.end42
  %18 = load i32, i32* %tmpisr, align 4, !dbg !3996
  %neg = xor i32 %18, -1, !dbg !3996
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !3996
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 0, !dbg !3996
  %20 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !3996
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %20, i32 0, i32 0, !dbg !3996
  %21 = load volatile i32, i32* %CR1, align 4, !dbg !3996
  %and49 = and i32 %21, %neg, !dbg !3996
  store volatile i32 %and49, i32* %CR1, align 4, !dbg !3996
  ret void, !dbg !3997
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_DMAAbort(%struct.__DMA_HandleTypeDef* %hdma) #0 !dbg !3998 {
entry:
  %hdma.addr = alloca %struct.__DMA_HandleTypeDef*, align 4
  %hi2c = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__DMA_HandleTypeDef* %hdma, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4
  %0 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdma.addr, align 4, !dbg !3999
  %Parent = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %0, i32 0, i32 4, !dbg !4000
  %1 = load i8*, i8** %Parent, align 4, !dbg !4000
  %2 = bitcast i8* %1 to %struct.__I2C_HandleTypeDef*, !dbg !4001
  store %struct.__I2C_HandleTypeDef* %2, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !4002
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !4003
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 8, !dbg !4004
  %4 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !4004
  %cmp = icmp ne %struct.__DMA_HandleTypeDef* %4, null, !dbg !4005
  br i1 %cmp, label %if.then, label %if.end, !dbg !4003

if.then:                                          ; preds = %entry
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !4006
  %hdmatx1 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 8, !dbg !4007
  %6 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx1, align 4, !dbg !4007
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %6, i32 0, i32 10, !dbg !4008
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !4009
  br label %if.end, !dbg !4010

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !4011
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 9, !dbg !4012
  %8 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !4012
  %cmp2 = icmp ne %struct.__DMA_HandleTypeDef* %8, null, !dbg !4013
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !4011

if.then3:                                         ; preds = %if.end
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !4014
  %hdmarx4 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 9, !dbg !4015
  %10 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx4, align 4, !dbg !4015
  %XferAbortCallback5 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %10, i32 0, i32 10, !dbg !4016
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback5, align 4, !dbg !4017
  br label %if.end6, !dbg !4018

if.end6:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c, align 4, !dbg !4019
  call arm_aapcs_vfpcc void @I2C_TreatErrorCallback(%struct.__I2C_HandleTypeDef* %11), !dbg !4020
  ret void, !dbg !4021
}

declare dso_local arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef*) #1

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Seq_Transmit_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size, i32 %XferOptions) #0 !dbg !4022 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %XferOptions.addr = alloca i32, align 4
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %XferOptions, i32* %XferOptions.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4023
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !4024
  %1 = load volatile i8, i8* %State, align 1, !dbg !4024
  %conv = zext i8 %1 to i32, !dbg !4025
  %and = and i32 %conv, 40, !dbg !4026
  %cmp = icmp eq i32 %and, 40, !dbg !4027
  br i1 %cmp, label %if.then, label %if.else138, !dbg !4028

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !4029
  %cmp2 = icmp eq i8* %2, null, !dbg !4030
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !4031

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !4032
  %conv4 = zext i16 %3 to i32, !dbg !4032
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !4033
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !4034

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4035
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !4036
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !4037
  store i8 1, i8* %retval, align 1, !dbg !4038
  br label %return, !dbg !4038

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !4039

do.body:                                          ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4039
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 10, !dbg !4039
  %6 = load i8, i8* %Lock, align 4, !dbg !4039
  %conv8 = zext i8 %6 to i32, !dbg !4039
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !4039
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !4039

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !4039
  br label %return, !dbg !4039

if.else:                                          ; preds = %do.body
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4039
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !4039
  store i8 1, i8* %Lock12, align 4, !dbg !4039
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !4039

do.end:                                           ; preds = %if.end13
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4040
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %8, i16 zeroext -32767), !dbg !4041
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4042
  %State14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !4043
  %10 = load volatile i8, i8* %State14, align 1, !dbg !4043
  %conv15 = zext i8 %10 to i32, !dbg !4042
  %cmp16 = icmp eq i32 %conv15, 42, !dbg !4044
  br i1 %cmp16, label %if.then18, label %if.else41, !dbg !4042

if.then18:                                        ; preds = %do.end
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4045
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %11, i16 zeroext 2), !dbg !4046
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4047
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 0, !dbg !4048
  %13 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !4048
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %13, i32 0, i32 0, !dbg !4049
  %14 = load volatile i32, i32* %CR1, align 4, !dbg !4049
  %and19 = and i32 %14, 32768, !dbg !4050
  %cmp20 = icmp eq i32 %and19, 32768, !dbg !4051
  br i1 %cmp20, label %if.then22, label %if.end40, !dbg !4052

if.then22:                                        ; preds = %if.then18
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4053
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 9, !dbg !4054
  %16 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !4054
  %cmp23 = icmp ne %struct.__DMA_HandleTypeDef* %16, null, !dbg !4055
  br i1 %cmp23, label %if.then25, label %if.end39, !dbg !4053

if.then25:                                        ; preds = %if.then22
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4056
  %Instance26 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 0, !dbg !4057
  %18 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance26, align 4, !dbg !4057
  %CR127 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %18, i32 0, i32 0, !dbg !4058
  %19 = load volatile i32, i32* %CR127, align 4, !dbg !4059
  %and28 = and i32 %19, -32769, !dbg !4059
  store volatile i32 %and28, i32* %CR127, align 4, !dbg !4059
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4060
  %hdmarx29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 9, !dbg !4061
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx29, align 4, !dbg !4061
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 10, !dbg !4062
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAAbort, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !4063
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4064
  %hdmarx30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 9, !dbg !4065
  %23 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx30, align 4, !dbg !4065
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* %23), !dbg !4066
  %conv31 = zext i8 %call to i32, !dbg !4066
  %cmp32 = icmp ne i32 %conv31, 0, !dbg !4067
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !4066

if.then34:                                        ; preds = %if.then25
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4068
  %hdmarx35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 9, !dbg !4069
  %25 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx35, align 4, !dbg !4069
  %XferAbortCallback36 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %25, i32 0, i32 10, !dbg !4070
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback36, align 4, !dbg !4070
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4071
  %hdmarx37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 9, !dbg !4072
  %28 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx37, align 4, !dbg !4072
  call arm_aapcs_vfpcc void %26(%struct.__DMA_HandleTypeDef* %28), !dbg !4068
  br label %if.end38, !dbg !4073

if.end38:                                         ; preds = %if.then34, %if.then25
  br label %if.end39, !dbg !4074

if.end39:                                         ; preds = %if.end38, %if.then22
  br label %if.end40, !dbg !4075

if.end40:                                         ; preds = %if.end39, %if.then18
  br label %if.end75, !dbg !4076

if.else41:                                        ; preds = %do.end
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4077
  %State42 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 11, !dbg !4078
  %30 = load volatile i8, i8* %State42, align 1, !dbg !4078
  %conv43 = zext i8 %30 to i32, !dbg !4077
  %cmp44 = icmp eq i32 %conv43, 41, !dbg !4079
  br i1 %cmp44, label %if.then46, label %if.else73, !dbg !4077

if.then46:                                        ; preds = %if.else41
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4080
  %Instance47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 0, !dbg !4081
  %32 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance47, align 4, !dbg !4081
  %CR148 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %32, i32 0, i32 0, !dbg !4082
  %33 = load volatile i32, i32* %CR148, align 4, !dbg !4082
  %and49 = and i32 %33, 16384, !dbg !4083
  %cmp50 = icmp eq i32 %and49, 16384, !dbg !4084
  br i1 %cmp50, label %if.then52, label %if.end72, !dbg !4085

if.then52:                                        ; preds = %if.then46
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4086
  %Instance53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 0, !dbg !4087
  %35 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance53, align 4, !dbg !4087
  %CR154 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %35, i32 0, i32 0, !dbg !4088
  %36 = load volatile i32, i32* %CR154, align 4, !dbg !4089
  %and55 = and i32 %36, -16385, !dbg !4089
  store volatile i32 %and55, i32* %CR154, align 4, !dbg !4089
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4090
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 8, !dbg !4091
  %38 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !4091
  %cmp56 = icmp ne %struct.__DMA_HandleTypeDef* %38, null, !dbg !4092
  br i1 %cmp56, label %if.then58, label %if.end71, !dbg !4090

if.then58:                                        ; preds = %if.then52
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4093
  %hdmatx59 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 8, !dbg !4094
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx59, align 4, !dbg !4094
  %XferAbortCallback60 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 10, !dbg !4095
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAAbort, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback60, align 4, !dbg !4096
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4097
  %hdmatx61 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 8, !dbg !4098
  %42 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx61, align 4, !dbg !4098
  %call62 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* %42), !dbg !4099
  %conv63 = zext i8 %call62 to i32, !dbg !4099
  %cmp64 = icmp ne i32 %conv63, 0, !dbg !4100
  br i1 %cmp64, label %if.then66, label %if.end70, !dbg !4099

if.then66:                                        ; preds = %if.then58
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4101
  %hdmatx67 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 8, !dbg !4102
  %44 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx67, align 4, !dbg !4102
  %XferAbortCallback68 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %44, i32 0, i32 10, !dbg !4103
  %45 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback68, align 4, !dbg !4103
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4104
  %hdmatx69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %46, i32 0, i32 8, !dbg !4105
  %47 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx69, align 4, !dbg !4105
  call arm_aapcs_vfpcc void %45(%struct.__DMA_HandleTypeDef* %47), !dbg !4101
  br label %if.end70, !dbg !4106

if.end70:                                         ; preds = %if.then66, %if.then58
  br label %if.end71, !dbg !4107

if.end71:                                         ; preds = %if.end70, %if.then52
  br label %if.end72, !dbg !4108

if.end72:                                         ; preds = %if.end71, %if.then46
  br label %if.end74, !dbg !4109

if.else73:                                        ; preds = %if.else41
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.end72
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end40
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4110
  %State76 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 11, !dbg !4111
  store volatile i8 41, i8* %State76, align 1, !dbg !4112
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4113
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 12, !dbg !4114
  store volatile i8 32, i8* %Mode, align 2, !dbg !4115
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4116
  %ErrorCode77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 13, !dbg !4117
  store volatile i32 0, i32* %ErrorCode77, align 4, !dbg !4118
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4119
  %Instance78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %51, i32 0, i32 0, !dbg !4120
  %52 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance78, align 4, !dbg !4120
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %52, i32 0, i32 1, !dbg !4121
  %53 = load volatile i32, i32* %CR2, align 4, !dbg !4122
  %and79 = and i32 %53, -32769, !dbg !4122
  store volatile i32 %and79, i32* %CR2, align 4, !dbg !4122
  %54 = load i8*, i8** %pData.addr, align 4, !dbg !4123
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4124
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 2, !dbg !4125
  store i8* %54, i8** %pBuffPtr, align 4, !dbg !4126
  %56 = load i16, i16* %Size.addr, align 2, !dbg !4127
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4128
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 4, !dbg !4129
  store volatile i16 %56, i16* %XferCount, align 2, !dbg !4130
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4131
  %XferCount80 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 4, !dbg !4132
  %59 = load volatile i16, i16* %XferCount80, align 2, !dbg !4132
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4133
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 3, !dbg !4134
  store i16 %59, i16* %XferSize, align 4, !dbg !4135
  %61 = load i32, i32* %XferOptions.addr, align 4, !dbg !4136
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4137
  %XferOptions81 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 5, !dbg !4138
  store volatile i32 %61, i32* %XferOptions81, align 4, !dbg !4139
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4140
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %63, i32 0, i32 7, !dbg !4141
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4142
  %64 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4143
  %hdmatx82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %64, i32 0, i32 8, !dbg !4144
  %65 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx82, align 4, !dbg !4144
  %cmp83 = icmp ne %struct.__DMA_HandleTypeDef* %65, null, !dbg !4145
  br i1 %cmp83, label %if.then85, label %if.else96, !dbg !4143

if.then85:                                        ; preds = %if.end75
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4146
  %hdmatx86 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 8, !dbg !4147
  %67 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx86, align 4, !dbg !4147
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %67, i32 0, i32 5, !dbg !4148
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMASlaveTransmitCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !4149
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4150
  %hdmatx87 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %68, i32 0, i32 8, !dbg !4151
  %69 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx87, align 4, !dbg !4151
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %69, i32 0, i32 9, !dbg !4152
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !4153
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4154
  %hdmatx88 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %70, i32 0, i32 8, !dbg !4155
  %71 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx88, align 4, !dbg !4155
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %71, i32 0, i32 6, !dbg !4156
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !4157
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4158
  %hdmatx89 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 8, !dbg !4159
  %73 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx89, align 4, !dbg !4159
  %XferAbortCallback90 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %73, i32 0, i32 10, !dbg !4160
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback90, align 4, !dbg !4161
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4162
  %hdmatx91 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 8, !dbg !4163
  %75 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx91, align 4, !dbg !4163
  %76 = load i8*, i8** %pData.addr, align 4, !dbg !4164
  %77 = ptrtoint i8* %76 to i32, !dbg !4165
  %78 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4166
  %Instance92 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %78, i32 0, i32 0, !dbg !4167
  %79 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance92, align 4, !dbg !4167
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %79, i32 0, i32 10, !dbg !4168
  %80 = ptrtoint i32* %TXDR to i32, !dbg !4169
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4170
  %XferSize93 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %81, i32 0, i32 3, !dbg !4171
  %82 = load i16, i16* %XferSize93, align 4, !dbg !4171
  %conv94 = zext i16 %82 to i32, !dbg !4170
  %call95 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %75, i32 %77, i32 %80, i32 %conv94), !dbg !4172
  store i8 %call95, i8* %dmaxferstatus, align 1, !dbg !4173
  br label %if.end103, !dbg !4174

if.else96:                                        ; preds = %if.end75
  %83 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4175
  %State97 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %83, i32 0, i32 11, !dbg !4176
  store volatile i8 40, i8* %State97, align 1, !dbg !4177
  %84 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4178
  %Mode98 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %84, i32 0, i32 12, !dbg !4179
  store volatile i8 0, i8* %Mode98, align 2, !dbg !4180
  %85 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4181
  %ErrorCode99 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %85, i32 0, i32 13, !dbg !4182
  %86 = load volatile i32, i32* %ErrorCode99, align 4, !dbg !4183
  %or = or i32 %86, 128, !dbg !4183
  store volatile i32 %or, i32* %ErrorCode99, align 4, !dbg !4183
  br label %do.body100, !dbg !4184

do.body100:                                       ; preds = %if.else96
  %87 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4184
  %Lock101 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %87, i32 0, i32 10, !dbg !4184
  store i8 0, i8* %Lock101, align 4, !dbg !4184
  br label %do.end102, !dbg !4184

do.end102:                                        ; preds = %do.body100
  store i8 1, i8* %retval, align 1, !dbg !4185
  br label %return, !dbg !4185

if.end103:                                        ; preds = %if.then85
  %88 = load i8, i8* %dmaxferstatus, align 1, !dbg !4186
  %conv104 = zext i8 %88 to i32, !dbg !4186
  %cmp105 = icmp eq i32 %conv104, 0, !dbg !4187
  br i1 %cmp105, label %if.then107, label %if.else114, !dbg !4186

if.then107:                                       ; preds = %if.end103
  %89 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4188
  %XferSize108 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %89, i32 0, i32 3, !dbg !4189
  %90 = load i16, i16* %XferSize108, align 4, !dbg !4189
  %conv109 = zext i16 %90 to i32, !dbg !4188
  %91 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4190
  %XferCount110 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %91, i32 0, i32 4, !dbg !4191
  %92 = load volatile i16, i16* %XferCount110, align 2, !dbg !4192
  %conv111 = zext i16 %92 to i32, !dbg !4192
  %sub = sub nsw i32 %conv111, %conv109, !dbg !4192
  %conv112 = trunc i32 %sub to i16, !dbg !4192
  store volatile i16 %conv112, i16* %XferCount110, align 2, !dbg !4192
  %93 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4193
  %XferSize113 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %93, i32 0, i32 3, !dbg !4194
  store i16 0, i16* %XferSize113, align 4, !dbg !4195
  br label %if.end122, !dbg !4196

if.else114:                                       ; preds = %if.end103
  %94 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4197
  %State115 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %94, i32 0, i32 11, !dbg !4198
  store volatile i8 40, i8* %State115, align 1, !dbg !4199
  %95 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4200
  %Mode116 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %95, i32 0, i32 12, !dbg !4201
  store volatile i8 0, i8* %Mode116, align 2, !dbg !4202
  %96 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4203
  %ErrorCode117 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %96, i32 0, i32 13, !dbg !4204
  %97 = load volatile i32, i32* %ErrorCode117, align 4, !dbg !4205
  %or118 = or i32 %97, 16, !dbg !4205
  store volatile i32 %or118, i32* %ErrorCode117, align 4, !dbg !4205
  br label %do.body119, !dbg !4206

do.body119:                                       ; preds = %if.else114
  %98 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4206
  %Lock120 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %98, i32 0, i32 10, !dbg !4206
  store i8 0, i8* %Lock120, align 4, !dbg !4206
  br label %do.end121, !dbg !4206

do.end121:                                        ; preds = %do.body119
  store i8 1, i8* %retval, align 1, !dbg !4207
  br label %return, !dbg !4207

if.end122:                                        ; preds = %if.then107
  %99 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4208
  %Instance123 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %99, i32 0, i32 0, !dbg !4208
  %100 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance123, align 4, !dbg !4208
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %100, i32 0, i32 6, !dbg !4208
  %101 = load volatile i32, i32* %ISR, align 4, !dbg !4208
  %and124 = and i32 %101, 65536, !dbg !4208
  %shr = lshr i32 %and124, 16, !dbg !4208
  %conv125 = trunc i32 %shr to i8, !dbg !4208
  %conv126 = zext i8 %conv125 to i32, !dbg !4208
  %cmp127 = icmp eq i32 %conv126, 1, !dbg !4209
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !4208

if.then129:                                       ; preds = %if.end122
  %102 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4210
  %Instance130 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %102, i32 0, i32 0, !dbg !4210
  %103 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance130, align 4, !dbg !4210
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %103, i32 0, i32 7, !dbg !4210
  store volatile i32 8, i32* %ICR, align 4, !dbg !4210
  br label %if.end131, !dbg !4211

if.end131:                                        ; preds = %if.then129, %if.end122
  br label %do.body132, !dbg !4212

do.body132:                                       ; preds = %if.end131
  %104 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4212
  %Lock133 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %104, i32 0, i32 10, !dbg !4212
  store i8 0, i8* %Lock133, align 4, !dbg !4212
  br label %do.end134, !dbg !4212

do.end134:                                        ; preds = %do.body132
  %105 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4213
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %105, i16 zeroext -32768), !dbg !4214
  %106 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4215
  %Instance135 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %106, i32 0, i32 0, !dbg !4216
  %107 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance135, align 4, !dbg !4216
  %CR1136 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %107, i32 0, i32 0, !dbg !4217
  %108 = load volatile i32, i32* %CR1136, align 4, !dbg !4218
  %or137 = or i32 %108, 16384, !dbg !4218
  store volatile i32 %or137, i32* %CR1136, align 4, !dbg !4218
  store i8 0, i8* %retval, align 1, !dbg !4219
  br label %return, !dbg !4219

if.else138:                                       ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !4220
  br label %return, !dbg !4220

return:                                           ; preds = %if.else138, %do.end134, %do.end121, %do.end102, %if.then11, %if.then7
  %109 = load i8, i8* %retval, align 1, !dbg !4221
  ret i8 %109, !dbg !4221
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Seq_Receive_IT(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size, i32 %XferOptions) #0 !dbg !4222 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %XferOptions.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %XferOptions, i32* %XferOptions.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4223
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !4224
  %1 = load volatile i8, i8* %State, align 1, !dbg !4224
  %conv = zext i8 %1 to i32, !dbg !4225
  %and = and i32 %conv, 40, !dbg !4226
  %cmp = icmp eq i32 %and, 40, !dbg !4227
  br i1 %cmp, label %if.then, label %if.else60, !dbg !4228

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !4229
  %cmp2 = icmp eq i8* %2, null, !dbg !4230
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !4231

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !4232
  %conv4 = zext i16 %3 to i32, !dbg !4232
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !4233
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !4234

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4235
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !4236
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !4237
  store i8 1, i8* %retval, align 1, !dbg !4238
  br label %return, !dbg !4238

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4239
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %5, i16 zeroext -32766), !dbg !4240
  br label %do.body, !dbg !4241

do.body:                                          ; preds = %if.end
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4241
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 10, !dbg !4241
  %7 = load i8, i8* %Lock, align 4, !dbg !4241
  %conv8 = zext i8 %7 to i32, !dbg !4241
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !4241
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !4241

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !4241
  br label %return, !dbg !4241

if.else:                                          ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4241
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 10, !dbg !4241
  store i8 1, i8* %Lock12, align 4, !dbg !4241
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !4241

do.end:                                           ; preds = %if.end13
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4242
  %State14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !4243
  %10 = load volatile i8, i8* %State14, align 1, !dbg !4243
  %conv15 = zext i8 %10 to i32, !dbg !4242
  %cmp16 = icmp eq i32 %conv15, 41, !dbg !4244
  br i1 %cmp16, label %if.then18, label %if.end41, !dbg !4242

if.then18:                                        ; preds = %do.end
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4245
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %11, i16 zeroext 1), !dbg !4246
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4247
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 0, !dbg !4248
  %13 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !4248
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %13, i32 0, i32 0, !dbg !4249
  %14 = load volatile i32, i32* %CR1, align 4, !dbg !4249
  %and19 = and i32 %14, 16384, !dbg !4250
  %cmp20 = icmp eq i32 %and19, 16384, !dbg !4251
  br i1 %cmp20, label %if.then22, label %if.end40, !dbg !4252

if.then22:                                        ; preds = %if.then18
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4253
  %Instance23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 0, !dbg !4254
  %16 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance23, align 4, !dbg !4254
  %CR124 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %16, i32 0, i32 0, !dbg !4255
  %17 = load volatile i32, i32* %CR124, align 4, !dbg !4256
  %and25 = and i32 %17, -16385, !dbg !4256
  store volatile i32 %and25, i32* %CR124, align 4, !dbg !4256
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4257
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 8, !dbg !4258
  %19 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !4258
  %cmp26 = icmp ne %struct.__DMA_HandleTypeDef* %19, null, !dbg !4259
  br i1 %cmp26, label %if.then28, label %if.end39, !dbg !4257

if.then28:                                        ; preds = %if.then22
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4260
  %hdmatx29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 8, !dbg !4261
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx29, align 4, !dbg !4261
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 10, !dbg !4262
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAAbort, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !4263
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4264
  %hdmatx30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 8, !dbg !4265
  %23 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx30, align 4, !dbg !4265
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* %23), !dbg !4266
  %conv31 = zext i8 %call to i32, !dbg !4266
  %cmp32 = icmp ne i32 %conv31, 0, !dbg !4267
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !4266

if.then34:                                        ; preds = %if.then28
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4268
  %hdmatx35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 8, !dbg !4269
  %25 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx35, align 4, !dbg !4269
  %XferAbortCallback36 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %25, i32 0, i32 10, !dbg !4270
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback36, align 4, !dbg !4270
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4271
  %hdmatx37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 8, !dbg !4272
  %28 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx37, align 4, !dbg !4272
  call arm_aapcs_vfpcc void %26(%struct.__DMA_HandleTypeDef* %28), !dbg !4268
  br label %if.end38, !dbg !4273

if.end38:                                         ; preds = %if.then34, %if.then28
  br label %if.end39, !dbg !4274

if.end39:                                         ; preds = %if.end38, %if.then22
  br label %if.end40, !dbg !4275

if.end40:                                         ; preds = %if.end39, %if.then18
  br label %if.end41, !dbg !4276

if.end41:                                         ; preds = %if.end40, %do.end
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4277
  %State42 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 11, !dbg !4278
  store volatile i8 42, i8* %State42, align 1, !dbg !4279
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4280
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 12, !dbg !4281
  store volatile i8 32, i8* %Mode, align 2, !dbg !4282
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4283
  %ErrorCode43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 13, !dbg !4284
  store volatile i32 0, i32* %ErrorCode43, align 4, !dbg !4285
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4286
  %Instance44 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %32, i32 0, i32 0, !dbg !4287
  %33 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance44, align 4, !dbg !4287
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %33, i32 0, i32 1, !dbg !4288
  %34 = load volatile i32, i32* %CR2, align 4, !dbg !4289
  %and45 = and i32 %34, -32769, !dbg !4289
  store volatile i32 %and45, i32* %CR2, align 4, !dbg !4289
  %35 = load i8*, i8** %pData.addr, align 4, !dbg !4290
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4291
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 2, !dbg !4292
  store i8* %35, i8** %pBuffPtr, align 4, !dbg !4293
  %37 = load i16, i16* %Size.addr, align 2, !dbg !4294
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4295
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 4, !dbg !4296
  store volatile i16 %37, i16* %XferCount, align 2, !dbg !4297
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4298
  %XferCount46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 4, !dbg !4299
  %40 = load volatile i16, i16* %XferCount46, align 2, !dbg !4299
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4300
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 3, !dbg !4301
  store i16 %40, i16* %XferSize, align 4, !dbg !4302
  %42 = load i32, i32* %XferOptions.addr, align 4, !dbg !4303
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4304
  %XferOptions47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 5, !dbg !4305
  store volatile i32 %42, i32* %XferOptions47, align 4, !dbg !4306
  %44 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4307
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %44, i32 0, i32 7, !dbg !4308
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4309
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4310
  %Instance48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 0, !dbg !4310
  %46 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance48, align 4, !dbg !4310
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %46, i32 0, i32 6, !dbg !4310
  %47 = load volatile i32, i32* %ISR, align 4, !dbg !4310
  %and49 = and i32 %47, 65536, !dbg !4310
  %shr = lshr i32 %and49, 16, !dbg !4310
  %conv50 = trunc i32 %shr to i8, !dbg !4310
  %conv51 = zext i8 %conv50 to i32, !dbg !4310
  %cmp52 = icmp eq i32 %conv51, 0, !dbg !4311
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !4310

if.then54:                                        ; preds = %if.end41
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4312
  %Instance55 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 0, !dbg !4312
  %49 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance55, align 4, !dbg !4312
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %49, i32 0, i32 7, !dbg !4312
  store volatile i32 8, i32* %ICR, align 4, !dbg !4312
  br label %if.end56, !dbg !4313

if.end56:                                         ; preds = %if.then54, %if.end41
  br label %do.body57, !dbg !4314

do.body57:                                        ; preds = %if.end56
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4314
  %Lock58 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 10, !dbg !4314
  store i8 0, i8* %Lock58, align 4, !dbg !4314
  br label %do.end59, !dbg !4314

do.end59:                                         ; preds = %do.body57
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4315
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %51, i16 zeroext -32766), !dbg !4316
  store i8 0, i8* %retval, align 1, !dbg !4317
  br label %return, !dbg !4317

if.else60:                                        ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !4318
  br label %return, !dbg !4318

return:                                           ; preds = %if.else60, %do.end59, %if.then11, %if.then7
  %52 = load i8, i8* %retval, align 1, !dbg !4319
  ret i8 %52, !dbg !4319
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Slave_Seq_Receive_DMA(%struct.__I2C_HandleTypeDef* %hi2c, i8* %pData, i16 zeroext %Size, i32 %XferOptions) #0 !dbg !4320 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %pData.addr = alloca i8*, align 4
  %Size.addr = alloca i16, align 2
  %XferOptions.addr = alloca i32, align 4
  %dmaxferstatus = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8* %pData, i8** %pData.addr, align 4
  store i16 %Size, i16* %Size.addr, align 2
  store i32 %XferOptions, i32* %XferOptions.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4321
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !4322
  %1 = load volatile i8, i8* %State, align 1, !dbg !4322
  %conv = zext i8 %1 to i32, !dbg !4323
  %and = and i32 %conv, 40, !dbg !4324
  %cmp = icmp eq i32 %and, 40, !dbg !4325
  br i1 %cmp, label %if.then, label %if.else138, !dbg !4326

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pData.addr, align 4, !dbg !4327
  %cmp2 = icmp eq i8* %2, null, !dbg !4328
  br i1 %cmp2, label %if.then7, label %lor.lhs.false, !dbg !4329

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i16, i16* %Size.addr, align 2, !dbg !4330
  %conv4 = zext i16 %3 to i32, !dbg !4330
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !4331
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !4332

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4333
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 13, !dbg !4334
  store volatile i32 512, i32* %ErrorCode, align 4, !dbg !4335
  store i8 1, i8* %retval, align 1, !dbg !4336
  br label %return, !dbg !4336

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4337
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %5, i16 zeroext -32766), !dbg !4338
  br label %do.body, !dbg !4339

do.body:                                          ; preds = %if.end
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4339
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 10, !dbg !4339
  %7 = load i8, i8* %Lock, align 4, !dbg !4339
  %conv8 = zext i8 %7 to i32, !dbg !4339
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !4339
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !4339

if.then11:                                        ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !4339
  br label %return, !dbg !4339

if.else:                                          ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4339
  %Lock12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 10, !dbg !4339
  store i8 1, i8* %Lock12, align 4, !dbg !4339
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %do.end, !dbg !4339

do.end:                                           ; preds = %if.end13
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4340
  %State14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !4341
  %10 = load volatile i8, i8* %State14, align 1, !dbg !4341
  %conv15 = zext i8 %10 to i32, !dbg !4340
  %cmp16 = icmp eq i32 %conv15, 41, !dbg !4342
  br i1 %cmp16, label %if.then18, label %if.else41, !dbg !4340

if.then18:                                        ; preds = %do.end
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4343
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %11, i16 zeroext 1), !dbg !4344
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4345
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 0, !dbg !4346
  %13 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !4346
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %13, i32 0, i32 0, !dbg !4347
  %14 = load volatile i32, i32* %CR1, align 4, !dbg !4347
  %and19 = and i32 %14, 16384, !dbg !4348
  %cmp20 = icmp eq i32 %and19, 16384, !dbg !4349
  br i1 %cmp20, label %if.then22, label %if.end40, !dbg !4350

if.then22:                                        ; preds = %if.then18
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4351
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 8, !dbg !4352
  %16 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !4352
  %cmp23 = icmp ne %struct.__DMA_HandleTypeDef* %16, null, !dbg !4353
  br i1 %cmp23, label %if.then25, label %if.end39, !dbg !4351

if.then25:                                        ; preds = %if.then22
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4354
  %Instance26 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 0, !dbg !4355
  %18 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance26, align 4, !dbg !4355
  %CR127 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %18, i32 0, i32 0, !dbg !4356
  %19 = load volatile i32, i32* %CR127, align 4, !dbg !4357
  %and28 = and i32 %19, -16385, !dbg !4357
  store volatile i32 %and28, i32* %CR127, align 4, !dbg !4357
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4358
  %hdmatx29 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 8, !dbg !4359
  %21 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx29, align 4, !dbg !4359
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %21, i32 0, i32 10, !dbg !4360
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAAbort, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !4361
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4362
  %hdmatx30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 8, !dbg !4363
  %23 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx30, align 4, !dbg !4363
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* %23), !dbg !4364
  %conv31 = zext i8 %call to i32, !dbg !4364
  %cmp32 = icmp ne i32 %conv31, 0, !dbg !4365
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !4364

if.then34:                                        ; preds = %if.then25
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4366
  %hdmatx35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 8, !dbg !4367
  %25 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx35, align 4, !dbg !4367
  %XferAbortCallback36 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %25, i32 0, i32 10, !dbg !4368
  %26 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback36, align 4, !dbg !4368
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4369
  %hdmatx37 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 8, !dbg !4370
  %28 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx37, align 4, !dbg !4370
  call arm_aapcs_vfpcc void %26(%struct.__DMA_HandleTypeDef* %28), !dbg !4366
  br label %if.end38, !dbg !4371

if.end38:                                         ; preds = %if.then34, %if.then25
  br label %if.end39, !dbg !4372

if.end39:                                         ; preds = %if.end38, %if.then22
  br label %if.end40, !dbg !4373

if.end40:                                         ; preds = %if.end39, %if.then18
  br label %if.end75, !dbg !4374

if.else41:                                        ; preds = %do.end
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4375
  %State42 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 11, !dbg !4376
  %30 = load volatile i8, i8* %State42, align 1, !dbg !4376
  %conv43 = zext i8 %30 to i32, !dbg !4375
  %cmp44 = icmp eq i32 %conv43, 42, !dbg !4377
  br i1 %cmp44, label %if.then46, label %if.else73, !dbg !4375

if.then46:                                        ; preds = %if.else41
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4378
  %Instance47 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 0, !dbg !4379
  %32 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance47, align 4, !dbg !4379
  %CR148 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %32, i32 0, i32 0, !dbg !4380
  %33 = load volatile i32, i32* %CR148, align 4, !dbg !4380
  %and49 = and i32 %33, 32768, !dbg !4381
  %cmp50 = icmp eq i32 %and49, 32768, !dbg !4382
  br i1 %cmp50, label %if.then52, label %if.end72, !dbg !4383

if.then52:                                        ; preds = %if.then46
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4384
  %Instance53 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 0, !dbg !4385
  %35 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance53, align 4, !dbg !4385
  %CR154 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %35, i32 0, i32 0, !dbg !4386
  %36 = load volatile i32, i32* %CR154, align 4, !dbg !4387
  %and55 = and i32 %36, -32769, !dbg !4387
  store volatile i32 %and55, i32* %CR154, align 4, !dbg !4387
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4388
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 9, !dbg !4389
  %38 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !4389
  %cmp56 = icmp ne %struct.__DMA_HandleTypeDef* %38, null, !dbg !4390
  br i1 %cmp56, label %if.then58, label %if.end71, !dbg !4388

if.then58:                                        ; preds = %if.then52
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4391
  %hdmarx59 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 9, !dbg !4392
  %40 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx59, align 4, !dbg !4392
  %XferAbortCallback60 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %40, i32 0, i32 10, !dbg !4393
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAAbort, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback60, align 4, !dbg !4394
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4395
  %hdmarx61 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 9, !dbg !4396
  %42 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx61, align 4, !dbg !4396
  %call62 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* %42), !dbg !4397
  %conv63 = zext i8 %call62 to i32, !dbg !4397
  %cmp64 = icmp ne i32 %conv63, 0, !dbg !4398
  br i1 %cmp64, label %if.then66, label %if.end70, !dbg !4397

if.then66:                                        ; preds = %if.then58
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4399
  %hdmarx67 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 9, !dbg !4400
  %44 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx67, align 4, !dbg !4400
  %XferAbortCallback68 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %44, i32 0, i32 10, !dbg !4401
  %45 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback68, align 4, !dbg !4401
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4402
  %hdmarx69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %46, i32 0, i32 9, !dbg !4403
  %47 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx69, align 4, !dbg !4403
  call arm_aapcs_vfpcc void %45(%struct.__DMA_HandleTypeDef* %47), !dbg !4399
  br label %if.end70, !dbg !4404

if.end70:                                         ; preds = %if.then66, %if.then58
  br label %if.end71, !dbg !4405

if.end71:                                         ; preds = %if.end70, %if.then52
  br label %if.end72, !dbg !4406

if.end72:                                         ; preds = %if.end71, %if.then46
  br label %if.end74, !dbg !4407

if.else73:                                        ; preds = %if.else41
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.end72
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end40
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4408
  %State76 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 11, !dbg !4409
  store volatile i8 42, i8* %State76, align 1, !dbg !4410
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4411
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 12, !dbg !4412
  store volatile i8 32, i8* %Mode, align 2, !dbg !4413
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4414
  %ErrorCode77 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 13, !dbg !4415
  store volatile i32 0, i32* %ErrorCode77, align 4, !dbg !4416
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4417
  %Instance78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %51, i32 0, i32 0, !dbg !4418
  %52 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance78, align 4, !dbg !4418
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %52, i32 0, i32 1, !dbg !4419
  %53 = load volatile i32, i32* %CR2, align 4, !dbg !4420
  %and79 = and i32 %53, -32769, !dbg !4420
  store volatile i32 %and79, i32* %CR2, align 4, !dbg !4420
  %54 = load i8*, i8** %pData.addr, align 4, !dbg !4421
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4422
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 2, !dbg !4423
  store i8* %54, i8** %pBuffPtr, align 4, !dbg !4424
  %56 = load i16, i16* %Size.addr, align 2, !dbg !4425
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4426
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 4, !dbg !4427
  store volatile i16 %56, i16* %XferCount, align 2, !dbg !4428
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4429
  %XferCount80 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 4, !dbg !4430
  %59 = load volatile i16, i16* %XferCount80, align 2, !dbg !4430
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4431
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 3, !dbg !4432
  store i16 %59, i16* %XferSize, align 4, !dbg !4433
  %61 = load i32, i32* %XferOptions.addr, align 4, !dbg !4434
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4435
  %XferOptions81 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %62, i32 0, i32 5, !dbg !4436
  store volatile i32 %61, i32* %XferOptions81, align 4, !dbg !4437
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4438
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %63, i32 0, i32 7, !dbg !4439
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_DMA, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4440
  %64 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4441
  %hdmarx82 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %64, i32 0, i32 9, !dbg !4442
  %65 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx82, align 4, !dbg !4442
  %cmp83 = icmp ne %struct.__DMA_HandleTypeDef* %65, null, !dbg !4443
  br i1 %cmp83, label %if.then85, label %if.else96, !dbg !4441

if.then85:                                        ; preds = %if.end75
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4444
  %hdmarx86 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %66, i32 0, i32 9, !dbg !4445
  %67 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx86, align 4, !dbg !4445
  %XferCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %67, i32 0, i32 5, !dbg !4446
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMASlaveReceiveCplt, void (%struct.__DMA_HandleTypeDef*)** %XferCpltCallback, align 4, !dbg !4447
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4448
  %hdmarx87 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %68, i32 0, i32 9, !dbg !4449
  %69 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx87, align 4, !dbg !4449
  %XferErrorCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %69, i32 0, i32 9, !dbg !4450
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAError, void (%struct.__DMA_HandleTypeDef*)** %XferErrorCallback, align 4, !dbg !4451
  %70 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4452
  %hdmarx88 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %70, i32 0, i32 9, !dbg !4453
  %71 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx88, align 4, !dbg !4453
  %XferHalfCpltCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %71, i32 0, i32 6, !dbg !4454
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferHalfCpltCallback, align 4, !dbg !4455
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4456
  %hdmarx89 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 9, !dbg !4457
  %73 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx89, align 4, !dbg !4457
  %XferAbortCallback90 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %73, i32 0, i32 10, !dbg !4458
  store void (%struct.__DMA_HandleTypeDef*)* null, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback90, align 4, !dbg !4459
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4460
  %hdmarx91 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 9, !dbg !4461
  %75 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx91, align 4, !dbg !4461
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4462
  %Instance92 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %76, i32 0, i32 0, !dbg !4463
  %77 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance92, align 4, !dbg !4463
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %77, i32 0, i32 9, !dbg !4464
  %78 = ptrtoint i32* %RXDR to i32, !dbg !4465
  %79 = load i8*, i8** %pData.addr, align 4, !dbg !4466
  %80 = ptrtoint i8* %79 to i32, !dbg !4467
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4468
  %XferSize93 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %81, i32 0, i32 3, !dbg !4469
  %82 = load i16, i16* %XferSize93, align 4, !dbg !4469
  %conv94 = zext i16 %82 to i32, !dbg !4468
  %call95 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Start_IT(%struct.__DMA_HandleTypeDef* %75, i32 %78, i32 %80, i32 %conv94), !dbg !4470
  store i8 %call95, i8* %dmaxferstatus, align 1, !dbg !4471
  br label %if.end103, !dbg !4472

if.else96:                                        ; preds = %if.end75
  %83 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4473
  %State97 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %83, i32 0, i32 11, !dbg !4474
  store volatile i8 40, i8* %State97, align 1, !dbg !4475
  %84 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4476
  %Mode98 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %84, i32 0, i32 12, !dbg !4477
  store volatile i8 0, i8* %Mode98, align 2, !dbg !4478
  %85 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4479
  %ErrorCode99 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %85, i32 0, i32 13, !dbg !4480
  %86 = load volatile i32, i32* %ErrorCode99, align 4, !dbg !4481
  %or = or i32 %86, 128, !dbg !4481
  store volatile i32 %or, i32* %ErrorCode99, align 4, !dbg !4481
  br label %do.body100, !dbg !4482

do.body100:                                       ; preds = %if.else96
  %87 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4482
  %Lock101 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %87, i32 0, i32 10, !dbg !4482
  store i8 0, i8* %Lock101, align 4, !dbg !4482
  br label %do.end102, !dbg !4482

do.end102:                                        ; preds = %do.body100
  store i8 1, i8* %retval, align 1, !dbg !4483
  br label %return, !dbg !4483

if.end103:                                        ; preds = %if.then85
  %88 = load i8, i8* %dmaxferstatus, align 1, !dbg !4484
  %conv104 = zext i8 %88 to i32, !dbg !4484
  %cmp105 = icmp eq i32 %conv104, 0, !dbg !4485
  br i1 %cmp105, label %if.then107, label %if.else114, !dbg !4484

if.then107:                                       ; preds = %if.end103
  %89 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4486
  %XferSize108 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %89, i32 0, i32 3, !dbg !4487
  %90 = load i16, i16* %XferSize108, align 4, !dbg !4487
  %conv109 = zext i16 %90 to i32, !dbg !4486
  %91 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4488
  %XferCount110 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %91, i32 0, i32 4, !dbg !4489
  %92 = load volatile i16, i16* %XferCount110, align 2, !dbg !4490
  %conv111 = zext i16 %92 to i32, !dbg !4490
  %sub = sub nsw i32 %conv111, %conv109, !dbg !4490
  %conv112 = trunc i32 %sub to i16, !dbg !4490
  store volatile i16 %conv112, i16* %XferCount110, align 2, !dbg !4490
  %93 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4491
  %XferSize113 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %93, i32 0, i32 3, !dbg !4492
  store i16 0, i16* %XferSize113, align 4, !dbg !4493
  br label %if.end122, !dbg !4494

if.else114:                                       ; preds = %if.end103
  %94 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4495
  %State115 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %94, i32 0, i32 11, !dbg !4496
  store volatile i8 40, i8* %State115, align 1, !dbg !4497
  %95 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4498
  %Mode116 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %95, i32 0, i32 12, !dbg !4499
  store volatile i8 0, i8* %Mode116, align 2, !dbg !4500
  %96 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4501
  %ErrorCode117 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %96, i32 0, i32 13, !dbg !4502
  %97 = load volatile i32, i32* %ErrorCode117, align 4, !dbg !4503
  %or118 = or i32 %97, 16, !dbg !4503
  store volatile i32 %or118, i32* %ErrorCode117, align 4, !dbg !4503
  br label %do.body119, !dbg !4504

do.body119:                                       ; preds = %if.else114
  %98 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4504
  %Lock120 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %98, i32 0, i32 10, !dbg !4504
  store i8 0, i8* %Lock120, align 4, !dbg !4504
  br label %do.end121, !dbg !4504

do.end121:                                        ; preds = %do.body119
  store i8 1, i8* %retval, align 1, !dbg !4505
  br label %return, !dbg !4505

if.end122:                                        ; preds = %if.then107
  %99 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4506
  %Instance123 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %99, i32 0, i32 0, !dbg !4506
  %100 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance123, align 4, !dbg !4506
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %100, i32 0, i32 6, !dbg !4506
  %101 = load volatile i32, i32* %ISR, align 4, !dbg !4506
  %and124 = and i32 %101, 65536, !dbg !4506
  %shr = lshr i32 %and124, 16, !dbg !4506
  %conv125 = trunc i32 %shr to i8, !dbg !4506
  %conv126 = zext i8 %conv125 to i32, !dbg !4506
  %cmp127 = icmp eq i32 %conv126, 0, !dbg !4507
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !4506

if.then129:                                       ; preds = %if.end122
  %102 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4508
  %Instance130 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %102, i32 0, i32 0, !dbg !4508
  %103 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance130, align 4, !dbg !4508
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %103, i32 0, i32 7, !dbg !4508
  store volatile i32 8, i32* %ICR, align 4, !dbg !4508
  br label %if.end131, !dbg !4509

if.end131:                                        ; preds = %if.then129, %if.end122
  br label %do.body132, !dbg !4510

do.body132:                                       ; preds = %if.end131
  %104 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4510
  %Lock133 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %104, i32 0, i32 10, !dbg !4510
  store i8 0, i8* %Lock133, align 4, !dbg !4510
  br label %do.end134, !dbg !4510

do.end134:                                        ; preds = %do.body132
  %105 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4511
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %105, i16 zeroext -32766), !dbg !4512
  %106 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4513
  %Instance135 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %106, i32 0, i32 0, !dbg !4514
  %107 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance135, align 4, !dbg !4514
  %CR1136 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %107, i32 0, i32 0, !dbg !4515
  %108 = load volatile i32, i32* %CR1136, align 4, !dbg !4516
  %or137 = or i32 %108, 32768, !dbg !4516
  store volatile i32 %or137, i32* %CR1136, align 4, !dbg !4516
  store i8 0, i8* %retval, align 1, !dbg !4517
  br label %return, !dbg !4517

if.else138:                                       ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !4518
  br label %return, !dbg !4518

return:                                           ; preds = %if.else138, %do.end134, %do.end121, %do.end102, %if.then11, %if.then7
  %109 = load i8, i8* %retval, align 1, !dbg !4519
  ret i8 %109, !dbg !4519
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_EnableListen_IT(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4520 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4521
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !4522
  %1 = load volatile i8, i8* %State, align 1, !dbg !4522
  %conv = zext i8 %1 to i32, !dbg !4521
  %cmp = icmp eq i32 %conv, 32, !dbg !4523
  br i1 %cmp, label %if.then, label %if.else, !dbg !4521

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4524
  %State2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 11, !dbg !4525
  store volatile i8 40, i8* %State2, align 1, !dbg !4526
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4527
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 7, !dbg !4528
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4529
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4530
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %4, i16 zeroext -32768), !dbg !4531
  store i8 0, i8* %retval, align 1, !dbg !4532
  br label %return, !dbg !4532

if.else:                                          ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !4533
  br label %return, !dbg !4533

return:                                           ; preds = %if.else, %if.then
  %5 = load i8, i8* %retval, align 1, !dbg !4534
  ret i8 %5, !dbg !4534
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_DisableListen_IT(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4535 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %tmp = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4536
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !4537
  %1 = load volatile i8, i8* %State, align 1, !dbg !4537
  %conv = zext i8 %1 to i32, !dbg !4536
  %cmp = icmp eq i32 %conv, 40, !dbg !4538
  br i1 %cmp, label %if.then, label %if.else, !dbg !4536

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4539
  %State2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 11, !dbg !4540
  %3 = load volatile i8, i8* %State2, align 1, !dbg !4540
  %conv3 = zext i8 %3 to i32, !dbg !4541
  %and = and i32 %conv3, 3, !dbg !4542
  store i32 %and, i32* %tmp, align 4, !dbg !4543
  %4 = load i32, i32* %tmp, align 4, !dbg !4544
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4545
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 12, !dbg !4546
  %6 = load volatile i8, i8* %Mode, align 2, !dbg !4546
  %conv4 = zext i8 %6 to i32, !dbg !4547
  %or = or i32 %4, %conv4, !dbg !4548
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4549
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 6, !dbg !4550
  store volatile i32 %or, i32* %PreviousState, align 4, !dbg !4551
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4552
  %State5 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 11, !dbg !4553
  store volatile i8 32, i8* %State5, align 1, !dbg !4554
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4555
  %Mode6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 12, !dbg !4556
  store volatile i8 0, i8* %Mode6, align 2, !dbg !4557
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4558
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 7, !dbg !4559
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4560
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4561
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %11, i16 zeroext -32768), !dbg !4562
  store i8 0, i8* %retval, align 1, !dbg !4563
  br label %return, !dbg !4563

if.else:                                          ; preds = %entry
  store i8 2, i8* %retval, align 1, !dbg !4564
  br label %return, !dbg !4564

return:                                           ; preds = %if.else, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !4565
  ret i8 %12, !dbg !4565
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_Master_Abort_IT(%struct.__I2C_HandleTypeDef* %hi2c, i16 zeroext %DevAddress) #0 !dbg !4566 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %DevAddress.addr = alloca i16, align 2
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i16 %DevAddress, i16* %DevAddress.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4567
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 12, !dbg !4568
  %1 = load volatile i8, i8* %Mode, align 2, !dbg !4568
  %conv = zext i8 %1 to i32, !dbg !4567
  %cmp = icmp eq i32 %conv, 16, !dbg !4569
  br i1 %cmp, label %if.then, label %if.else25, !dbg !4567

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !4570

do.body:                                          ; preds = %if.then
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4570
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 10, !dbg !4570
  %3 = load i8, i8* %Lock, align 4, !dbg !4570
  %conv2 = zext i8 %3 to i32, !dbg !4570
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !4570
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !4570

if.then5:                                         ; preds = %do.body
  store i8 2, i8* %retval, align 1, !dbg !4570
  br label %return, !dbg !4570

if.else:                                          ; preds = %do.body
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4570
  %Lock6 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !4570
  store i8 1, i8* %Lock6, align 4, !dbg !4570
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.end, !dbg !4570

do.end:                                           ; preds = %if.end
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4571
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 11, !dbg !4572
  %6 = load volatile i8, i8* %State, align 1, !dbg !4572
  %conv7 = zext i8 %6 to i32, !dbg !4571
  %cmp8 = icmp eq i32 %conv7, 33, !dbg !4573
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !4571

if.then10:                                        ; preds = %do.end
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4574
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %7, i16 zeroext 1), !dbg !4575
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4576
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 6, !dbg !4577
  store volatile i32 17, i32* %PreviousState, align 4, !dbg !4578
  br label %if.end20, !dbg !4579

if.else11:                                        ; preds = %do.end
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4580
  %State12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !4581
  %10 = load volatile i8, i8* %State12, align 1, !dbg !4581
  %conv13 = zext i8 %10 to i32, !dbg !4580
  %cmp14 = icmp eq i32 %conv13, 34, !dbg !4582
  br i1 %cmp14, label %if.then16, label %if.else18, !dbg !4580

if.then16:                                        ; preds = %if.else11
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4583
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %11, i16 zeroext 2), !dbg !4584
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4585
  %PreviousState17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 6, !dbg !4586
  store volatile i32 18, i32* %PreviousState17, align 4, !dbg !4587
  br label %if.end19, !dbg !4588

if.else18:                                        ; preds = %if.else11
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then16
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then10
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4589
  %State21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 11, !dbg !4590
  store volatile i8 96, i8* %State21, align 1, !dbg !4591
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4592
  %15 = load i16, i16* %DevAddress.addr, align 2, !dbg !4593
  call arm_aapcs_vfpcc void @I2C_TransferConfig(%struct.__I2C_HandleTypeDef* %14, i16 zeroext %15, i8 zeroext 1, i32 33554432, i32 -2147467264), !dbg !4594
  br label %do.body22, !dbg !4595

do.body22:                                        ; preds = %if.end20
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4595
  %Lock23 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 10, !dbg !4595
  store i8 0, i8* %Lock23, align 4, !dbg !4595
  br label %do.end24, !dbg !4595

do.end24:                                         ; preds = %do.body22
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4596
  call arm_aapcs_vfpcc void @I2C_Enable_IRQ(%struct.__I2C_HandleTypeDef* %17, i16 zeroext 32), !dbg !4597
  store i8 0, i8* %retval, align 1, !dbg !4598
  br label %return, !dbg !4598

if.else25:                                        ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !4599
  br label %return, !dbg !4599

return:                                           ; preds = %if.else25, %do.end24, %if.then5
  %18 = load i8, i8* %retval, align 1, !dbg !4600
  ret i8 %18, !dbg !4600
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc void @HAL_I2C_EV_IRQHandler(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4601 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %itflags = alloca i32, align 4
  %itsources = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4602
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !4602
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !4602
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 6, !dbg !4602
  %2 = load volatile i32, i32* %ISR, align 4, !dbg !4602
  store i32 %2, i32* %itflags, align 4, !dbg !4603
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4604
  %Instance1 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 0, !dbg !4604
  %4 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance1, align 4, !dbg !4604
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %4, i32 0, i32 0, !dbg !4604
  %5 = load volatile i32, i32* %CR1, align 4, !dbg !4604
  store i32 %5, i32* %itsources, align 4, !dbg !4605
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4606
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 7, !dbg !4607
  %7 = load i8 (%struct.__I2C_HandleTypeDef*, i32, i32)*, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4607
  %cmp = icmp ne i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* %7, null, !dbg !4608
  br i1 %cmp, label %if.then, label %if.end, !dbg !4606

if.then:                                          ; preds = %entry
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4609
  %XferISR2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %8, i32 0, i32 7, !dbg !4610
  %9 = load i8 (%struct.__I2C_HandleTypeDef*, i32, i32)*, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR2, align 4, !dbg !4610
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4611
  %11 = load i32, i32* %itflags, align 4, !dbg !4612
  %12 = load i32, i32* %itsources, align 4, !dbg !4613
  %call = call arm_aapcs_vfpcc zeroext i8 %9(%struct.__I2C_HandleTypeDef* %10, i32 %11, i32 %12), !dbg !4609
  br label %if.end, !dbg !4614

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4615
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc void @HAL_I2C_ER_IRQHandler(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4616 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %itflags = alloca i32, align 4
  %itsources = alloca i32, align 4
  %tmperror = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4617
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !4617
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !4617
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 6, !dbg !4617
  %2 = load volatile i32, i32* %ISR, align 4, !dbg !4617
  store i32 %2, i32* %itflags, align 4, !dbg !4618
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4619
  %Instance1 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 0, !dbg !4619
  %4 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance1, align 4, !dbg !4619
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %4, i32 0, i32 0, !dbg !4619
  %5 = load volatile i32, i32* %CR1, align 4, !dbg !4619
  store i32 %5, i32* %itsources, align 4, !dbg !4620
  %6 = load i32, i32* %itflags, align 4, !dbg !4621
  %and = and i32 %6, 256, !dbg !4621
  %cmp = icmp eq i32 %and, 256, !dbg !4621
  %7 = zext i1 %cmp to i64, !dbg !4621
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !4621
  %cmp2 = icmp ne i32 %cond, 0, !dbg !4622
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !4623

land.lhs.true:                                    ; preds = %entry
  %8 = load i32, i32* %itsources, align 4, !dbg !4624
  %and3 = and i32 %8, 128, !dbg !4624
  %cmp4 = icmp eq i32 %and3, 128, !dbg !4624
  %9 = zext i1 %cmp4 to i64, !dbg !4624
  %cond5 = select i1 %cmp4, i32 1, i32 0, !dbg !4624
  %cmp6 = icmp ne i32 %cond5, 0, !dbg !4625
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4626

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4627
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 13, !dbg !4628
  %11 = load volatile i32, i32* %ErrorCode, align 4, !dbg !4629
  %or = or i32 %11, 1, !dbg !4629
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !4629
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4630
  %Instance7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 0, !dbg !4630
  %13 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance7, align 4, !dbg !4630
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %13, i32 0, i32 7, !dbg !4630
  store volatile i32 256, i32* %ICR, align 4, !dbg !4630
  br label %if.end, !dbg !4631

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %14 = load i32, i32* %itflags, align 4, !dbg !4632
  %and8 = and i32 %14, 1024, !dbg !4632
  %cmp9 = icmp eq i32 %and8, 1024, !dbg !4632
  %15 = zext i1 %cmp9 to i64, !dbg !4632
  %cond10 = select i1 %cmp9, i32 1, i32 0, !dbg !4632
  %cmp11 = icmp ne i32 %cond10, 0, !dbg !4633
  br i1 %cmp11, label %land.lhs.true12, label %if.end22, !dbg !4634

land.lhs.true12:                                  ; preds = %if.end
  %16 = load i32, i32* %itsources, align 4, !dbg !4635
  %and13 = and i32 %16, 128, !dbg !4635
  %cmp14 = icmp eq i32 %and13, 128, !dbg !4635
  %17 = zext i1 %cmp14 to i64, !dbg !4635
  %cond15 = select i1 %cmp14, i32 1, i32 0, !dbg !4635
  %cmp16 = icmp ne i32 %cond15, 0, !dbg !4636
  br i1 %cmp16, label %if.then17, label %if.end22, !dbg !4637

if.then17:                                        ; preds = %land.lhs.true12
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4638
  %ErrorCode18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 13, !dbg !4639
  %19 = load volatile i32, i32* %ErrorCode18, align 4, !dbg !4640
  %or19 = or i32 %19, 8, !dbg !4640
  store volatile i32 %or19, i32* %ErrorCode18, align 4, !dbg !4640
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4641
  %Instance20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 0, !dbg !4641
  %21 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance20, align 4, !dbg !4641
  %ICR21 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %21, i32 0, i32 7, !dbg !4641
  store volatile i32 1024, i32* %ICR21, align 4, !dbg !4641
  br label %if.end22, !dbg !4642

if.end22:                                         ; preds = %if.then17, %land.lhs.true12, %if.end
  %22 = load i32, i32* %itflags, align 4, !dbg !4643
  %and23 = and i32 %22, 512, !dbg !4643
  %cmp24 = icmp eq i32 %and23, 512, !dbg !4643
  %23 = zext i1 %cmp24 to i64, !dbg !4643
  %cond25 = select i1 %cmp24, i32 1, i32 0, !dbg !4643
  %cmp26 = icmp ne i32 %cond25, 0, !dbg !4644
  br i1 %cmp26, label %land.lhs.true27, label %if.end37, !dbg !4645

land.lhs.true27:                                  ; preds = %if.end22
  %24 = load i32, i32* %itsources, align 4, !dbg !4646
  %and28 = and i32 %24, 128, !dbg !4646
  %cmp29 = icmp eq i32 %and28, 128, !dbg !4646
  %25 = zext i1 %cmp29 to i64, !dbg !4646
  %cond30 = select i1 %cmp29, i32 1, i32 0, !dbg !4646
  %cmp31 = icmp ne i32 %cond30, 0, !dbg !4647
  br i1 %cmp31, label %if.then32, label %if.end37, !dbg !4648

if.then32:                                        ; preds = %land.lhs.true27
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4649
  %ErrorCode33 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 13, !dbg !4650
  %27 = load volatile i32, i32* %ErrorCode33, align 4, !dbg !4651
  %or34 = or i32 %27, 2, !dbg !4651
  store volatile i32 %or34, i32* %ErrorCode33, align 4, !dbg !4651
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4652
  %Instance35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 0, !dbg !4652
  %29 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance35, align 4, !dbg !4652
  %ICR36 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %29, i32 0, i32 7, !dbg !4652
  store volatile i32 512, i32* %ICR36, align 4, !dbg !4652
  br label %if.end37, !dbg !4653

if.end37:                                         ; preds = %if.then32, %land.lhs.true27, %if.end22
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4654
  %ErrorCode38 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 13, !dbg !4655
  %31 = load volatile i32, i32* %ErrorCode38, align 4, !dbg !4655
  store i32 %31, i32* %tmperror, align 4, !dbg !4656
  %32 = load i32, i32* %tmperror, align 4, !dbg !4657
  %and39 = and i32 %32, 11, !dbg !4658
  %cmp40 = icmp ne i32 %and39, 0, !dbg !4659
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !4660

if.then41:                                        ; preds = %if.end37
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4661
  %34 = load i32, i32* %tmperror, align 4, !dbg !4662
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %33, i32 %34), !dbg !4663
  br label %if.end42, !dbg !4664

if.end42:                                         ; preds = %if.then41, %if.end37
  ret void, !dbg !4665
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ErrorCode) #0 !dbg !4666 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ErrorCode.addr = alloca i32, align 4
  %tmpstate = alloca i8, align 1
  %tmppreviousstate = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ErrorCode, i32* %ErrorCode.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4667
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !4668
  %1 = load volatile i8, i8* %State, align 1, !dbg !4668
  store i8 %1, i8* %tmpstate, align 1, !dbg !4669
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4670
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 12, !dbg !4671
  store volatile i8 0, i8* %Mode, align 2, !dbg !4672
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4673
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 5, !dbg !4674
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !4675
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4676
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 4, !dbg !4677
  store volatile i16 0, i16* %XferCount, align 2, !dbg !4678
  %5 = load i32, i32* %ErrorCode.addr, align 4, !dbg !4679
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4680
  %ErrorCode1 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 13, !dbg !4681
  %7 = load volatile i32, i32* %ErrorCode1, align 4, !dbg !4682
  %or = or i32 %7, %5, !dbg !4682
  store volatile i32 %or, i32* %ErrorCode1, align 4, !dbg !4682
  %8 = load i8, i8* %tmpstate, align 1, !dbg !4683
  %conv = zext i8 %8 to i32, !dbg !4683
  %cmp = icmp eq i32 %conv, 40, !dbg !4684
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4685

lor.lhs.false:                                    ; preds = %entry
  %9 = load i8, i8* %tmpstate, align 1, !dbg !4686
  %conv3 = zext i8 %9 to i32, !dbg !4686
  %cmp4 = icmp eq i32 %conv3, 41, !dbg !4687
  br i1 %cmp4, label %if.then, label %lor.lhs.false6, !dbg !4688

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %10 = load i8, i8* %tmpstate, align 1, !dbg !4689
  %conv7 = zext i8 %10 to i32, !dbg !4689
  %cmp8 = icmp eq i32 %conv7, 42, !dbg !4690
  br i1 %cmp8, label %if.then, label %if.else, !dbg !4691

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4692
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %11, i16 zeroext 3), !dbg !4693
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4694
  %State10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 11, !dbg !4695
  store volatile i8 40, i8* %State10, align 1, !dbg !4696
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4697
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 7, !dbg !4698
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* @I2C_Slave_ISR_IT, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4699
  br label %if.end18, !dbg !4700

if.else:                                          ; preds = %lor.lhs.false6
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4701
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %14, i16 zeroext -32765), !dbg !4702
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4703
  %State11 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 11, !dbg !4704
  %16 = load volatile i8, i8* %State11, align 1, !dbg !4704
  %conv12 = zext i8 %16 to i32, !dbg !4703
  %cmp13 = icmp ne i32 %conv12, 96, !dbg !4705
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !4703

if.then15:                                        ; preds = %if.else
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4706
  %State16 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 11, !dbg !4707
  store volatile i8 32, i8* %State16, align 1, !dbg !4708
  br label %if.end, !dbg !4709

if.end:                                           ; preds = %if.then15, %if.else
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4710
  %XferISR17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 7, !dbg !4711
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR17, align 4, !dbg !4712
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4713
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 6, !dbg !4714
  %20 = load volatile i32, i32* %PreviousState, align 4, !dbg !4714
  store i32 %20, i32* %tmppreviousstate, align 4, !dbg !4715
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4716
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 8, !dbg !4717
  %22 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !4717
  %cmp19 = icmp ne %struct.__DMA_HandleTypeDef* %22, null, !dbg !4718
  br i1 %cmp19, label %land.lhs.true, label %if.else52, !dbg !4719

land.lhs.true:                                    ; preds = %if.end18
  %23 = load i32, i32* %tmppreviousstate, align 4, !dbg !4720
  %cmp21 = icmp eq i32 %23, 17, !dbg !4721
  br i1 %cmp21, label %if.then26, label %lor.lhs.false23, !dbg !4722

lor.lhs.false23:                                  ; preds = %land.lhs.true
  %24 = load i32, i32* %tmppreviousstate, align 4, !dbg !4723
  %cmp24 = icmp eq i32 %24, 33, !dbg !4724
  br i1 %cmp24, label %if.then26, label %if.else52, !dbg !4725

if.then26:                                        ; preds = %lor.lhs.false23, %land.lhs.true
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4726
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 0, !dbg !4727
  %26 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !4727
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %26, i32 0, i32 0, !dbg !4728
  %27 = load volatile i32, i32* %CR1, align 4, !dbg !4728
  %and = and i32 %27, 16384, !dbg !4729
  %cmp27 = icmp eq i32 %and, 16384, !dbg !4730
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !4731

if.then29:                                        ; preds = %if.then26
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4732
  %Instance30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 0, !dbg !4733
  %29 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance30, align 4, !dbg !4733
  %CR131 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %29, i32 0, i32 0, !dbg !4734
  %30 = load volatile i32, i32* %CR131, align 4, !dbg !4735
  %and32 = and i32 %30, -16385, !dbg !4735
  store volatile i32 %and32, i32* %CR131, align 4, !dbg !4735
  br label %if.end33, !dbg !4736

if.end33:                                         ; preds = %if.then29, %if.then26
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4737
  %hdmatx34 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 8, !dbg !4738
  %32 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx34, align 4, !dbg !4738
  %call = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_GetState(%struct.__DMA_HandleTypeDef* %32), !dbg !4739
  %conv35 = zext i8 %call to i32, !dbg !4739
  %cmp36 = icmp ne i32 %conv35, 1, !dbg !4740
  br i1 %cmp36, label %if.then38, label %if.else50, !dbg !4739

if.then38:                                        ; preds = %if.end33
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4741
  %hdmatx39 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 8, !dbg !4742
  %34 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx39, align 4, !dbg !4742
  %XferAbortCallback = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %34, i32 0, i32 10, !dbg !4743
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAAbort, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback, align 4, !dbg !4744
  br label %do.body, !dbg !4745

do.body:                                          ; preds = %if.then38
  %35 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4745
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %35, i32 0, i32 10, !dbg !4745
  store i8 0, i8* %Lock, align 4, !dbg !4745
  br label %do.end, !dbg !4745

do.end:                                           ; preds = %do.body
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4746
  %hdmatx40 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %36, i32 0, i32 8, !dbg !4747
  %37 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx40, align 4, !dbg !4747
  %call41 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* %37), !dbg !4748
  %conv42 = zext i8 %call41 to i32, !dbg !4748
  %cmp43 = icmp ne i32 %conv42, 0, !dbg !4749
  br i1 %cmp43, label %if.then45, label %if.end49, !dbg !4748

if.then45:                                        ; preds = %do.end
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4750
  %hdmatx46 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 8, !dbg !4751
  %39 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx46, align 4, !dbg !4751
  %XferAbortCallback47 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %39, i32 0, i32 10, !dbg !4752
  %40 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback47, align 4, !dbg !4752
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4753
  %hdmatx48 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 8, !dbg !4754
  %42 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx48, align 4, !dbg !4754
  call arm_aapcs_vfpcc void %40(%struct.__DMA_HandleTypeDef* %42), !dbg !4750
  br label %if.end49, !dbg !4755

if.end49:                                         ; preds = %if.then45, %do.end
  br label %if.end51, !dbg !4756

if.else50:                                        ; preds = %if.end33
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4757
  call arm_aapcs_vfpcc void @I2C_TreatErrorCallback(%struct.__I2C_HandleTypeDef* %43), !dbg !4758
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.end49
  br label %if.end97, !dbg !4759

if.else52:                                        ; preds = %lor.lhs.false23, %if.end18
  %44 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4760
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %44, i32 0, i32 9, !dbg !4761
  %45 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !4761
  %cmp53 = icmp ne %struct.__DMA_HandleTypeDef* %45, null, !dbg !4762
  br i1 %cmp53, label %land.lhs.true55, label %if.else95, !dbg !4763

land.lhs.true55:                                  ; preds = %if.else52
  %46 = load i32, i32* %tmppreviousstate, align 4, !dbg !4764
  %cmp56 = icmp eq i32 %46, 18, !dbg !4765
  br i1 %cmp56, label %if.then61, label %lor.lhs.false58, !dbg !4766

lor.lhs.false58:                                  ; preds = %land.lhs.true55
  %47 = load i32, i32* %tmppreviousstate, align 4, !dbg !4767
  %cmp59 = icmp eq i32 %47, 34, !dbg !4768
  br i1 %cmp59, label %if.then61, label %if.else95, !dbg !4769

if.then61:                                        ; preds = %lor.lhs.false58, %land.lhs.true55
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4770
  %Instance62 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 0, !dbg !4771
  %49 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance62, align 4, !dbg !4771
  %CR163 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %49, i32 0, i32 0, !dbg !4772
  %50 = load volatile i32, i32* %CR163, align 4, !dbg !4772
  %and64 = and i32 %50, 32768, !dbg !4773
  %cmp65 = icmp eq i32 %and64, 32768, !dbg !4774
  br i1 %cmp65, label %if.then67, label %if.end71, !dbg !4775

if.then67:                                        ; preds = %if.then61
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4776
  %Instance68 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %51, i32 0, i32 0, !dbg !4777
  %52 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance68, align 4, !dbg !4777
  %CR169 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %52, i32 0, i32 0, !dbg !4778
  %53 = load volatile i32, i32* %CR169, align 4, !dbg !4779
  %and70 = and i32 %53, -32769, !dbg !4779
  store volatile i32 %and70, i32* %CR169, align 4, !dbg !4779
  br label %if.end71, !dbg !4780

if.end71:                                         ; preds = %if.then67, %if.then61
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4781
  %hdmarx72 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 9, !dbg !4782
  %55 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx72, align 4, !dbg !4782
  %call73 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_GetState(%struct.__DMA_HandleTypeDef* %55), !dbg !4783
  %conv74 = zext i8 %call73 to i32, !dbg !4783
  %cmp75 = icmp ne i32 %conv74, 1, !dbg !4784
  br i1 %cmp75, label %if.then77, label %if.else93, !dbg !4783

if.then77:                                        ; preds = %if.end71
  %56 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4785
  %hdmarx78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %56, i32 0, i32 9, !dbg !4786
  %57 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx78, align 4, !dbg !4786
  %XferAbortCallback79 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %57, i32 0, i32 10, !dbg !4787
  store void (%struct.__DMA_HandleTypeDef*)* @I2C_DMAAbort, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback79, align 4, !dbg !4788
  br label %do.body80, !dbg !4789

do.body80:                                        ; preds = %if.then77
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4789
  %Lock81 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 10, !dbg !4789
  store i8 0, i8* %Lock81, align 4, !dbg !4789
  br label %do.end82, !dbg !4789

do.end82:                                         ; preds = %do.body80
  %59 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4790
  %hdmarx83 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %59, i32 0, i32 9, !dbg !4791
  %60 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx83, align 4, !dbg !4791
  %call84 = call arm_aapcs_vfpcc zeroext i8 @HAL_DMA_Abort_IT(%struct.__DMA_HandleTypeDef* %60), !dbg !4792
  %conv85 = zext i8 %call84 to i32, !dbg !4792
  %cmp86 = icmp ne i32 %conv85, 0, !dbg !4793
  br i1 %cmp86, label %if.then88, label %if.end92, !dbg !4792

if.then88:                                        ; preds = %do.end82
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4794
  %hdmarx89 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %61, i32 0, i32 9, !dbg !4795
  %62 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx89, align 4, !dbg !4795
  %XferAbortCallback90 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %62, i32 0, i32 10, !dbg !4796
  %63 = load void (%struct.__DMA_HandleTypeDef*)*, void (%struct.__DMA_HandleTypeDef*)** %XferAbortCallback90, align 4, !dbg !4796
  %64 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4797
  %hdmarx91 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %64, i32 0, i32 9, !dbg !4798
  %65 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx91, align 4, !dbg !4798
  call arm_aapcs_vfpcc void %63(%struct.__DMA_HandleTypeDef* %65), !dbg !4794
  br label %if.end92, !dbg !4799

if.end92:                                         ; preds = %if.then88, %do.end82
  br label %if.end94, !dbg !4800

if.else93:                                        ; preds = %if.end71
  %66 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4801
  call arm_aapcs_vfpcc void @I2C_TreatErrorCallback(%struct.__I2C_HandleTypeDef* %66), !dbg !4802
  br label %if.end94

if.end94:                                         ; preds = %if.else93, %if.end92
  br label %if.end96, !dbg !4803

if.else95:                                        ; preds = %lor.lhs.false58, %if.else52
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4804
  call arm_aapcs_vfpcc void @I2C_TreatErrorCallback(%struct.__I2C_HandleTypeDef* %67), !dbg !4805
  br label %if.end96

if.end96:                                         ; preds = %if.else95, %if.end94
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end51
  ret void, !dbg !4806
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_MasterTxCpltCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4807 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4808
  ret void, !dbg !4809
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_MasterRxCpltCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4810 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4811
  ret void, !dbg !4812
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_SlaveTxCpltCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4813 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4814
  ret void, !dbg !4815
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_SlaveRxCpltCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4816 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4817
  ret void, !dbg !4818
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_AddrCallback(%struct.__I2C_HandleTypeDef* %hi2c, i8 zeroext %TransferDirection, i16 zeroext %AddrMatchCode) #0 !dbg !4819 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %TransferDirection.addr = alloca i8, align 1
  %AddrMatchCode.addr = alloca i16, align 2
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i8 %TransferDirection, i8* %TransferDirection.addr, align 1
  store i16 %AddrMatchCode, i16* %AddrMatchCode.addr, align 2
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4820
  %1 = load i8, i8* %TransferDirection.addr, align 1, !dbg !4821
  %2 = load i16, i16* %AddrMatchCode.addr, align 2, !dbg !4822
  ret void, !dbg !4823
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_ListenCpltCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4824 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4825
  ret void, !dbg !4826
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_MemTxCpltCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4827 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4828
  ret void, !dbg !4829
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_MemRxCpltCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4830 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4831
  ret void, !dbg !4832
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_ErrorCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4833 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4834
  ret void, !dbg !4835
}

; Function Attrs: noinline nounwind optnone
define weak dso_local arm_aapcs_vfpcc void @HAL_I2C_AbortCpltCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4836 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4837
  ret void, !dbg !4838
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_GetState(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4839 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4840
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !4841
  %1 = load volatile i8, i8* %State, align 1, !dbg !4841
  ret i8 %1, !dbg !4842
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc zeroext i8 @HAL_I2C_GetMode(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4843 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4844
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 12, !dbg !4845
  %1 = load volatile i8, i8* %Mode, align 2, !dbg !4845
  ret i8 %1, !dbg !4846
}

; Function Attrs: noinline nounwind optnone
define dso_local arm_aapcs_vfpcc i32 @HAL_I2C_GetError(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4847 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4848
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 13, !dbg !4849
  %1 = load volatile i32, i32* %ErrorCode, align 4, !dbg !4849
  ret i32 %1, !dbg !4850
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_Flush_TXDR(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4851 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4852
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !4852
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !4852
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 6, !dbg !4852
  %2 = load volatile i32, i32* %ISR, align 4, !dbg !4852
  %and = and i32 %2, 2, !dbg !4852
  %cmp = icmp eq i32 %and, 2, !dbg !4852
  %3 = zext i1 %cmp to i64, !dbg !4852
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !4852
  %cmp1 = icmp ne i32 %cond, 0, !dbg !4853
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4852

if.then:                                          ; preds = %entry
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4854
  %Instance2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 0, !dbg !4855
  %5 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance2, align 4, !dbg !4855
  %TXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %5, i32 0, i32 10, !dbg !4856
  store volatile i32 0, i32* %TXDR, align 4, !dbg !4857
  br label %if.end, !dbg !4858

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4859
  %Instance3 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 0, !dbg !4859
  %7 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance3, align 4, !dbg !4859
  %ISR4 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %7, i32 0, i32 6, !dbg !4859
  %8 = load volatile i32, i32* %ISR4, align 4, !dbg !4859
  %and5 = and i32 %8, 1, !dbg !4859
  %cmp6 = icmp eq i32 %and5, 1, !dbg !4859
  %9 = zext i1 %cmp6 to i64, !dbg !4859
  %cond7 = select i1 %cmp6, i32 1, i32 0, !dbg !4859
  %cmp8 = icmp eq i32 %cond7, 0, !dbg !4860
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !4859

if.then9:                                         ; preds = %if.end
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4861
  %Instance10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 0, !dbg !4861
  %11 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance10, align 4, !dbg !4861
  %ISR11 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %11, i32 0, i32 6, !dbg !4861
  %12 = load volatile i32, i32* %ISR11, align 4, !dbg !4861
  %or = or i32 %12, 1, !dbg !4861
  store volatile i32 %or, i32* %ISR11, align 4, !dbg !4861
  br label %if.end12, !dbg !4862

if.end12:                                         ; preds = %if.then9, %if.end
  ret void, !dbg !4863
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_ITMasterSeqCplt(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !4864 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4865
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 12, !dbg !4866
  store volatile i8 0, i8* %Mode, align 2, !dbg !4867
  %1 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4868
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %1, i32 0, i32 11, !dbg !4869
  %2 = load volatile i8, i8* %State, align 1, !dbg !4869
  %conv = zext i8 %2 to i32, !dbg !4868
  %cmp = icmp eq i32 %conv, 33, !dbg !4870
  br i1 %cmp, label %if.then, label %if.else, !dbg !4868

if.then:                                          ; preds = %entry
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4871
  %State2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 11, !dbg !4872
  store volatile i8 32, i8* %State2, align 1, !dbg !4873
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4874
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 6, !dbg !4875
  store volatile i32 17, i32* %PreviousState, align 4, !dbg !4876
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4877
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %5, i32 0, i32 7, !dbg !4878
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4879
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4880
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %6, i16 zeroext 1), !dbg !4881
  br label %do.body, !dbg !4882

do.body:                                          ; preds = %if.then
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4882
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !4882
  store i8 0, i8* %Lock, align 4, !dbg !4882
  br label %do.end, !dbg !4882

do.end:                                           ; preds = %do.body
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4883
  call arm_aapcs_vfpcc void @HAL_I2C_MasterTxCpltCallback(%struct.__I2C_HandleTypeDef* %8), !dbg !4884
  br label %if.end, !dbg !4885

if.else:                                          ; preds = %entry
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4886
  %State3 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 11, !dbg !4887
  store volatile i8 32, i8* %State3, align 1, !dbg !4888
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4889
  %PreviousState4 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 6, !dbg !4890
  store volatile i32 18, i32* %PreviousState4, align 4, !dbg !4891
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4892
  %XferISR5 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 7, !dbg !4893
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR5, align 4, !dbg !4894
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4895
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %12, i16 zeroext 2), !dbg !4896
  br label %do.body6, !dbg !4897

do.body6:                                         ; preds = %if.else
  %13 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4897
  %Lock7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %13, i32 0, i32 10, !dbg !4897
  store i8 0, i8* %Lock7, align 4, !dbg !4897
  br label %do.end8, !dbg !4897

do.end8:                                          ; preds = %do.body6
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4898
  call arm_aapcs_vfpcc void @HAL_I2C_MasterRxCpltCallback(%struct.__I2C_HandleTypeDef* %14), !dbg !4899
  br label %if.end

if.end:                                           ; preds = %do.end8, %do.end
  ret void, !dbg !4900
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_ITMasterCplt(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ITFlags) #0 !dbg !4901 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ITFlags.addr = alloca i32, align 4
  %tmperror = alloca i32, align 4
  %tmpITFlags = alloca i32, align 4
  %tmpreg = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ITFlags, i32* %ITFlags.addr, align 4
  %0 = load i32, i32* %ITFlags.addr, align 4, !dbg !4902
  store i32 %0, i32* %tmpITFlags, align 4, !dbg !4903
  %1 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4904
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %1, i32 0, i32 0, !dbg !4904
  %2 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !4904
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %2, i32 0, i32 7, !dbg !4904
  store volatile i32 32, i32* %ICR, align 4, !dbg !4904
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4905
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 11, !dbg !4906
  %4 = load volatile i8, i8* %State, align 1, !dbg !4906
  %conv = zext i8 %4 to i32, !dbg !4905
  %cmp = icmp eq i32 %conv, 33, !dbg !4907
  br i1 %cmp, label %if.then, label %if.else, !dbg !4905

if.then:                                          ; preds = %entry
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4908
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %5, i16 zeroext 1), !dbg !4909
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4910
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 6, !dbg !4911
  store volatile i32 17, i32* %PreviousState, align 4, !dbg !4912
  br label %if.end9, !dbg !4913

if.else:                                          ; preds = %entry
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4914
  %State2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 11, !dbg !4915
  %8 = load volatile i8, i8* %State2, align 1, !dbg !4915
  %conv3 = zext i8 %8 to i32, !dbg !4914
  %cmp4 = icmp eq i32 %conv3, 34, !dbg !4916
  br i1 %cmp4, label %if.then6, label %if.else8, !dbg !4914

if.then6:                                         ; preds = %if.else
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4917
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %9, i16 zeroext 2), !dbg !4918
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4919
  %PreviousState7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 6, !dbg !4920
  store volatile i32 18, i32* %PreviousState7, align 4, !dbg !4921
  br label %if.end, !dbg !4922

if.else8:                                         ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then6
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4923
  %Instance10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 0, !dbg !4923
  %12 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance10, align 4, !dbg !4923
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %12, i32 0, i32 1, !dbg !4923
  %13 = load volatile i32, i32* %CR2, align 4, !dbg !4923
  %and = and i32 %13, -33495040, !dbg !4923
  store volatile i32 %and, i32* %CR2, align 4, !dbg !4923
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4924
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 7, !dbg !4925
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !4926
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4927
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 5, !dbg !4928
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !4929
  %16 = load i32, i32* %tmpITFlags, align 4, !dbg !4930
  %and11 = and i32 %16, 16, !dbg !4930
  %cmp12 = icmp eq i32 %and11, 16, !dbg !4930
  %17 = zext i1 %cmp12 to i64, !dbg !4930
  %cond = select i1 %cmp12, i32 1, i32 0, !dbg !4930
  %cmp14 = icmp ne i32 %cond, 0, !dbg !4931
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !4930

if.then16:                                        ; preds = %if.end9
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4932
  %Instance17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 0, !dbg !4932
  %19 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance17, align 4, !dbg !4932
  %ICR18 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %19, i32 0, i32 7, !dbg !4932
  store volatile i32 16, i32* %ICR18, align 4, !dbg !4932
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4933
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 13, !dbg !4934
  %21 = load volatile i32, i32* %ErrorCode, align 4, !dbg !4935
  %or = or i32 %21, 4, !dbg !4935
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !4935
  br label %if.end19, !dbg !4936

if.end19:                                         ; preds = %if.then16, %if.end9
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4937
  %State20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 11, !dbg !4938
  %23 = load volatile i8, i8* %State20, align 1, !dbg !4938
  %conv21 = zext i8 %23 to i32, !dbg !4937
  %cmp22 = icmp eq i32 %conv21, 96, !dbg !4939
  br i1 %cmp22, label %land.lhs.true, label %if.end34, !dbg !4940

land.lhs.true:                                    ; preds = %if.end19
  %24 = load i32, i32* %tmpITFlags, align 4, !dbg !4941
  %and24 = and i32 %24, 4, !dbg !4941
  %cmp25 = icmp eq i32 %and24, 4, !dbg !4941
  %25 = zext i1 %cmp25 to i64, !dbg !4941
  %cond27 = select i1 %cmp25, i32 1, i32 0, !dbg !4941
  %cmp28 = icmp ne i32 %cond27, 0, !dbg !4942
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !4943

if.then30:                                        ; preds = %land.lhs.true
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4944
  %Instance31 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 0, !dbg !4945
  %27 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance31, align 4, !dbg !4945
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %27, i32 0, i32 9, !dbg !4946
  %28 = load volatile i32, i32* %RXDR, align 4, !dbg !4946
  %conv32 = trunc i32 %28 to i8, !dbg !4947
  %conv33 = zext i8 %conv32 to i32, !dbg !4947
  store volatile i32 %conv33, i32* %tmpreg, align 4, !dbg !4948
  %29 = load volatile i32, i32* %tmpreg, align 4, !dbg !4949
  br label %if.end34, !dbg !4950

if.end34:                                         ; preds = %if.then30, %land.lhs.true, %if.end19
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4951
  call arm_aapcs_vfpcc void @I2C_Flush_TXDR(%struct.__I2C_HandleTypeDef* %30), !dbg !4952
  %31 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4953
  %ErrorCode35 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %31, i32 0, i32 13, !dbg !4954
  %32 = load volatile i32, i32* %ErrorCode35, align 4, !dbg !4954
  store i32 %32, i32* %tmperror, align 4, !dbg !4955
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4956
  %State36 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 11, !dbg !4957
  %34 = load volatile i8, i8* %State36, align 1, !dbg !4957
  %conv37 = zext i8 %34 to i32, !dbg !4956
  %cmp38 = icmp eq i32 %conv37, 96, !dbg !4958
  br i1 %cmp38, label %if.then42, label %lor.lhs.false, !dbg !4959

lor.lhs.false:                                    ; preds = %if.end34
  %35 = load i32, i32* %tmperror, align 4, !dbg !4960
  %cmp40 = icmp ne i32 %35, 0, !dbg !4961
  br i1 %cmp40, label %if.then42, label %if.else44, !dbg !4962

if.then42:                                        ; preds = %lor.lhs.false, %if.end34
  %36 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4963
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4964
  %ErrorCode43 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 13, !dbg !4965
  %38 = load volatile i32, i32* %ErrorCode43, align 4, !dbg !4965
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %36, i32 %38), !dbg !4966
  br label %if.end89, !dbg !4967

if.else44:                                        ; preds = %lor.lhs.false
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4968
  %State45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %39, i32 0, i32 11, !dbg !4969
  %40 = load volatile i8, i8* %State45, align 1, !dbg !4969
  %conv46 = zext i8 %40 to i32, !dbg !4968
  %cmp47 = icmp eq i32 %conv46, 33, !dbg !4970
  br i1 %cmp47, label %if.then49, label %if.else63, !dbg !4968

if.then49:                                        ; preds = %if.else44
  %41 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4971
  %State50 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %41, i32 0, i32 11, !dbg !4972
  store volatile i8 32, i8* %State50, align 1, !dbg !4973
  %42 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4974
  %PreviousState51 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %42, i32 0, i32 6, !dbg !4975
  store volatile i32 0, i32* %PreviousState51, align 4, !dbg !4976
  %43 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4977
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %43, i32 0, i32 12, !dbg !4978
  %44 = load volatile i8, i8* %Mode, align 2, !dbg !4978
  %conv52 = zext i8 %44 to i32, !dbg !4977
  %cmp53 = icmp eq i32 %conv52, 64, !dbg !4979
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !4977

if.then55:                                        ; preds = %if.then49
  %45 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4980
  %Mode56 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %45, i32 0, i32 12, !dbg !4981
  store volatile i8 0, i8* %Mode56, align 2, !dbg !4982
  br label %do.body, !dbg !4983

do.body:                                          ; preds = %if.then55
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4983
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %46, i32 0, i32 10, !dbg !4983
  store i8 0, i8* %Lock, align 4, !dbg !4983
  br label %do.end, !dbg !4983

do.end:                                           ; preds = %do.body
  %47 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4984
  call arm_aapcs_vfpcc void @HAL_I2C_MemTxCpltCallback(%struct.__I2C_HandleTypeDef* %47), !dbg !4985
  br label %if.end62, !dbg !4986

if.else57:                                        ; preds = %if.then49
  %48 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4987
  %Mode58 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %48, i32 0, i32 12, !dbg !4988
  store volatile i8 0, i8* %Mode58, align 2, !dbg !4989
  br label %do.body59, !dbg !4990

do.body59:                                        ; preds = %if.else57
  %49 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4990
  %Lock60 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %49, i32 0, i32 10, !dbg !4990
  store i8 0, i8* %Lock60, align 4, !dbg !4990
  br label %do.end61, !dbg !4990

do.end61:                                         ; preds = %do.body59
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4991
  call arm_aapcs_vfpcc void @HAL_I2C_MasterTxCpltCallback(%struct.__I2C_HandleTypeDef* %50), !dbg !4992
  br label %if.end62

if.end62:                                         ; preds = %do.end61, %do.end
  br label %if.end88, !dbg !4993

if.else63:                                        ; preds = %if.else44
  %51 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4994
  %State64 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %51, i32 0, i32 11, !dbg !4995
  %52 = load volatile i8, i8* %State64, align 1, !dbg !4995
  %conv65 = zext i8 %52 to i32, !dbg !4994
  %cmp66 = icmp eq i32 %conv65, 34, !dbg !4996
  br i1 %cmp66, label %if.then68, label %if.else86, !dbg !4994

if.then68:                                        ; preds = %if.else63
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !4997
  %State69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 11, !dbg !4998
  store volatile i8 32, i8* %State69, align 1, !dbg !4999
  %54 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5000
  %PreviousState70 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %54, i32 0, i32 6, !dbg !5001
  store volatile i32 0, i32* %PreviousState70, align 4, !dbg !5002
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5003
  %Mode71 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 12, !dbg !5004
  %56 = load volatile i8, i8* %Mode71, align 2, !dbg !5004
  %conv72 = zext i8 %56 to i32, !dbg !5003
  %cmp73 = icmp eq i32 %conv72, 64, !dbg !5005
  br i1 %cmp73, label %if.then75, label %if.else80, !dbg !5003

if.then75:                                        ; preds = %if.then68
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5006
  %Mode76 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 12, !dbg !5007
  store volatile i8 0, i8* %Mode76, align 2, !dbg !5008
  br label %do.body77, !dbg !5009

do.body77:                                        ; preds = %if.then75
  %58 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5009
  %Lock78 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %58, i32 0, i32 10, !dbg !5009
  store i8 0, i8* %Lock78, align 4, !dbg !5009
  br label %do.end79, !dbg !5009

do.end79:                                         ; preds = %do.body77
  %59 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5010
  call arm_aapcs_vfpcc void @HAL_I2C_MemRxCpltCallback(%struct.__I2C_HandleTypeDef* %59), !dbg !5011
  br label %if.end85, !dbg !5012

if.else80:                                        ; preds = %if.then68
  %60 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5013
  %Mode81 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %60, i32 0, i32 12, !dbg !5014
  store volatile i8 0, i8* %Mode81, align 2, !dbg !5015
  br label %do.body82, !dbg !5016

do.body82:                                        ; preds = %if.else80
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5016
  %Lock83 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %61, i32 0, i32 10, !dbg !5016
  store i8 0, i8* %Lock83, align 4, !dbg !5016
  br label %do.end84, !dbg !5016

do.end84:                                         ; preds = %do.body82
  %62 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5017
  call arm_aapcs_vfpcc void @HAL_I2C_MasterRxCpltCallback(%struct.__I2C_HandleTypeDef* %62), !dbg !5018
  br label %if.end85

if.end85:                                         ; preds = %do.end84, %do.end79
  br label %if.end87, !dbg !5019

if.else86:                                        ; preds = %if.else63
  br label %if.end87

if.end87:                                         ; preds = %if.else86, %if.end85
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end62
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then42
  ret void, !dbg !5020
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_ITSlaveCplt(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ITFlags) #0 !dbg !5021 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ITFlags.addr = alloca i32, align 4
  %tmpcr1value = alloca i32, align 4
  %tmpITFlags = alloca i32, align 4
  %tmpstate = alloca i8, align 1
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ITFlags, i32* %ITFlags.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5022
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !5022
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !5022
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 0, !dbg !5022
  %2 = load volatile i32, i32* %CR1, align 4, !dbg !5022
  store i32 %2, i32* %tmpcr1value, align 4, !dbg !5023
  %3 = load i32, i32* %ITFlags.addr, align 4, !dbg !5024
  store i32 %3, i32* %tmpITFlags, align 4, !dbg !5025
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5026
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 11, !dbg !5027
  %5 = load volatile i8, i8* %State, align 1, !dbg !5027
  store i8 %5, i8* %tmpstate, align 1, !dbg !5028
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5029
  %Instance1 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 0, !dbg !5029
  %7 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance1, align 4, !dbg !5029
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %7, i32 0, i32 7, !dbg !5029
  store volatile i32 32, i32* %ICR, align 4, !dbg !5029
  %8 = load i8, i8* %tmpstate, align 1, !dbg !5030
  %conv = zext i8 %8 to i32, !dbg !5030
  %cmp = icmp eq i32 %conv, 33, !dbg !5031
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5032

lor.lhs.false:                                    ; preds = %entry
  %9 = load i8, i8* %tmpstate, align 1, !dbg !5033
  %conv3 = zext i8 %9 to i32, !dbg !5033
  %cmp4 = icmp eq i32 %conv3, 41, !dbg !5034
  br i1 %cmp4, label %if.then, label %if.else, !dbg !5035

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5036
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %10, i16 zeroext -32767), !dbg !5037
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5038
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 6, !dbg !5039
  store volatile i32 33, i32* %PreviousState, align 4, !dbg !5040
  br label %if.end16, !dbg !5041

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i8, i8* %tmpstate, align 1, !dbg !5042
  %conv6 = zext i8 %12 to i32, !dbg !5042
  %cmp7 = icmp eq i32 %conv6, 34, !dbg !5043
  br i1 %cmp7, label %if.then13, label %lor.lhs.false9, !dbg !5044

lor.lhs.false9:                                   ; preds = %if.else
  %13 = load i8, i8* %tmpstate, align 1, !dbg !5045
  %conv10 = zext i8 %13 to i32, !dbg !5045
  %cmp11 = icmp eq i32 %conv10, 42, !dbg !5046
  br i1 %cmp11, label %if.then13, label %if.else15, !dbg !5047

if.then13:                                        ; preds = %lor.lhs.false9, %if.else
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5048
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %14, i16 zeroext -32766), !dbg !5049
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5050
  %PreviousState14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 6, !dbg !5051
  store volatile i32 34, i32* %PreviousState14, align 4, !dbg !5052
  br label %if.end, !dbg !5053

if.else15:                                        ; preds = %lor.lhs.false9
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then13
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5054
  %Instance17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 0, !dbg !5055
  %17 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance17, align 4, !dbg !5055
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %17, i32 0, i32 1, !dbg !5056
  %18 = load volatile i32, i32* %CR2, align 4, !dbg !5057
  %or = or i32 %18, 32768, !dbg !5057
  store volatile i32 %or, i32* %CR2, align 4, !dbg !5057
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5058
  %Instance18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 0, !dbg !5058
  %20 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance18, align 4, !dbg !5058
  %CR219 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %20, i32 0, i32 1, !dbg !5058
  %21 = load volatile i32, i32* %CR219, align 4, !dbg !5058
  %and = and i32 %21, -33495040, !dbg !5058
  store volatile i32 %and, i32* %CR219, align 4, !dbg !5058
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5059
  call arm_aapcs_vfpcc void @I2C_Flush_TXDR(%struct.__I2C_HandleTypeDef* %22), !dbg !5060
  %23 = load i32, i32* %tmpcr1value, align 4, !dbg !5061
  %and20 = and i32 %23, 16384, !dbg !5061
  %cmp21 = icmp eq i32 %and20, 16384, !dbg !5061
  %24 = zext i1 %cmp21 to i64, !dbg !5061
  %cond = select i1 %cmp21, i32 1, i32 0, !dbg !5061
  %cmp23 = icmp ne i32 %cond, 0, !dbg !5062
  br i1 %cmp23, label %if.then25, label %if.else36, !dbg !5061

if.then25:                                        ; preds = %if.end16
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5063
  %Instance26 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 0, !dbg !5064
  %26 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance26, align 4, !dbg !5064
  %CR127 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %26, i32 0, i32 0, !dbg !5065
  %27 = load volatile i32, i32* %CR127, align 4, !dbg !5066
  %and28 = and i32 %27, -16385, !dbg !5066
  store volatile i32 %and28, i32* %CR127, align 4, !dbg !5066
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5067
  %hdmatx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 8, !dbg !5068
  %29 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx, align 4, !dbg !5068
  %cmp29 = icmp ne %struct.__DMA_HandleTypeDef* %29, null, !dbg !5069
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !5067

if.then31:                                        ; preds = %if.then25
  %30 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5070
  %hdmatx32 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %30, i32 0, i32 8, !dbg !5070
  %31 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmatx32, align 4, !dbg !5070
  %Instance33 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %31, i32 0, i32 0, !dbg !5070
  %32 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %Instance33, align 4, !dbg !5070
  %CNDTR = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %32, i32 0, i32 1, !dbg !5070
  %33 = load volatile i32, i32* %CNDTR, align 4, !dbg !5070
  %conv34 = trunc i32 %33 to i16, !dbg !5071
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5072
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %34, i32 0, i32 4, !dbg !5073
  store volatile i16 %conv34, i16* %XferCount, align 2, !dbg !5074
  br label %if.end35, !dbg !5075

if.end35:                                         ; preds = %if.then31, %if.then25
  br label %if.end58, !dbg !5076

if.else36:                                        ; preds = %if.end16
  %35 = load i32, i32* %tmpcr1value, align 4, !dbg !5077
  %and37 = and i32 %35, 32768, !dbg !5077
  %cmp38 = icmp eq i32 %and37, 32768, !dbg !5077
  %36 = zext i1 %cmp38 to i64, !dbg !5077
  %cond40 = select i1 %cmp38, i32 1, i32 0, !dbg !5077
  %cmp41 = icmp ne i32 %cond40, 0, !dbg !5078
  br i1 %cmp41, label %if.then43, label %if.else56, !dbg !5077

if.then43:                                        ; preds = %if.else36
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5079
  %Instance44 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %37, i32 0, i32 0, !dbg !5080
  %38 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance44, align 4, !dbg !5080
  %CR145 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %38, i32 0, i32 0, !dbg !5081
  %39 = load volatile i32, i32* %CR145, align 4, !dbg !5082
  %and46 = and i32 %39, -32769, !dbg !5082
  store volatile i32 %and46, i32* %CR145, align 4, !dbg !5082
  %40 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5083
  %hdmarx = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %40, i32 0, i32 9, !dbg !5084
  %41 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx, align 4, !dbg !5084
  %cmp47 = icmp ne %struct.__DMA_HandleTypeDef* %41, null, !dbg !5085
  br i1 %cmp47, label %if.then49, label %if.end55, !dbg !5083

if.then49:                                        ; preds = %if.then43
  %42 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5086
  %hdmarx50 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %42, i32 0, i32 9, !dbg !5086
  %43 = load %struct.__DMA_HandleTypeDef*, %struct.__DMA_HandleTypeDef** %hdmarx50, align 4, !dbg !5086
  %Instance51 = getelementptr inbounds %struct.__DMA_HandleTypeDef, %struct.__DMA_HandleTypeDef* %43, i32 0, i32 0, !dbg !5086
  %44 = load %struct.DMA_Channel_TypeDef*, %struct.DMA_Channel_TypeDef** %Instance51, align 4, !dbg !5086
  %CNDTR52 = getelementptr inbounds %struct.DMA_Channel_TypeDef, %struct.DMA_Channel_TypeDef* %44, i32 0, i32 1, !dbg !5086
  %45 = load volatile i32, i32* %CNDTR52, align 4, !dbg !5086
  %conv53 = trunc i32 %45 to i16, !dbg !5087
  %46 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5088
  %XferCount54 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %46, i32 0, i32 4, !dbg !5089
  store volatile i16 %conv53, i16* %XferCount54, align 2, !dbg !5090
  br label %if.end55, !dbg !5091

if.end55:                                         ; preds = %if.then49, %if.then43
  br label %if.end57, !dbg !5092

if.else56:                                        ; preds = %if.else36
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %if.end55
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end35
  %47 = load i32, i32* %tmpITFlags, align 4, !dbg !5093
  %and59 = and i32 %47, 4, !dbg !5093
  %cmp60 = icmp eq i32 %and59, 4, !dbg !5093
  %48 = zext i1 %cmp60 to i64, !dbg !5093
  %cond62 = select i1 %cmp60, i32 1, i32 0, !dbg !5093
  %cmp63 = icmp ne i32 %cond62, 0, !dbg !5094
  br i1 %cmp63, label %if.then65, label %if.end78, !dbg !5093

if.then65:                                        ; preds = %if.end58
  %49 = load i32, i32* %tmpITFlags, align 4, !dbg !5095
  %and66 = and i32 %49, -5, !dbg !5095
  store i32 %and66, i32* %tmpITFlags, align 4, !dbg !5095
  %50 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5096
  %Instance67 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %50, i32 0, i32 0, !dbg !5097
  %51 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance67, align 4, !dbg !5097
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %51, i32 0, i32 9, !dbg !5098
  %52 = load volatile i32, i32* %RXDR, align 4, !dbg !5098
  %conv68 = trunc i32 %52 to i8, !dbg !5099
  %53 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5100
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %53, i32 0, i32 2, !dbg !5101
  %54 = load i8*, i8** %pBuffPtr, align 4, !dbg !5101
  store i8 %conv68, i8* %54, align 1, !dbg !5102
  %55 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5103
  %pBuffPtr69 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %55, i32 0, i32 2, !dbg !5104
  %56 = load i8*, i8** %pBuffPtr69, align 4, !dbg !5105
  %incdec.ptr = getelementptr inbounds i8, i8* %56, i32 1, !dbg !5105
  store i8* %incdec.ptr, i8** %pBuffPtr69, align 4, !dbg !5105
  %57 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5106
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %57, i32 0, i32 3, !dbg !5107
  %58 = load i16, i16* %XferSize, align 4, !dbg !5107
  %conv70 = zext i16 %58 to i32, !dbg !5106
  %cmp71 = icmp ugt i32 %conv70, 0, !dbg !5108
  br i1 %cmp71, label %if.then73, label %if.end77, !dbg !5109

if.then73:                                        ; preds = %if.then65
  %59 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5110
  %XferSize74 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %59, i32 0, i32 3, !dbg !5111
  %60 = load i16, i16* %XferSize74, align 4, !dbg !5112
  %dec = add i16 %60, -1, !dbg !5112
  store i16 %dec, i16* %XferSize74, align 4, !dbg !5112
  %61 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5113
  %XferCount75 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %61, i32 0, i32 4, !dbg !5114
  %62 = load volatile i16, i16* %XferCount75, align 2, !dbg !5115
  %dec76 = add i16 %62, -1, !dbg !5115
  store volatile i16 %dec76, i16* %XferCount75, align 2, !dbg !5115
  br label %if.end77, !dbg !5116

if.end77:                                         ; preds = %if.then73, %if.then65
  br label %if.end78, !dbg !5117

if.end78:                                         ; preds = %if.end77, %if.end58
  %63 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5118
  %XferCount79 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %63, i32 0, i32 4, !dbg !5119
  %64 = load volatile i16, i16* %XferCount79, align 2, !dbg !5119
  %conv80 = zext i16 %64 to i32, !dbg !5118
  %cmp81 = icmp ne i32 %conv80, 0, !dbg !5120
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !5118

if.then83:                                        ; preds = %if.end78
  %65 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5121
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %65, i32 0, i32 13, !dbg !5122
  %66 = load volatile i32, i32* %ErrorCode, align 4, !dbg !5123
  %or84 = or i32 %66, 4, !dbg !5123
  store volatile i32 %or84, i32* %ErrorCode, align 4, !dbg !5123
  br label %if.end85, !dbg !5124

if.end85:                                         ; preds = %if.then83, %if.end78
  %67 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5125
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %67, i32 0, i32 12, !dbg !5126
  store volatile i8 0, i8* %Mode, align 2, !dbg !5127
  %68 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5128
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %68, i32 0, i32 7, !dbg !5129
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !5130
  %69 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5131
  %ErrorCode86 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %69, i32 0, i32 13, !dbg !5132
  %70 = load volatile i32, i32* %ErrorCode86, align 4, !dbg !5132
  %cmp87 = icmp ne i32 %70, 0, !dbg !5133
  br i1 %cmp87, label %if.then89, label %if.else97, !dbg !5131

if.then89:                                        ; preds = %if.end85
  %71 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5134
  %72 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5135
  %ErrorCode90 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %72, i32 0, i32 13, !dbg !5136
  %73 = load volatile i32, i32* %ErrorCode90, align 4, !dbg !5136
  call arm_aapcs_vfpcc void @I2C_ITError(%struct.__I2C_HandleTypeDef* %71, i32 %73), !dbg !5137
  %74 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5138
  %State91 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %74, i32 0, i32 11, !dbg !5139
  %75 = load volatile i8, i8* %State91, align 1, !dbg !5139
  %conv92 = zext i8 %75 to i32, !dbg !5138
  %cmp93 = icmp eq i32 %conv92, 40, !dbg !5140
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !5138

if.then95:                                        ; preds = %if.then89
  %76 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5141
  %77 = load i32, i32* %tmpITFlags, align 4, !dbg !5142
  call arm_aapcs_vfpcc void @I2C_ITListenCplt(%struct.__I2C_HandleTypeDef* %76, i32 %77), !dbg !5143
  br label %if.end96, !dbg !5144

if.end96:                                         ; preds = %if.then95, %if.then89
  br label %if.end123, !dbg !5145

if.else97:                                        ; preds = %if.end85
  %78 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5146
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %78, i32 0, i32 5, !dbg !5147
  %79 = load volatile i32, i32* %XferOptions, align 4, !dbg !5147
  %cmp98 = icmp ne i32 %79, -65536, !dbg !5148
  br i1 %cmp98, label %if.then100, label %if.else104, !dbg !5146

if.then100:                                       ; preds = %if.else97
  %80 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5149
  call arm_aapcs_vfpcc void @I2C_ITSlaveSeqCplt(%struct.__I2C_HandleTypeDef* %80), !dbg !5150
  %81 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5151
  %XferOptions101 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %81, i32 0, i32 5, !dbg !5152
  store volatile i32 -65536, i32* %XferOptions101, align 4, !dbg !5153
  %82 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5154
  %State102 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %82, i32 0, i32 11, !dbg !5155
  store volatile i8 32, i8* %State102, align 1, !dbg !5156
  %83 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5157
  %PreviousState103 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %83, i32 0, i32 6, !dbg !5158
  store volatile i32 0, i32* %PreviousState103, align 4, !dbg !5159
  br label %do.body, !dbg !5160

do.body:                                          ; preds = %if.then100
  %84 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5160
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %84, i32 0, i32 10, !dbg !5160
  store i8 0, i8* %Lock, align 4, !dbg !5160
  br label %do.end, !dbg !5160

do.end:                                           ; preds = %do.body
  %85 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5161
  call arm_aapcs_vfpcc void @HAL_I2C_ListenCpltCallback(%struct.__I2C_HandleTypeDef* %85), !dbg !5162
  br label %if.end122, !dbg !5163

if.else104:                                       ; preds = %if.else97
  %86 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5164
  %State105 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %86, i32 0, i32 11, !dbg !5165
  %87 = load volatile i8, i8* %State105, align 1, !dbg !5165
  %conv106 = zext i8 %87 to i32, !dbg !5164
  %cmp107 = icmp eq i32 %conv106, 34, !dbg !5166
  br i1 %cmp107, label %if.then109, label %if.else115, !dbg !5164

if.then109:                                       ; preds = %if.else104
  %88 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5167
  %State110 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %88, i32 0, i32 11, !dbg !5168
  store volatile i8 32, i8* %State110, align 1, !dbg !5169
  %89 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5170
  %PreviousState111 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %89, i32 0, i32 6, !dbg !5171
  store volatile i32 0, i32* %PreviousState111, align 4, !dbg !5172
  br label %do.body112, !dbg !5173

do.body112:                                       ; preds = %if.then109
  %90 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5173
  %Lock113 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %90, i32 0, i32 10, !dbg !5173
  store i8 0, i8* %Lock113, align 4, !dbg !5173
  br label %do.end114, !dbg !5173

do.end114:                                        ; preds = %do.body112
  %91 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5174
  call arm_aapcs_vfpcc void @HAL_I2C_SlaveRxCpltCallback(%struct.__I2C_HandleTypeDef* %91), !dbg !5175
  br label %if.end121, !dbg !5176

if.else115:                                       ; preds = %if.else104
  %92 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5177
  %State116 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %92, i32 0, i32 11, !dbg !5178
  store volatile i8 32, i8* %State116, align 1, !dbg !5179
  %93 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5180
  %PreviousState117 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %93, i32 0, i32 6, !dbg !5181
  store volatile i32 0, i32* %PreviousState117, align 4, !dbg !5182
  br label %do.body118, !dbg !5183

do.body118:                                       ; preds = %if.else115
  %94 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5183
  %Lock119 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %94, i32 0, i32 10, !dbg !5183
  store i8 0, i8* %Lock119, align 4, !dbg !5183
  br label %do.end120, !dbg !5183

do.end120:                                        ; preds = %do.body118
  %95 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5184
  call arm_aapcs_vfpcc void @HAL_I2C_SlaveTxCpltCallback(%struct.__I2C_HandleTypeDef* %95), !dbg !5185
  br label %if.end121

if.end121:                                        ; preds = %do.end120, %do.end114
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %do.end
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.end96
  ret void, !dbg !5186
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_ITListenCplt(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ITFlags) #0 !dbg !5187 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ITFlags.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ITFlags, i32* %ITFlags.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5188
  %XferOptions = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 5, !dbg !5189
  store volatile i32 -65536, i32* %XferOptions, align 4, !dbg !5190
  %1 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5191
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %1, i32 0, i32 6, !dbg !5192
  store volatile i32 0, i32* %PreviousState, align 4, !dbg !5193
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5194
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 11, !dbg !5195
  store volatile i8 32, i8* %State, align 1, !dbg !5196
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5197
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 12, !dbg !5198
  store volatile i8 0, i8* %Mode, align 2, !dbg !5199
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5200
  %XferISR = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 7, !dbg !5201
  store i8 (%struct.__I2C_HandleTypeDef*, i32, i32)* null, i8 (%struct.__I2C_HandleTypeDef*, i32, i32)** %XferISR, align 4, !dbg !5202
  %5 = load i32, i32* %ITFlags.addr, align 4, !dbg !5203
  %and = and i32 %5, 4, !dbg !5203
  %cmp = icmp eq i32 %and, 4, !dbg !5203
  %6 = zext i1 %cmp to i64, !dbg !5203
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !5203
  %cmp1 = icmp ne i32 %cond, 0, !dbg !5204
  br i1 %cmp1, label %if.then, label %if.end9, !dbg !5203

if.then:                                          ; preds = %entry
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5205
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 0, !dbg !5206
  %8 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !5206
  %RXDR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %8, i32 0, i32 9, !dbg !5207
  %9 = load volatile i32, i32* %RXDR, align 4, !dbg !5207
  %conv = trunc i32 %9 to i8, !dbg !5208
  %10 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5209
  %pBuffPtr = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %10, i32 0, i32 2, !dbg !5210
  %11 = load i8*, i8** %pBuffPtr, align 4, !dbg !5210
  store i8 %conv, i8* %11, align 1, !dbg !5211
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5212
  %pBuffPtr2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 2, !dbg !5213
  %13 = load i8*, i8** %pBuffPtr2, align 4, !dbg !5214
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5214
  store i8* %incdec.ptr, i8** %pBuffPtr2, align 4, !dbg !5214
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5215
  %XferSize = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 3, !dbg !5216
  %15 = load i16, i16* %XferSize, align 4, !dbg !5216
  %conv3 = zext i16 %15 to i32, !dbg !5215
  %cmp4 = icmp ugt i32 %conv3, 0, !dbg !5217
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !5218

if.then6:                                         ; preds = %if.then
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5219
  %XferSize7 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 3, !dbg !5220
  %17 = load i16, i16* %XferSize7, align 4, !dbg !5221
  %dec = add i16 %17, -1, !dbg !5221
  store i16 %dec, i16* %XferSize7, align 4, !dbg !5221
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5222
  %XferCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %18, i32 0, i32 4, !dbg !5223
  %19 = load volatile i16, i16* %XferCount, align 2, !dbg !5224
  %dec8 = add i16 %19, -1, !dbg !5224
  store volatile i16 %dec8, i16* %XferCount, align 2, !dbg !5224
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5225
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 13, !dbg !5226
  %21 = load volatile i32, i32* %ErrorCode, align 4, !dbg !5227
  %or = or i32 %21, 4, !dbg !5227
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !5227
  br label %if.end, !dbg !5228

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end9, !dbg !5229

if.end9:                                          ; preds = %if.end, %entry
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5230
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %22, i16 zeroext -32765), !dbg !5231
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5232
  %Instance10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 0, !dbg !5232
  %24 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance10, align 4, !dbg !5232
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %24, i32 0, i32 7, !dbg !5232
  store volatile i32 16, i32* %ICR, align 4, !dbg !5232
  br label %do.body, !dbg !5233

do.body:                                          ; preds = %if.end9
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5233
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 10, !dbg !5233
  store i8 0, i8* %Lock, align 4, !dbg !5233
  br label %do.end, !dbg !5233

do.end:                                           ; preds = %do.body
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5234
  call arm_aapcs_vfpcc void @HAL_I2C_ListenCpltCallback(%struct.__I2C_HandleTypeDef* %26), !dbg !5235
  ret void, !dbg !5236
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_ITSlaveSeqCplt(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !5237 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %tmpcr1value = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5238
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !5238
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !5238
  %CR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 0, !dbg !5238
  %2 = load volatile i32, i32* %CR1, align 4, !dbg !5238
  store i32 %2, i32* %tmpcr1value, align 4, !dbg !5239
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5240
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 12, !dbg !5241
  store volatile i8 0, i8* %Mode, align 2, !dbg !5242
  %4 = load i32, i32* %tmpcr1value, align 4, !dbg !5243
  %and = and i32 %4, 16384, !dbg !5243
  %cmp = icmp eq i32 %and, 16384, !dbg !5243
  %5 = zext i1 %cmp to i64, !dbg !5243
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !5243
  %cmp1 = icmp ne i32 %cond, 0, !dbg !5244
  br i1 %cmp1, label %if.then, label %if.else, !dbg !5243

if.then:                                          ; preds = %entry
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5245
  %Instance2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 0, !dbg !5246
  %7 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance2, align 4, !dbg !5246
  %CR13 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %7, i32 0, i32 0, !dbg !5247
  %8 = load volatile i32, i32* %CR13, align 4, !dbg !5248
  %and4 = and i32 %8, -16385, !dbg !5248
  store volatile i32 %and4, i32* %CR13, align 4, !dbg !5248
  br label %if.end14, !dbg !5249

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %tmpcr1value, align 4, !dbg !5250
  %and5 = and i32 %9, 32768, !dbg !5250
  %cmp6 = icmp eq i32 %and5, 32768, !dbg !5250
  %10 = zext i1 %cmp6 to i64, !dbg !5250
  %cond7 = select i1 %cmp6, i32 1, i32 0, !dbg !5250
  %cmp8 = icmp ne i32 %cond7, 0, !dbg !5251
  br i1 %cmp8, label %if.then9, label %if.else13, !dbg !5250

if.then9:                                         ; preds = %if.else
  %11 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5252
  %Instance10 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %11, i32 0, i32 0, !dbg !5253
  %12 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance10, align 4, !dbg !5253
  %CR111 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %12, i32 0, i32 0, !dbg !5254
  %13 = load volatile i32, i32* %CR111, align 4, !dbg !5255
  %and12 = and i32 %13, -32769, !dbg !5255
  store volatile i32 %and12, i32* %CR111, align 4, !dbg !5255
  br label %if.end, !dbg !5256

if.else13:                                        ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5257
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 11, !dbg !5258
  %15 = load volatile i8, i8* %State, align 1, !dbg !5258
  %conv = zext i8 %15 to i32, !dbg !5257
  %cmp15 = icmp eq i32 %conv, 41, !dbg !5259
  br i1 %cmp15, label %if.then17, label %if.else19, !dbg !5257

if.then17:                                        ; preds = %if.end14
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5260
  %State18 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 11, !dbg !5261
  store volatile i8 40, i8* %State18, align 1, !dbg !5262
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5263
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 6, !dbg !5264
  store volatile i32 33, i32* %PreviousState, align 4, !dbg !5265
  %18 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5266
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %18, i16 zeroext 1), !dbg !5267
  br label %do.body, !dbg !5268

do.body:                                          ; preds = %if.then17
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5268
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 10, !dbg !5268
  store i8 0, i8* %Lock, align 4, !dbg !5268
  br label %do.end, !dbg !5268

do.end:                                           ; preds = %do.body
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5269
  call arm_aapcs_vfpcc void @HAL_I2C_SlaveTxCpltCallback(%struct.__I2C_HandleTypeDef* %20), !dbg !5270
  br label %if.end32, !dbg !5271

if.else19:                                        ; preds = %if.end14
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5272
  %State20 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %21, i32 0, i32 11, !dbg !5273
  %22 = load volatile i8, i8* %State20, align 1, !dbg !5273
  %conv21 = zext i8 %22 to i32, !dbg !5272
  %cmp22 = icmp eq i32 %conv21, 42, !dbg !5274
  br i1 %cmp22, label %if.then24, label %if.else30, !dbg !5272

if.then24:                                        ; preds = %if.else19
  %23 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5275
  %State25 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %23, i32 0, i32 11, !dbg !5276
  store volatile i8 40, i8* %State25, align 1, !dbg !5277
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5278
  %PreviousState26 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 6, !dbg !5279
  store volatile i32 34, i32* %PreviousState26, align 4, !dbg !5280
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5281
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %25, i16 zeroext 2), !dbg !5282
  br label %do.body27, !dbg !5283

do.body27:                                        ; preds = %if.then24
  %26 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5283
  %Lock28 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %26, i32 0, i32 10, !dbg !5283
  store i8 0, i8* %Lock28, align 4, !dbg !5283
  br label %do.end29, !dbg !5283

do.end29:                                         ; preds = %do.body27
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5284
  call arm_aapcs_vfpcc void @HAL_I2C_SlaveRxCpltCallback(%struct.__I2C_HandleTypeDef* %27), !dbg !5285
  br label %if.end31, !dbg !5286

if.else30:                                        ; preds = %if.else19
  br label %if.end31

if.end31:                                         ; preds = %if.else30, %do.end29
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %do.end
  ret void, !dbg !5287
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_ITAddrCplt(%struct.__I2C_HandleTypeDef* %hi2c, i32 %ITFlags) #0 !dbg !5288 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %ITFlags.addr = alloca i32, align 4
  %transferdirection = alloca i8, align 1
  %slaveaddrcode = alloca i16, align 2
  %ownadd1code = alloca i16, align 2
  %ownadd2code = alloca i16, align 2
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %ITFlags, i32* %ITFlags.addr, align 4
  %0 = load i32, i32* %ITFlags.addr, align 4, !dbg !5289
  %1 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5290
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %1, i32 0, i32 11, !dbg !5291
  %2 = load volatile i8, i8* %State, align 1, !dbg !5291
  %conv = zext i8 %2 to i32, !dbg !5292
  %and = and i32 %conv, 40, !dbg !5293
  %cmp = icmp eq i32 %and, 40, !dbg !5294
  br i1 %cmp, label %if.then, label %if.else41, !dbg !5295

if.then:                                          ; preds = %entry
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5296
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 0, !dbg !5296
  %4 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !5296
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %4, i32 0, i32 6, !dbg !5296
  %5 = load volatile i32, i32* %ISR, align 4, !dbg !5296
  %and2 = and i32 %5, 65536, !dbg !5296
  %shr = lshr i32 %and2, 16, !dbg !5296
  %conv3 = trunc i32 %shr to i8, !dbg !5296
  store i8 %conv3, i8* %transferdirection, align 1, !dbg !5297
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5298
  %Instance4 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 0, !dbg !5298
  %7 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance4, align 4, !dbg !5298
  %ISR5 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %7, i32 0, i32 6, !dbg !5298
  %8 = load volatile i32, i32* %ISR5, align 4, !dbg !5298
  %and6 = and i32 %8, 16646144, !dbg !5298
  %shr7 = lshr i32 %and6, 16, !dbg !5298
  %conv8 = trunc i32 %shr7 to i16, !dbg !5298
  store i16 %conv8, i16* %slaveaddrcode, align 2, !dbg !5299
  %9 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5300
  %Instance9 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %9, i32 0, i32 0, !dbg !5300
  %10 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance9, align 4, !dbg !5300
  %OAR1 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %10, i32 0, i32 2, !dbg !5300
  %11 = load volatile i32, i32* %OAR1, align 4, !dbg !5300
  %and10 = and i32 %11, 1023, !dbg !5300
  %conv11 = trunc i32 %and10 to i16, !dbg !5300
  store i16 %conv11, i16* %ownadd1code, align 2, !dbg !5301
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5302
  %Instance12 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 0, !dbg !5302
  %13 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance12, align 4, !dbg !5302
  %OAR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %13, i32 0, i32 3, !dbg !5302
  %14 = load volatile i32, i32* %OAR2, align 4, !dbg !5302
  %and13 = and i32 %14, 254, !dbg !5302
  %conv14 = trunc i32 %and13 to i16, !dbg !5302
  store i16 %conv14, i16* %ownadd2code, align 2, !dbg !5303
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5304
  %Init = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 1, !dbg !5305
  %AddressingMode = getelementptr inbounds %struct.I2C_InitTypeDef, %struct.I2C_InitTypeDef* %Init, i32 0, i32 2, !dbg !5306
  %16 = load i32, i32* %AddressingMode, align 4, !dbg !5306
  %cmp15 = icmp eq i32 %16, 2, !dbg !5307
  br i1 %cmp15, label %if.then17, label %if.else36, !dbg !5304

if.then17:                                        ; preds = %if.then
  %17 = load i16, i16* %slaveaddrcode, align 2, !dbg !5308
  %conv18 = zext i16 %17 to i32, !dbg !5308
  %and19 = and i32 %conv18, 6, !dbg !5309
  %18 = load i16, i16* %ownadd1code, align 2, !dbg !5310
  %conv20 = zext i16 %18 to i32, !dbg !5310
  %shr21 = ashr i32 %conv20, 7, !dbg !5311
  %and22 = and i32 %shr21, 6, !dbg !5312
  %cmp23 = icmp eq i32 %and19, %and22, !dbg !5313
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !5314

if.then25:                                        ; preds = %if.then17
  %19 = load i16, i16* %ownadd1code, align 2, !dbg !5315
  store i16 %19, i16* %slaveaddrcode, align 2, !dbg !5316
  %20 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5317
  %AddrEventCount = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %20, i32 0, i32 14, !dbg !5318
  %21 = load volatile i32, i32* %AddrEventCount, align 4, !dbg !5319
  %inc = add i32 %21, 1, !dbg !5319
  store volatile i32 %inc, i32* %AddrEventCount, align 4, !dbg !5319
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5320
  %AddrEventCount26 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 14, !dbg !5321
  %23 = load volatile i32, i32* %AddrEventCount26, align 4, !dbg !5321
  %cmp27 = icmp eq i32 %23, 2, !dbg !5322
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !5320

if.then29:                                        ; preds = %if.then25
  %24 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5323
  %AddrEventCount30 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %24, i32 0, i32 14, !dbg !5324
  store volatile i32 0, i32* %AddrEventCount30, align 4, !dbg !5325
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5326
  %Instance31 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 0, !dbg !5326
  %26 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance31, align 4, !dbg !5326
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %26, i32 0, i32 7, !dbg !5326
  store volatile i32 8, i32* %ICR, align 4, !dbg !5326
  br label %do.body, !dbg !5327

do.body:                                          ; preds = %if.then29
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5327
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 10, !dbg !5327
  store i8 0, i8* %Lock, align 4, !dbg !5327
  br label %do.end, !dbg !5327

do.end:                                           ; preds = %do.body
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5328
  %29 = load i8, i8* %transferdirection, align 1, !dbg !5329
  %30 = load i16, i16* %slaveaddrcode, align 2, !dbg !5330
  call arm_aapcs_vfpcc void @HAL_I2C_AddrCallback(%struct.__I2C_HandleTypeDef* %28, i8 zeroext %29, i16 zeroext %30), !dbg !5331
  br label %if.end, !dbg !5332

if.end:                                           ; preds = %do.end, %if.then25
  br label %if.end35, !dbg !5333

if.else:                                          ; preds = %if.then17
  %31 = load i16, i16* %ownadd2code, align 2, !dbg !5334
  store i16 %31, i16* %slaveaddrcode, align 2, !dbg !5335
  %32 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5336
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %32, i16 zeroext -32768), !dbg !5337
  br label %do.body32, !dbg !5338

do.body32:                                        ; preds = %if.else
  %33 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5338
  %Lock33 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %33, i32 0, i32 10, !dbg !5338
  store i8 0, i8* %Lock33, align 4, !dbg !5338
  br label %do.end34, !dbg !5338

do.end34:                                         ; preds = %do.body32
  %34 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5339
  %35 = load i8, i8* %transferdirection, align 1, !dbg !5340
  %36 = load i16, i16* %slaveaddrcode, align 2, !dbg !5341
  call arm_aapcs_vfpcc void @HAL_I2C_AddrCallback(%struct.__I2C_HandleTypeDef* %34, i8 zeroext %35, i16 zeroext %36), !dbg !5342
  br label %if.end35

if.end35:                                         ; preds = %do.end34, %if.end
  br label %if.end40, !dbg !5343

if.else36:                                        ; preds = %if.then
  %37 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5344
  call arm_aapcs_vfpcc void @I2C_Disable_IRQ(%struct.__I2C_HandleTypeDef* %37, i16 zeroext -32768), !dbg !5345
  br label %do.body37, !dbg !5346

do.body37:                                        ; preds = %if.else36
  %38 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5346
  %Lock38 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %38, i32 0, i32 10, !dbg !5346
  store i8 0, i8* %Lock38, align 4, !dbg !5346
  br label %do.end39, !dbg !5346

do.end39:                                         ; preds = %do.body37
  %39 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5347
  %40 = load i8, i8* %transferdirection, align 1, !dbg !5348
  %41 = load i16, i16* %slaveaddrcode, align 2, !dbg !5349
  call arm_aapcs_vfpcc void @HAL_I2C_AddrCallback(%struct.__I2C_HandleTypeDef* %39, i8 zeroext %40, i16 zeroext %41), !dbg !5350
  br label %if.end40

if.end40:                                         ; preds = %do.end39, %if.end35
  br label %if.end47, !dbg !5351

if.else41:                                        ; preds = %entry
  %42 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5352
  %Instance42 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %42, i32 0, i32 0, !dbg !5352
  %43 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance42, align 4, !dbg !5352
  %ICR43 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %43, i32 0, i32 7, !dbg !5352
  store volatile i32 8, i32* %ICR43, align 4, !dbg !5352
  br label %do.body44, !dbg !5353

do.body44:                                        ; preds = %if.else41
  %44 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5353
  %Lock45 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %44, i32 0, i32 10, !dbg !5353
  store i8 0, i8* %Lock45, align 4, !dbg !5353
  br label %do.end46, !dbg !5353

do.end46:                                         ; preds = %do.body44
  br label %if.end47

if.end47:                                         ; preds = %do.end46, %if.end40
  ret void, !dbg !5354
}

declare dso_local arm_aapcs_vfpcc zeroext i8 @HAL_DMA_GetState(%struct.__DMA_HandleTypeDef*) #1

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc void @I2C_TreatErrorCallback(%struct.__I2C_HandleTypeDef* %hi2c) #0 !dbg !5355 {
entry:
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5356
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 11, !dbg !5357
  %1 = load volatile i8, i8* %State, align 1, !dbg !5357
  %conv = zext i8 %1 to i32, !dbg !5356
  %cmp = icmp eq i32 %conv, 96, !dbg !5358
  br i1 %cmp, label %if.then, label %if.else, !dbg !5356

if.then:                                          ; preds = %entry
  %2 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5359
  %State2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %2, i32 0, i32 11, !dbg !5360
  store volatile i8 32, i8* %State2, align 1, !dbg !5361
  %3 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5362
  %PreviousState = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %3, i32 0, i32 6, !dbg !5363
  store volatile i32 0, i32* %PreviousState, align 4, !dbg !5364
  br label %do.body, !dbg !5365

do.body:                                          ; preds = %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5365
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 10, !dbg !5365
  store i8 0, i8* %Lock, align 4, !dbg !5365
  br label %do.end, !dbg !5365

do.end:                                           ; preds = %do.body
  %5 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5366
  call arm_aapcs_vfpcc void @HAL_I2C_AbortCpltCallback(%struct.__I2C_HandleTypeDef* %5), !dbg !5367
  br label %if.end, !dbg !5368

if.else:                                          ; preds = %entry
  %6 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5369
  %PreviousState3 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %6, i32 0, i32 6, !dbg !5370
  store volatile i32 0, i32* %PreviousState3, align 4, !dbg !5371
  br label %do.body4, !dbg !5372

do.body4:                                         ; preds = %if.else
  %7 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5372
  %Lock5 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %7, i32 0, i32 10, !dbg !5372
  store i8 0, i8* %Lock5, align 4, !dbg !5372
  br label %do.end6, !dbg !5372

do.end6:                                          ; preds = %do.body4
  %8 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5373
  call arm_aapcs_vfpcc void @HAL_I2C_ErrorCallback(%struct.__I2C_HandleTypeDef* %8), !dbg !5374
  br label %if.end

if.end:                                           ; preds = %do.end6, %do.end
  ret void, !dbg !5375
}

; Function Attrs: noinline nounwind optnone
define internal arm_aapcs_vfpcc zeroext i8 @I2C_IsAcknowledgeFailed(%struct.__I2C_HandleTypeDef* %hi2c, i32 %Timeout, i32 %Tickstart) #0 !dbg !5376 {
entry:
  %retval = alloca i8, align 1
  %hi2c.addr = alloca %struct.__I2C_HandleTypeDef*, align 4
  %Timeout.addr = alloca i32, align 4
  %Tickstart.addr = alloca i32, align 4
  store %struct.__I2C_HandleTypeDef* %hi2c, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4
  store i32 %Timeout, i32* %Timeout.addr, align 4
  store i32 %Tickstart, i32* %Tickstart.addr, align 4
  %0 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5377
  %Instance = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %0, i32 0, i32 0, !dbg !5377
  %1 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance, align 4, !dbg !5377
  %ISR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %1, i32 0, i32 6, !dbg !5377
  %2 = load volatile i32, i32* %ISR, align 4, !dbg !5377
  %and = and i32 %2, 16, !dbg !5377
  %cmp = icmp eq i32 %and, 16, !dbg !5377
  %3 = zext i1 %cmp to i64, !dbg !5377
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !5377
  %cmp1 = icmp eq i32 %cond, 1, !dbg !5378
  br i1 %cmp1, label %if.then, label %if.end26, !dbg !5377

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !5379

while.cond:                                       ; preds = %if.end13, %if.then
  %4 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5380
  %Instance2 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %4, i32 0, i32 0, !dbg !5380
  %5 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance2, align 4, !dbg !5380
  %ISR3 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %5, i32 0, i32 6, !dbg !5380
  %6 = load volatile i32, i32* %ISR3, align 4, !dbg !5380
  %and4 = and i32 %6, 32, !dbg !5380
  %cmp5 = icmp eq i32 %and4, 32, !dbg !5380
  %7 = zext i1 %cmp5 to i64, !dbg !5380
  %cond6 = select i1 %cmp5, i32 1, i32 0, !dbg !5380
  %cmp7 = icmp eq i32 %cond6, 0, !dbg !5381
  br i1 %cmp7, label %while.body, label %while.end, !dbg !5379

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %Timeout.addr, align 4, !dbg !5382
  %cmp8 = icmp ne i32 %8, -1, !dbg !5383
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !5382

if.then9:                                         ; preds = %while.body
  %call = call arm_aapcs_vfpcc i32 @HAL_GetTick(), !dbg !5384
  %9 = load i32, i32* %Tickstart.addr, align 4, !dbg !5385
  %sub = sub i32 %call, %9, !dbg !5386
  %10 = load i32, i32* %Timeout.addr, align 4, !dbg !5387
  %cmp10 = icmp ugt i32 %sub, %10, !dbg !5388
  br i1 %cmp10, label %if.then12, label %lor.lhs.false, !dbg !5389

lor.lhs.false:                                    ; preds = %if.then9
  %11 = load i32, i32* %Timeout.addr, align 4, !dbg !5390
  %cmp11 = icmp eq i32 %11, 0, !dbg !5391
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !5392

if.then12:                                        ; preds = %lor.lhs.false, %if.then9
  %12 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5393
  %ErrorCode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %12, i32 0, i32 13, !dbg !5394
  %13 = load volatile i32, i32* %ErrorCode, align 4, !dbg !5395
  %or = or i32 %13, 32, !dbg !5395
  store volatile i32 %or, i32* %ErrorCode, align 4, !dbg !5395
  %14 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5396
  %State = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %14, i32 0, i32 11, !dbg !5397
  store volatile i8 32, i8* %State, align 1, !dbg !5398
  %15 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5399
  %Mode = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %15, i32 0, i32 12, !dbg !5400
  store volatile i8 0, i8* %Mode, align 2, !dbg !5401
  br label %do.body, !dbg !5402

do.body:                                          ; preds = %if.then12
  %16 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5402
  %Lock = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %16, i32 0, i32 10, !dbg !5402
  store i8 0, i8* %Lock, align 4, !dbg !5402
  br label %do.end, !dbg !5402

do.end:                                           ; preds = %do.body
  store i8 1, i8* %retval, align 1, !dbg !5403
  br label %return, !dbg !5403

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end13, !dbg !5404

if.end13:                                         ; preds = %if.end, %while.body
  br label %while.cond, !dbg !5379, !llvm.loop !5405

while.end:                                        ; preds = %while.cond
  %17 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5407
  %Instance14 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %17, i32 0, i32 0, !dbg !5407
  %18 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance14, align 4, !dbg !5407
  %ICR = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %18, i32 0, i32 7, !dbg !5407
  store volatile i32 16, i32* %ICR, align 4, !dbg !5407
  %19 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5408
  %Instance15 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %19, i32 0, i32 0, !dbg !5408
  %20 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance15, align 4, !dbg !5408
  %ICR16 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %20, i32 0, i32 7, !dbg !5408
  store volatile i32 32, i32* %ICR16, align 4, !dbg !5408
  %21 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5409
  call arm_aapcs_vfpcc void @I2C_Flush_TXDR(%struct.__I2C_HandleTypeDef* %21), !dbg !5410
  %22 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5411
  %Instance17 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %22, i32 0, i32 0, !dbg !5411
  %23 = load %struct.I2C_TypeDef*, %struct.I2C_TypeDef** %Instance17, align 4, !dbg !5411
  %CR2 = getelementptr inbounds %struct.I2C_TypeDef, %struct.I2C_TypeDef* %23, i32 0, i32 1, !dbg !5411
  %24 = load volatile i32, i32* %CR2, align 4, !dbg !5411
  %and18 = and i32 %24, -33495040, !dbg !5411
  store volatile i32 %and18, i32* %CR2, align 4, !dbg !5411
  %25 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5412
  %ErrorCode19 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %25, i32 0, i32 13, !dbg !5413
  %26 = load volatile i32, i32* %ErrorCode19, align 4, !dbg !5414
  %or20 = or i32 %26, 4, !dbg !5414
  store volatile i32 %or20, i32* %ErrorCode19, align 4, !dbg !5414
  %27 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5415
  %State21 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %27, i32 0, i32 11, !dbg !5416
  store volatile i8 32, i8* %State21, align 1, !dbg !5417
  %28 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5418
  %Mode22 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %28, i32 0, i32 12, !dbg !5419
  store volatile i8 0, i8* %Mode22, align 2, !dbg !5420
  br label %do.body23, !dbg !5421

do.body23:                                        ; preds = %while.end
  %29 = load %struct.__I2C_HandleTypeDef*, %struct.__I2C_HandleTypeDef** %hi2c.addr, align 4, !dbg !5421
  %Lock24 = getelementptr inbounds %struct.__I2C_HandleTypeDef, %struct.__I2C_HandleTypeDef* %29, i32 0, i32 10, !dbg !5421
  store i8 0, i8* %Lock24, align 4, !dbg !5421
  br label %do.end25, !dbg !5421

do.end25:                                         ; preds = %do.body23
  store i8 1, i8* %retval, align 1, !dbg !5422
  br label %return, !dbg !5422

if.end26:                                         ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5423
  br label %return, !dbg !5423

return:                                           ; preds = %if.end26, %do.end25, %do.end
  %30 = load i8, i8* %retval, align 1, !dbg !5424
  ret i8 %30, !dbg !5424
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m33" "target-features"="+armv8-m.main,+dsp,+fp-armv8d16sp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-lob,-mve,-mve.fp,-neon,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m33" "target-features"="+armv8-m.main,+dsp,+fp-armv8d16sp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-lob,-mve,-mve.fp,-neon,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.0 ", isOptimized: false, runtimeVersion: 0, emissionKind: LineTablesOnly, enums: !2, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "../Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_i2c.c", directory: "/home/fdl/Desktop/llvm_build_source/test_apps/light-controller/NonSecure")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{i32 1, !"min_enum_size", i32 1}
!7 = !{!"clang version 10.0.0 "}
!8 = distinct !DISubprogram(name: "HAL_I2C_Init", scope: !1, file: !1, line: 476, type: !9, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!9 = !DISubroutineType(types: !2)
!10 = !DILocation(line: 479, column: 7, scope: !8)
!11 = !DILocation(line: 479, column: 12, scope: !8)
!12 = !DILocation(line: 481, column: 5, scope: !8)
!13 = !DILocation(line: 494, column: 7, scope: !8)
!14 = !DILocation(line: 494, column: 13, scope: !8)
!15 = !DILocation(line: 494, column: 19, scope: !8)
!16 = !DILocation(line: 497, column: 5, scope: !8)
!17 = !DILocation(line: 497, column: 11, scope: !8)
!18 = !DILocation(line: 497, column: 16, scope: !8)
!19 = !DILocation(line: 521, column: 21, scope: !8)
!20 = !DILocation(line: 521, column: 5, scope: !8)
!21 = !DILocation(line: 523, column: 3, scope: !8)
!22 = !DILocation(line: 525, column: 3, scope: !8)
!23 = !DILocation(line: 525, column: 9, scope: !8)
!24 = !DILocation(line: 525, column: 15, scope: !8)
!25 = !DILocation(line: 528, column: 3, scope: !8)
!26 = !DILocation(line: 532, column: 29, scope: !8)
!27 = !DILocation(line: 532, column: 35, scope: !8)
!28 = !DILocation(line: 532, column: 40, scope: !8)
!29 = !DILocation(line: 532, column: 47, scope: !8)
!30 = !DILocation(line: 532, column: 3, scope: !8)
!31 = !DILocation(line: 532, column: 9, scope: !8)
!32 = !DILocation(line: 532, column: 19, scope: !8)
!33 = !DILocation(line: 532, column: 27, scope: !8)
!34 = !DILocation(line: 536, column: 3, scope: !8)
!35 = !DILocation(line: 536, column: 9, scope: !8)
!36 = !DILocation(line: 536, column: 19, scope: !8)
!37 = !DILocation(line: 536, column: 24, scope: !8)
!38 = !DILocation(line: 539, column: 7, scope: !8)
!39 = !DILocation(line: 539, column: 13, scope: !8)
!40 = !DILocation(line: 539, column: 18, scope: !8)
!41 = !DILocation(line: 539, column: 33, scope: !8)
!42 = !DILocation(line: 541, column: 46, scope: !8)
!43 = !DILocation(line: 541, column: 52, scope: !8)
!44 = !DILocation(line: 541, column: 57, scope: !8)
!45 = !DILocation(line: 541, column: 44, scope: !8)
!46 = !DILocation(line: 541, column: 5, scope: !8)
!47 = !DILocation(line: 541, column: 11, scope: !8)
!48 = !DILocation(line: 541, column: 21, scope: !8)
!49 = !DILocation(line: 541, column: 26, scope: !8)
!50 = !DILocation(line: 542, column: 3, scope: !8)
!51 = !DILocation(line: 545, column: 65, scope: !8)
!52 = !DILocation(line: 545, column: 71, scope: !8)
!53 = !DILocation(line: 545, column: 76, scope: !8)
!54 = !DILocation(line: 545, column: 63, scope: !8)
!55 = !DILocation(line: 545, column: 5, scope: !8)
!56 = !DILocation(line: 545, column: 11, scope: !8)
!57 = !DILocation(line: 545, column: 21, scope: !8)
!58 = !DILocation(line: 545, column: 26, scope: !8)
!59 = !DILocation(line: 550, column: 7, scope: !8)
!60 = !DILocation(line: 550, column: 13, scope: !8)
!61 = !DILocation(line: 550, column: 18, scope: !8)
!62 = !DILocation(line: 550, column: 33, scope: !8)
!63 = !DILocation(line: 552, column: 5, scope: !8)
!64 = !DILocation(line: 552, column: 11, scope: !8)
!65 = !DILocation(line: 552, column: 21, scope: !8)
!66 = !DILocation(line: 552, column: 25, scope: !8)
!67 = !DILocation(line: 553, column: 3, scope: !8)
!68 = !DILocation(line: 555, column: 3, scope: !8)
!69 = !DILocation(line: 555, column: 9, scope: !8)
!70 = !DILocation(line: 555, column: 19, scope: !8)
!71 = !DILocation(line: 555, column: 23, scope: !8)
!72 = !DILocation(line: 559, column: 3, scope: !8)
!73 = !DILocation(line: 559, column: 9, scope: !8)
!74 = !DILocation(line: 559, column: 19, scope: !8)
!75 = !DILocation(line: 559, column: 24, scope: !8)
!76 = !DILocation(line: 562, column: 27, scope: !8)
!77 = !DILocation(line: 562, column: 33, scope: !8)
!78 = !DILocation(line: 562, column: 38, scope: !8)
!79 = !DILocation(line: 562, column: 56, scope: !8)
!80 = !DILocation(line: 562, column: 62, scope: !8)
!81 = !DILocation(line: 562, column: 67, scope: !8)
!82 = !DILocation(line: 562, column: 54, scope: !8)
!83 = !DILocation(line: 562, column: 82, scope: !8)
!84 = !DILocation(line: 562, column: 88, scope: !8)
!85 = !DILocation(line: 562, column: 93, scope: !8)
!86 = !DILocation(line: 562, column: 110, scope: !8)
!87 = !DILocation(line: 562, column: 79, scope: !8)
!88 = !DILocation(line: 562, column: 3, scope: !8)
!89 = !DILocation(line: 562, column: 9, scope: !8)
!90 = !DILocation(line: 562, column: 19, scope: !8)
!91 = !DILocation(line: 562, column: 24, scope: !8)
!92 = !DILocation(line: 566, column: 26, scope: !8)
!93 = !DILocation(line: 566, column: 32, scope: !8)
!94 = !DILocation(line: 566, column: 37, scope: !8)
!95 = !DILocation(line: 566, column: 55, scope: !8)
!96 = !DILocation(line: 566, column: 61, scope: !8)
!97 = !DILocation(line: 566, column: 66, scope: !8)
!98 = !DILocation(line: 566, column: 53, scope: !8)
!99 = !DILocation(line: 566, column: 3, scope: !8)
!100 = !DILocation(line: 566, column: 9, scope: !8)
!101 = !DILocation(line: 566, column: 19, scope: !8)
!102 = !DILocation(line: 566, column: 23, scope: !8)
!103 = !DILocation(line: 569, column: 3, scope: !8)
!104 = !DILocation(line: 571, column: 3, scope: !8)
!105 = !DILocation(line: 571, column: 9, scope: !8)
!106 = !DILocation(line: 571, column: 19, scope: !8)
!107 = !DILocation(line: 572, column: 3, scope: !8)
!108 = !DILocation(line: 572, column: 9, scope: !8)
!109 = !DILocation(line: 572, column: 15, scope: !8)
!110 = !DILocation(line: 573, column: 3, scope: !8)
!111 = !DILocation(line: 573, column: 9, scope: !8)
!112 = !DILocation(line: 573, column: 23, scope: !8)
!113 = !DILocation(line: 574, column: 3, scope: !8)
!114 = !DILocation(line: 574, column: 9, scope: !8)
!115 = !DILocation(line: 574, column: 14, scope: !8)
!116 = !DILocation(line: 576, column: 3, scope: !8)
!117 = !DILocation(line: 577, column: 1, scope: !8)
!118 = distinct !DISubprogram(name: "HAL_I2C_MspInit", scope: !1, file: !1, line: 631, type: !9, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!119 = !DILocation(line: 634, column: 3, scope: !118)
!120 = !DILocation(line: 639, column: 1, scope: !118)
!121 = distinct !DISubprogram(name: "HAL_I2C_DeInit", scope: !1, file: !1, line: 585, type: !9, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!122 = !DILocation(line: 588, column: 7, scope: !121)
!123 = !DILocation(line: 588, column: 12, scope: !121)
!124 = !DILocation(line: 590, column: 5, scope: !121)
!125 = !DILocation(line: 596, column: 3, scope: !121)
!126 = !DILocation(line: 596, column: 9, scope: !121)
!127 = !DILocation(line: 596, column: 15, scope: !121)
!128 = !DILocation(line: 599, column: 3, scope: !121)
!129 = !DILocation(line: 611, column: 21, scope: !121)
!130 = !DILocation(line: 611, column: 3, scope: !121)
!131 = !DILocation(line: 614, column: 3, scope: !121)
!132 = !DILocation(line: 614, column: 9, scope: !121)
!133 = !DILocation(line: 614, column: 19, scope: !121)
!134 = !DILocation(line: 615, column: 3, scope: !121)
!135 = !DILocation(line: 615, column: 9, scope: !121)
!136 = !DILocation(line: 615, column: 15, scope: !121)
!137 = !DILocation(line: 616, column: 3, scope: !121)
!138 = !DILocation(line: 616, column: 9, scope: !121)
!139 = !DILocation(line: 616, column: 23, scope: !121)
!140 = !DILocation(line: 617, column: 3, scope: !121)
!141 = !DILocation(line: 617, column: 9, scope: !121)
!142 = !DILocation(line: 617, column: 14, scope: !121)
!143 = !DILocation(line: 620, column: 3, scope: !121)
!144 = !DILocation(line: 622, column: 3, scope: !121)
!145 = !DILocation(line: 623, column: 1, scope: !121)
!146 = distinct !DISubprogram(name: "HAL_I2C_MspDeInit", scope: !1, file: !1, line: 647, type: !9, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!147 = !DILocation(line: 650, column: 3, scope: !146)
!148 = !DILocation(line: 655, column: 1, scope: !146)
!149 = distinct !DISubprogram(name: "HAL_I2C_Master_Transmit", scope: !1, file: !1, line: 1068, type: !9, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!150 = !DILocation(line: 1073, column: 7, scope: !149)
!151 = !DILocation(line: 1073, column: 13, scope: !149)
!152 = !DILocation(line: 1073, column: 19, scope: !149)
!153 = !DILocation(line: 1076, column: 5, scope: !149)
!154 = !DILocation(line: 1079, column: 17, scope: !149)
!155 = !DILocation(line: 1079, column: 15, scope: !149)
!156 = !DILocation(line: 1081, column: 36, scope: !149)
!157 = !DILocation(line: 1081, column: 80, scope: !149)
!158 = !DILocation(line: 1081, column: 9, scope: !149)
!159 = !DILocation(line: 1081, column: 91, scope: !149)
!160 = !DILocation(line: 1083, column: 7, scope: !149)
!161 = !DILocation(line: 1086, column: 5, scope: !149)
!162 = !DILocation(line: 1086, column: 11, scope: !149)
!163 = !DILocation(line: 1086, column: 21, scope: !149)
!164 = !DILocation(line: 1087, column: 5, scope: !149)
!165 = !DILocation(line: 1087, column: 11, scope: !149)
!166 = !DILocation(line: 1087, column: 21, scope: !149)
!167 = !DILocation(line: 1088, column: 5, scope: !149)
!168 = !DILocation(line: 1088, column: 11, scope: !149)
!169 = !DILocation(line: 1088, column: 21, scope: !149)
!170 = !DILocation(line: 1091, column: 23, scope: !149)
!171 = !DILocation(line: 1091, column: 5, scope: !149)
!172 = !DILocation(line: 1091, column: 11, scope: !149)
!173 = !DILocation(line: 1091, column: 21, scope: !149)
!174 = !DILocation(line: 1092, column: 23, scope: !149)
!175 = !DILocation(line: 1092, column: 5, scope: !149)
!176 = !DILocation(line: 1092, column: 11, scope: !149)
!177 = !DILocation(line: 1092, column: 21, scope: !149)
!178 = !DILocation(line: 1093, column: 5, scope: !149)
!179 = !DILocation(line: 1093, column: 11, scope: !149)
!180 = !DILocation(line: 1093, column: 21, scope: !149)
!181 = !DILocation(line: 1097, column: 9, scope: !149)
!182 = !DILocation(line: 1097, column: 15, scope: !149)
!183 = !DILocation(line: 1097, column: 25, scope: !149)
!184 = !DILocation(line: 1099, column: 7, scope: !149)
!185 = !DILocation(line: 1099, column: 13, scope: !149)
!186 = !DILocation(line: 1099, column: 22, scope: !149)
!187 = !DILocation(line: 1100, column: 26, scope: !149)
!188 = !DILocation(line: 1100, column: 32, scope: !149)
!189 = !DILocation(line: 1100, column: 53, scope: !149)
!190 = !DILocation(line: 1100, column: 59, scope: !149)
!191 = !DILocation(line: 1100, column: 44, scope: !149)
!192 = !DILocation(line: 1100, column: 7, scope: !149)
!193 = !DILocation(line: 1101, column: 5, scope: !149)
!194 = !DILocation(line: 1104, column: 24, scope: !149)
!195 = !DILocation(line: 1104, column: 30, scope: !149)
!196 = !DILocation(line: 1104, column: 7, scope: !149)
!197 = !DILocation(line: 1104, column: 13, scope: !149)
!198 = !DILocation(line: 1104, column: 22, scope: !149)
!199 = !DILocation(line: 1105, column: 26, scope: !149)
!200 = !DILocation(line: 1105, column: 32, scope: !149)
!201 = !DILocation(line: 1105, column: 53, scope: !149)
!202 = !DILocation(line: 1105, column: 59, scope: !149)
!203 = !DILocation(line: 1105, column: 44, scope: !149)
!204 = !DILocation(line: 1105, column: 7, scope: !149)
!205 = !DILocation(line: 1108, column: 5, scope: !149)
!206 = !DILocation(line: 1108, column: 12, scope: !149)
!207 = !DILocation(line: 1108, column: 18, scope: !149)
!208 = !DILocation(line: 1108, column: 28, scope: !149)
!209 = !DILocation(line: 1111, column: 42, scope: !149)
!210 = !DILocation(line: 1111, column: 48, scope: !149)
!211 = !DILocation(line: 1111, column: 57, scope: !149)
!212 = !DILocation(line: 1111, column: 11, scope: !149)
!213 = !DILocation(line: 1111, column: 68, scope: !149)
!214 = !DILocation(line: 1113, column: 9, scope: !149)
!215 = !DILocation(line: 1116, column: 31, scope: !149)
!216 = !DILocation(line: 1116, column: 37, scope: !149)
!217 = !DILocation(line: 1116, column: 30, scope: !149)
!218 = !DILocation(line: 1116, column: 7, scope: !149)
!219 = !DILocation(line: 1116, column: 13, scope: !149)
!220 = !DILocation(line: 1116, column: 23, scope: !149)
!221 = !DILocation(line: 1116, column: 28, scope: !149)
!222 = !DILocation(line: 1119, column: 7, scope: !149)
!223 = !DILocation(line: 1119, column: 13, scope: !149)
!224 = !DILocation(line: 1119, column: 21, scope: !149)
!225 = !DILocation(line: 1121, column: 7, scope: !149)
!226 = !DILocation(line: 1121, column: 13, scope: !149)
!227 = !DILocation(line: 1121, column: 22, scope: !149)
!228 = !DILocation(line: 1122, column: 7, scope: !149)
!229 = !DILocation(line: 1122, column: 13, scope: !149)
!230 = !DILocation(line: 1122, column: 21, scope: !149)
!231 = !DILocation(line: 1124, column: 12, scope: !149)
!232 = !DILocation(line: 1124, column: 18, scope: !149)
!233 = !DILocation(line: 1124, column: 28, scope: !149)
!234 = !DILocation(line: 1124, column: 35, scope: !149)
!235 = !DILocation(line: 1124, column: 39, scope: !149)
!236 = !DILocation(line: 1124, column: 45, scope: !149)
!237 = !DILocation(line: 1124, column: 54, scope: !149)
!238 = !DILocation(line: 1124, column: 11, scope: !149)
!239 = !DILocation(line: 1127, column: 40, scope: !149)
!240 = !DILocation(line: 1127, column: 67, scope: !149)
!241 = !DILocation(line: 1127, column: 76, scope: !149)
!242 = !DILocation(line: 1127, column: 13, scope: !149)
!243 = !DILocation(line: 1127, column: 87, scope: !149)
!244 = !DILocation(line: 1129, column: 11, scope: !149)
!245 = !DILocation(line: 1132, column: 13, scope: !149)
!246 = !DILocation(line: 1132, column: 19, scope: !149)
!247 = !DILocation(line: 1132, column: 29, scope: !149)
!248 = !DILocation(line: 1134, column: 11, scope: !149)
!249 = !DILocation(line: 1134, column: 17, scope: !149)
!250 = !DILocation(line: 1134, column: 26, scope: !149)
!251 = !DILocation(line: 1135, column: 30, scope: !149)
!252 = !DILocation(line: 1135, column: 36, scope: !149)
!253 = !DILocation(line: 1135, column: 57, scope: !149)
!254 = !DILocation(line: 1135, column: 63, scope: !149)
!255 = !DILocation(line: 1135, column: 48, scope: !149)
!256 = !DILocation(line: 1135, column: 11, scope: !149)
!257 = !DILocation(line: 1136, column: 9, scope: !149)
!258 = !DILocation(line: 1139, column: 28, scope: !149)
!259 = !DILocation(line: 1139, column: 34, scope: !149)
!260 = !DILocation(line: 1139, column: 11, scope: !149)
!261 = !DILocation(line: 1139, column: 17, scope: !149)
!262 = !DILocation(line: 1139, column: 26, scope: !149)
!263 = !DILocation(line: 1140, column: 30, scope: !149)
!264 = !DILocation(line: 1140, column: 36, scope: !149)
!265 = !DILocation(line: 1140, column: 57, scope: !149)
!266 = !DILocation(line: 1140, column: 63, scope: !149)
!267 = !DILocation(line: 1140, column: 48, scope: !149)
!268 = !DILocation(line: 1140, column: 11, scope: !149)
!269 = !DILocation(line: 1142, column: 7, scope: !149)
!270 = distinct !{!270, !205, !271}
!271 = !DILocation(line: 1143, column: 5, scope: !149)
!272 = !DILocation(line: 1147, column: 40, scope: !149)
!273 = !DILocation(line: 1147, column: 46, scope: !149)
!274 = !DILocation(line: 1147, column: 55, scope: !149)
!275 = !DILocation(line: 1147, column: 9, scope: !149)
!276 = !DILocation(line: 1147, column: 66, scope: !149)
!277 = !DILocation(line: 1149, column: 7, scope: !149)
!278 = !DILocation(line: 1153, column: 5, scope: !149)
!279 = !DILocation(line: 1156, column: 5, scope: !149)
!280 = !DILocation(line: 1158, column: 5, scope: !149)
!281 = !DILocation(line: 1158, column: 11, scope: !149)
!282 = !DILocation(line: 1158, column: 17, scope: !149)
!283 = !DILocation(line: 1159, column: 5, scope: !149)
!284 = !DILocation(line: 1159, column: 11, scope: !149)
!285 = !DILocation(line: 1159, column: 17, scope: !149)
!286 = !DILocation(line: 1162, column: 5, scope: !149)
!287 = !DILocation(line: 1164, column: 5, scope: !149)
!288 = !DILocation(line: 1168, column: 5, scope: !149)
!289 = !DILocation(line: 1170, column: 1, scope: !149)
!290 = distinct !DISubprogram(name: "I2C_WaitOnFlagUntilTimeout", scope: !1, file: !1, line: 6220, type: !9, scopeLine: 6222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!291 = !DILocation(line: 6223, column: 3, scope: !290)
!292 = !DILocation(line: 6223, column: 10, scope: !290)
!293 = !DILocation(line: 6223, column: 44, scope: !290)
!294 = !DILocation(line: 6223, column: 41, scope: !290)
!295 = !DILocation(line: 6226, column: 9, scope: !290)
!296 = !DILocation(line: 6226, column: 17, scope: !290)
!297 = !DILocation(line: 6228, column: 13, scope: !290)
!298 = !DILocation(line: 6228, column: 29, scope: !290)
!299 = !DILocation(line: 6228, column: 27, scope: !290)
!300 = !DILocation(line: 6228, column: 42, scope: !290)
!301 = !DILocation(line: 6228, column: 40, scope: !290)
!302 = !DILocation(line: 6228, column: 51, scope: !290)
!303 = !DILocation(line: 6228, column: 55, scope: !290)
!304 = !DILocation(line: 6228, column: 63, scope: !290)
!305 = !DILocation(line: 6228, column: 11, scope: !290)
!306 = !DILocation(line: 6230, column: 9, scope: !290)
!307 = !DILocation(line: 6230, column: 15, scope: !290)
!308 = !DILocation(line: 6230, column: 25, scope: !290)
!309 = !DILocation(line: 6231, column: 9, scope: !290)
!310 = !DILocation(line: 6231, column: 15, scope: !290)
!311 = !DILocation(line: 6231, column: 21, scope: !290)
!312 = !DILocation(line: 6232, column: 9, scope: !290)
!313 = !DILocation(line: 6232, column: 15, scope: !290)
!314 = !DILocation(line: 6232, column: 20, scope: !290)
!315 = !DILocation(line: 6235, column: 9, scope: !290)
!316 = !DILocation(line: 6236, column: 9, scope: !290)
!317 = !DILocation(line: 6238, column: 5, scope: !290)
!318 = distinct !{!318, !291, !319}
!319 = !DILocation(line: 6239, column: 3, scope: !290)
!320 = !DILocation(line: 6240, column: 3, scope: !290)
!321 = !DILocation(line: 6241, column: 1, scope: !290)
!322 = distinct !DISubprogram(name: "I2C_TransferConfig", scope: !1, file: !1, line: 6453, type: !9, scopeLine: 6455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!323 = !DILocation(line: 6462, column: 3, scope: !322)
!324 = !DILocation(line: 6467, column: 1, scope: !322)
!325 = distinct !DISubprogram(name: "I2C_WaitOnTXISFlagUntilTimeout", scope: !1, file: !1, line: 6251, type: !9, scopeLine: 6252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!326 = !DILocation(line: 6253, column: 3, scope: !325)
!327 = !DILocation(line: 6253, column: 10, scope: !325)
!328 = !DILocation(line: 6253, column: 50, scope: !325)
!329 = !DILocation(line: 6256, column: 33, scope: !325)
!330 = !DILocation(line: 6256, column: 39, scope: !325)
!331 = !DILocation(line: 6256, column: 48, scope: !325)
!332 = !DILocation(line: 6256, column: 9, scope: !325)
!333 = !DILocation(line: 6256, column: 59, scope: !325)
!334 = !DILocation(line: 6258, column: 7, scope: !325)
!335 = !DILocation(line: 6262, column: 9, scope: !325)
!336 = !DILocation(line: 6262, column: 17, scope: !325)
!337 = !DILocation(line: 6264, column: 13, scope: !325)
!338 = !DILocation(line: 6264, column: 29, scope: !325)
!339 = !DILocation(line: 6264, column: 27, scope: !325)
!340 = !DILocation(line: 6264, column: 42, scope: !325)
!341 = !DILocation(line: 6264, column: 40, scope: !325)
!342 = !DILocation(line: 6264, column: 51, scope: !325)
!343 = !DILocation(line: 6264, column: 55, scope: !325)
!344 = !DILocation(line: 6264, column: 63, scope: !325)
!345 = !DILocation(line: 6264, column: 11, scope: !325)
!346 = !DILocation(line: 6266, column: 9, scope: !325)
!347 = !DILocation(line: 6266, column: 15, scope: !325)
!348 = !DILocation(line: 6266, column: 25, scope: !325)
!349 = !DILocation(line: 6267, column: 9, scope: !325)
!350 = !DILocation(line: 6267, column: 15, scope: !325)
!351 = !DILocation(line: 6267, column: 21, scope: !325)
!352 = !DILocation(line: 6268, column: 9, scope: !325)
!353 = !DILocation(line: 6268, column: 15, scope: !325)
!354 = !DILocation(line: 6268, column: 20, scope: !325)
!355 = !DILocation(line: 6271, column: 9, scope: !325)
!356 = !DILocation(line: 6273, column: 9, scope: !325)
!357 = !DILocation(line: 6275, column: 5, scope: !325)
!358 = distinct !{!358, !326, !359}
!359 = !DILocation(line: 6276, column: 3, scope: !325)
!360 = !DILocation(line: 6277, column: 3, scope: !325)
!361 = !DILocation(line: 6278, column: 1, scope: !325)
!362 = distinct !DISubprogram(name: "I2C_WaitOnSTOPFlagUntilTimeout", scope: !1, file: !1, line: 6288, type: !9, scopeLine: 6289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!363 = !DILocation(line: 6290, column: 3, scope: !362)
!364 = !DILocation(line: 6290, column: 10, scope: !362)
!365 = !DILocation(line: 6290, column: 51, scope: !362)
!366 = !DILocation(line: 6293, column: 33, scope: !362)
!367 = !DILocation(line: 6293, column: 39, scope: !362)
!368 = !DILocation(line: 6293, column: 48, scope: !362)
!369 = !DILocation(line: 6293, column: 9, scope: !362)
!370 = !DILocation(line: 6293, column: 59, scope: !362)
!371 = !DILocation(line: 6295, column: 7, scope: !362)
!372 = !DILocation(line: 6299, column: 11, scope: !362)
!373 = !DILocation(line: 6299, column: 27, scope: !362)
!374 = !DILocation(line: 6299, column: 25, scope: !362)
!375 = !DILocation(line: 6299, column: 40, scope: !362)
!376 = !DILocation(line: 6299, column: 38, scope: !362)
!377 = !DILocation(line: 6299, column: 49, scope: !362)
!378 = !DILocation(line: 6299, column: 53, scope: !362)
!379 = !DILocation(line: 6299, column: 61, scope: !362)
!380 = !DILocation(line: 6299, column: 9, scope: !362)
!381 = !DILocation(line: 6301, column: 7, scope: !362)
!382 = !DILocation(line: 6301, column: 13, scope: !362)
!383 = !DILocation(line: 6301, column: 23, scope: !362)
!384 = !DILocation(line: 6302, column: 7, scope: !362)
!385 = !DILocation(line: 6302, column: 13, scope: !362)
!386 = !DILocation(line: 6302, column: 19, scope: !362)
!387 = !DILocation(line: 6303, column: 7, scope: !362)
!388 = !DILocation(line: 6303, column: 13, scope: !362)
!389 = !DILocation(line: 6303, column: 18, scope: !362)
!390 = !DILocation(line: 6306, column: 7, scope: !362)
!391 = !DILocation(line: 6308, column: 7, scope: !362)
!392 = distinct !{!392, !363, !393}
!393 = !DILocation(line: 6310, column: 3, scope: !362)
!394 = !DILocation(line: 6311, column: 3, scope: !362)
!395 = !DILocation(line: 6312, column: 1, scope: !362)
!396 = distinct !DISubprogram(name: "HAL_I2C_Master_Receive", scope: !1, file: !1, line: 1183, type: !9, scopeLine: 1185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!397 = !DILocation(line: 1188, column: 7, scope: !396)
!398 = !DILocation(line: 1188, column: 13, scope: !396)
!399 = !DILocation(line: 1188, column: 19, scope: !396)
!400 = !DILocation(line: 1191, column: 5, scope: !396)
!401 = !DILocation(line: 1194, column: 17, scope: !396)
!402 = !DILocation(line: 1194, column: 15, scope: !396)
!403 = !DILocation(line: 1196, column: 36, scope: !396)
!404 = !DILocation(line: 1196, column: 80, scope: !396)
!405 = !DILocation(line: 1196, column: 9, scope: !396)
!406 = !DILocation(line: 1196, column: 91, scope: !396)
!407 = !DILocation(line: 1198, column: 7, scope: !396)
!408 = !DILocation(line: 1201, column: 5, scope: !396)
!409 = !DILocation(line: 1201, column: 11, scope: !396)
!410 = !DILocation(line: 1201, column: 21, scope: !396)
!411 = !DILocation(line: 1202, column: 5, scope: !396)
!412 = !DILocation(line: 1202, column: 11, scope: !396)
!413 = !DILocation(line: 1202, column: 21, scope: !396)
!414 = !DILocation(line: 1203, column: 5, scope: !396)
!415 = !DILocation(line: 1203, column: 11, scope: !396)
!416 = !DILocation(line: 1203, column: 21, scope: !396)
!417 = !DILocation(line: 1206, column: 23, scope: !396)
!418 = !DILocation(line: 1206, column: 5, scope: !396)
!419 = !DILocation(line: 1206, column: 11, scope: !396)
!420 = !DILocation(line: 1206, column: 21, scope: !396)
!421 = !DILocation(line: 1207, column: 23, scope: !396)
!422 = !DILocation(line: 1207, column: 5, scope: !396)
!423 = !DILocation(line: 1207, column: 11, scope: !396)
!424 = !DILocation(line: 1207, column: 21, scope: !396)
!425 = !DILocation(line: 1208, column: 5, scope: !396)
!426 = !DILocation(line: 1208, column: 11, scope: !396)
!427 = !DILocation(line: 1208, column: 21, scope: !396)
!428 = !DILocation(line: 1212, column: 9, scope: !396)
!429 = !DILocation(line: 1212, column: 15, scope: !396)
!430 = !DILocation(line: 1212, column: 25, scope: !396)
!431 = !DILocation(line: 1214, column: 7, scope: !396)
!432 = !DILocation(line: 1214, column: 13, scope: !396)
!433 = !DILocation(line: 1214, column: 22, scope: !396)
!434 = !DILocation(line: 1215, column: 26, scope: !396)
!435 = !DILocation(line: 1215, column: 32, scope: !396)
!436 = !DILocation(line: 1215, column: 53, scope: !396)
!437 = !DILocation(line: 1215, column: 59, scope: !396)
!438 = !DILocation(line: 1215, column: 44, scope: !396)
!439 = !DILocation(line: 1215, column: 7, scope: !396)
!440 = !DILocation(line: 1216, column: 5, scope: !396)
!441 = !DILocation(line: 1219, column: 24, scope: !396)
!442 = !DILocation(line: 1219, column: 30, scope: !396)
!443 = !DILocation(line: 1219, column: 7, scope: !396)
!444 = !DILocation(line: 1219, column: 13, scope: !396)
!445 = !DILocation(line: 1219, column: 22, scope: !396)
!446 = !DILocation(line: 1220, column: 26, scope: !396)
!447 = !DILocation(line: 1220, column: 32, scope: !396)
!448 = !DILocation(line: 1220, column: 53, scope: !396)
!449 = !DILocation(line: 1220, column: 59, scope: !396)
!450 = !DILocation(line: 1220, column: 44, scope: !396)
!451 = !DILocation(line: 1220, column: 7, scope: !396)
!452 = !DILocation(line: 1223, column: 5, scope: !396)
!453 = !DILocation(line: 1223, column: 12, scope: !396)
!454 = !DILocation(line: 1223, column: 18, scope: !396)
!455 = !DILocation(line: 1223, column: 28, scope: !396)
!456 = !DILocation(line: 1226, column: 42, scope: !396)
!457 = !DILocation(line: 1226, column: 48, scope: !396)
!458 = !DILocation(line: 1226, column: 57, scope: !396)
!459 = !DILocation(line: 1226, column: 11, scope: !396)
!460 = !DILocation(line: 1226, column: 68, scope: !396)
!461 = !DILocation(line: 1228, column: 9, scope: !396)
!462 = !DILocation(line: 1232, column: 34, scope: !396)
!463 = !DILocation(line: 1232, column: 40, scope: !396)
!464 = !DILocation(line: 1232, column: 50, scope: !396)
!465 = !DILocation(line: 1232, column: 25, scope: !396)
!466 = !DILocation(line: 1232, column: 8, scope: !396)
!467 = !DILocation(line: 1232, column: 14, scope: !396)
!468 = !DILocation(line: 1232, column: 23, scope: !396)
!469 = !DILocation(line: 1235, column: 7, scope: !396)
!470 = !DILocation(line: 1235, column: 13, scope: !396)
!471 = !DILocation(line: 1235, column: 21, scope: !396)
!472 = !DILocation(line: 1237, column: 7, scope: !396)
!473 = !DILocation(line: 1237, column: 13, scope: !396)
!474 = !DILocation(line: 1237, column: 21, scope: !396)
!475 = !DILocation(line: 1238, column: 7, scope: !396)
!476 = !DILocation(line: 1238, column: 13, scope: !396)
!477 = !DILocation(line: 1238, column: 22, scope: !396)
!478 = !DILocation(line: 1240, column: 12, scope: !396)
!479 = !DILocation(line: 1240, column: 18, scope: !396)
!480 = !DILocation(line: 1240, column: 28, scope: !396)
!481 = !DILocation(line: 1240, column: 35, scope: !396)
!482 = !DILocation(line: 1240, column: 39, scope: !396)
!483 = !DILocation(line: 1240, column: 45, scope: !396)
!484 = !DILocation(line: 1240, column: 54, scope: !396)
!485 = !DILocation(line: 1240, column: 11, scope: !396)
!486 = !DILocation(line: 1243, column: 40, scope: !396)
!487 = !DILocation(line: 1243, column: 67, scope: !396)
!488 = !DILocation(line: 1243, column: 76, scope: !396)
!489 = !DILocation(line: 1243, column: 13, scope: !396)
!490 = !DILocation(line: 1243, column: 87, scope: !396)
!491 = !DILocation(line: 1245, column: 11, scope: !396)
!492 = !DILocation(line: 1248, column: 13, scope: !396)
!493 = !DILocation(line: 1248, column: 19, scope: !396)
!494 = !DILocation(line: 1248, column: 29, scope: !396)
!495 = !DILocation(line: 1250, column: 11, scope: !396)
!496 = !DILocation(line: 1250, column: 17, scope: !396)
!497 = !DILocation(line: 1250, column: 26, scope: !396)
!498 = !DILocation(line: 1251, column: 30, scope: !396)
!499 = !DILocation(line: 1251, column: 36, scope: !396)
!500 = !DILocation(line: 1251, column: 57, scope: !396)
!501 = !DILocation(line: 1251, column: 63, scope: !396)
!502 = !DILocation(line: 1251, column: 48, scope: !396)
!503 = !DILocation(line: 1251, column: 11, scope: !396)
!504 = !DILocation(line: 1252, column: 9, scope: !396)
!505 = !DILocation(line: 1255, column: 28, scope: !396)
!506 = !DILocation(line: 1255, column: 34, scope: !396)
!507 = !DILocation(line: 1255, column: 11, scope: !396)
!508 = !DILocation(line: 1255, column: 17, scope: !396)
!509 = !DILocation(line: 1255, column: 26, scope: !396)
!510 = !DILocation(line: 1256, column: 30, scope: !396)
!511 = !DILocation(line: 1256, column: 36, scope: !396)
!512 = !DILocation(line: 1256, column: 57, scope: !396)
!513 = !DILocation(line: 1256, column: 63, scope: !396)
!514 = !DILocation(line: 1256, column: 48, scope: !396)
!515 = !DILocation(line: 1256, column: 11, scope: !396)
!516 = !DILocation(line: 1258, column: 7, scope: !396)
!517 = distinct !{!517, !452, !518}
!518 = !DILocation(line: 1259, column: 5, scope: !396)
!519 = !DILocation(line: 1263, column: 40, scope: !396)
!520 = !DILocation(line: 1263, column: 46, scope: !396)
!521 = !DILocation(line: 1263, column: 55, scope: !396)
!522 = !DILocation(line: 1263, column: 9, scope: !396)
!523 = !DILocation(line: 1263, column: 66, scope: !396)
!524 = !DILocation(line: 1265, column: 7, scope: !396)
!525 = !DILocation(line: 1269, column: 5, scope: !396)
!526 = !DILocation(line: 1272, column: 5, scope: !396)
!527 = !DILocation(line: 1274, column: 5, scope: !396)
!528 = !DILocation(line: 1274, column: 11, scope: !396)
!529 = !DILocation(line: 1274, column: 17, scope: !396)
!530 = !DILocation(line: 1275, column: 5, scope: !396)
!531 = !DILocation(line: 1275, column: 11, scope: !396)
!532 = !DILocation(line: 1275, column: 17, scope: !396)
!533 = !DILocation(line: 1278, column: 5, scope: !396)
!534 = !DILocation(line: 1280, column: 5, scope: !396)
!535 = !DILocation(line: 1284, column: 5, scope: !396)
!536 = !DILocation(line: 1286, column: 1, scope: !396)
!537 = distinct !DISubprogram(name: "I2C_WaitOnRXNEFlagUntilTimeout", scope: !1, file: !1, line: 6322, type: !9, scopeLine: 6323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!538 = !DILocation(line: 6324, column: 3, scope: !537)
!539 = !DILocation(line: 6324, column: 10, scope: !537)
!540 = !DILocation(line: 6324, column: 50, scope: !537)
!541 = !DILocation(line: 6327, column: 33, scope: !537)
!542 = !DILocation(line: 6327, column: 39, scope: !537)
!543 = !DILocation(line: 6327, column: 48, scope: !537)
!544 = !DILocation(line: 6327, column: 9, scope: !537)
!545 = !DILocation(line: 6327, column: 59, scope: !537)
!546 = !DILocation(line: 6329, column: 7, scope: !537)
!547 = !DILocation(line: 6333, column: 9, scope: !537)
!548 = !DILocation(line: 6333, column: 50, scope: !537)
!549 = !DILocation(line: 6337, column: 12, scope: !537)
!550 = !DILocation(line: 6337, column: 52, scope: !537)
!551 = !DILocation(line: 6337, column: 60, scope: !537)
!552 = !DILocation(line: 6337, column: 64, scope: !537)
!553 = !DILocation(line: 6337, column: 70, scope: !537)
!554 = !DILocation(line: 6337, column: 79, scope: !537)
!555 = !DILocation(line: 6337, column: 11, scope: !537)
!556 = !DILocation(line: 6341, column: 9, scope: !537)
!557 = !DILocation(line: 6346, column: 9, scope: !537)
!558 = !DILocation(line: 6349, column: 9, scope: !537)
!559 = !DILocation(line: 6351, column: 9, scope: !537)
!560 = !DILocation(line: 6351, column: 15, scope: !537)
!561 = !DILocation(line: 6351, column: 25, scope: !537)
!562 = !DILocation(line: 6352, column: 9, scope: !537)
!563 = !DILocation(line: 6352, column: 15, scope: !537)
!564 = !DILocation(line: 6352, column: 21, scope: !537)
!565 = !DILocation(line: 6353, column: 9, scope: !537)
!566 = !DILocation(line: 6353, column: 15, scope: !537)
!567 = !DILocation(line: 6353, column: 20, scope: !537)
!568 = !DILocation(line: 6356, column: 9, scope: !537)
!569 = !DILocation(line: 6358, column: 9, scope: !537)
!570 = !DILocation(line: 6363, column: 11, scope: !537)
!571 = !DILocation(line: 6363, column: 27, scope: !537)
!572 = !DILocation(line: 6363, column: 25, scope: !537)
!573 = !DILocation(line: 6363, column: 40, scope: !537)
!574 = !DILocation(line: 6363, column: 38, scope: !537)
!575 = !DILocation(line: 6363, column: 49, scope: !537)
!576 = !DILocation(line: 6363, column: 53, scope: !537)
!577 = !DILocation(line: 6363, column: 61, scope: !537)
!578 = !DILocation(line: 6363, column: 9, scope: !537)
!579 = !DILocation(line: 6365, column: 7, scope: !537)
!580 = !DILocation(line: 6365, column: 13, scope: !537)
!581 = !DILocation(line: 6365, column: 23, scope: !537)
!582 = !DILocation(line: 6366, column: 7, scope: !537)
!583 = !DILocation(line: 6366, column: 13, scope: !537)
!584 = !DILocation(line: 6366, column: 19, scope: !537)
!585 = !DILocation(line: 6369, column: 7, scope: !537)
!586 = !DILocation(line: 6371, column: 7, scope: !537)
!587 = distinct !{!587, !538, !588}
!588 = !DILocation(line: 6373, column: 3, scope: !537)
!589 = !DILocation(line: 6374, column: 3, scope: !537)
!590 = !DILocation(line: 6375, column: 1, scope: !537)
!591 = distinct !DISubprogram(name: "HAL_I2C_Slave_Transmit", scope: !1, file: !1, line: 1297, type: !9, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!592 = !DILocation(line: 1301, column: 7, scope: !591)
!593 = !DILocation(line: 1301, column: 13, scope: !591)
!594 = !DILocation(line: 1301, column: 19, scope: !591)
!595 = !DILocation(line: 1303, column: 10, scope: !591)
!596 = !DILocation(line: 1303, column: 16, scope: !591)
!597 = !DILocation(line: 1303, column: 25, scope: !591)
!598 = !DILocation(line: 1303, column: 29, scope: !591)
!599 = !DILocation(line: 1303, column: 34, scope: !591)
!600 = !DILocation(line: 1303, column: 9, scope: !591)
!601 = !DILocation(line: 1305, column: 7, scope: !591)
!602 = !DILocation(line: 1305, column: 13, scope: !591)
!603 = !DILocation(line: 1305, column: 23, scope: !591)
!604 = !DILocation(line: 1306, column: 7, scope: !591)
!605 = !DILocation(line: 1309, column: 5, scope: !591)
!606 = !DILocation(line: 1312, column: 17, scope: !591)
!607 = !DILocation(line: 1312, column: 15, scope: !591)
!608 = !DILocation(line: 1314, column: 5, scope: !591)
!609 = !DILocation(line: 1314, column: 11, scope: !591)
!610 = !DILocation(line: 1314, column: 21, scope: !591)
!611 = !DILocation(line: 1315, column: 5, scope: !591)
!612 = !DILocation(line: 1315, column: 11, scope: !591)
!613 = !DILocation(line: 1315, column: 21, scope: !591)
!614 = !DILocation(line: 1316, column: 5, scope: !591)
!615 = !DILocation(line: 1316, column: 11, scope: !591)
!616 = !DILocation(line: 1316, column: 21, scope: !591)
!617 = !DILocation(line: 1319, column: 23, scope: !591)
!618 = !DILocation(line: 1319, column: 5, scope: !591)
!619 = !DILocation(line: 1319, column: 11, scope: !591)
!620 = !DILocation(line: 1319, column: 21, scope: !591)
!621 = !DILocation(line: 1320, column: 23, scope: !591)
!622 = !DILocation(line: 1320, column: 5, scope: !591)
!623 = !DILocation(line: 1320, column: 11, scope: !591)
!624 = !DILocation(line: 1320, column: 21, scope: !591)
!625 = !DILocation(line: 1321, column: 5, scope: !591)
!626 = !DILocation(line: 1321, column: 11, scope: !591)
!627 = !DILocation(line: 1321, column: 21, scope: !591)
!628 = !DILocation(line: 1324, column: 5, scope: !591)
!629 = !DILocation(line: 1324, column: 11, scope: !591)
!630 = !DILocation(line: 1324, column: 21, scope: !591)
!631 = !DILocation(line: 1324, column: 25, scope: !591)
!632 = !DILocation(line: 1327, column: 36, scope: !591)
!633 = !DILocation(line: 1327, column: 64, scope: !591)
!634 = !DILocation(line: 1327, column: 73, scope: !591)
!635 = !DILocation(line: 1327, column: 9, scope: !591)
!636 = !DILocation(line: 1327, column: 84, scope: !591)
!637 = !DILocation(line: 1330, column: 7, scope: !591)
!638 = !DILocation(line: 1330, column: 13, scope: !591)
!639 = !DILocation(line: 1330, column: 23, scope: !591)
!640 = !DILocation(line: 1330, column: 27, scope: !591)
!641 = !DILocation(line: 1331, column: 7, scope: !591)
!642 = !DILocation(line: 1335, column: 5, scope: !591)
!643 = !DILocation(line: 1338, column: 9, scope: !591)
!644 = !DILocation(line: 1338, column: 15, scope: !591)
!645 = !DILocation(line: 1338, column: 20, scope: !591)
!646 = !DILocation(line: 1338, column: 35, scope: !591)
!647 = !DILocation(line: 1341, column: 38, scope: !591)
!648 = !DILocation(line: 1341, column: 66, scope: !591)
!649 = !DILocation(line: 1341, column: 75, scope: !591)
!650 = !DILocation(line: 1341, column: 11, scope: !591)
!651 = !DILocation(line: 1341, column: 86, scope: !591)
!652 = !DILocation(line: 1344, column: 9, scope: !591)
!653 = !DILocation(line: 1344, column: 15, scope: !591)
!654 = !DILocation(line: 1344, column: 25, scope: !591)
!655 = !DILocation(line: 1344, column: 29, scope: !591)
!656 = !DILocation(line: 1345, column: 9, scope: !591)
!657 = !DILocation(line: 1349, column: 7, scope: !591)
!658 = !DILocation(line: 1350, column: 5, scope: !591)
!659 = !DILocation(line: 1353, column: 36, scope: !591)
!660 = !DILocation(line: 1353, column: 63, scope: !591)
!661 = !DILocation(line: 1353, column: 72, scope: !591)
!662 = !DILocation(line: 1353, column: 9, scope: !591)
!663 = !DILocation(line: 1353, column: 83, scope: !591)
!664 = !DILocation(line: 1356, column: 7, scope: !591)
!665 = !DILocation(line: 1356, column: 13, scope: !591)
!666 = !DILocation(line: 1356, column: 23, scope: !591)
!667 = !DILocation(line: 1356, column: 27, scope: !591)
!668 = !DILocation(line: 1357, column: 7, scope: !591)
!669 = !DILocation(line: 1360, column: 5, scope: !591)
!670 = !DILocation(line: 1360, column: 12, scope: !591)
!671 = !DILocation(line: 1360, column: 18, scope: !591)
!672 = !DILocation(line: 1360, column: 28, scope: !591)
!673 = !DILocation(line: 1363, column: 42, scope: !591)
!674 = !DILocation(line: 1363, column: 48, scope: !591)
!675 = !DILocation(line: 1363, column: 57, scope: !591)
!676 = !DILocation(line: 1363, column: 11, scope: !591)
!677 = !DILocation(line: 1363, column: 68, scope: !591)
!678 = !DILocation(line: 1366, column: 9, scope: !591)
!679 = !DILocation(line: 1366, column: 15, scope: !591)
!680 = !DILocation(line: 1366, column: 25, scope: !591)
!681 = !DILocation(line: 1366, column: 29, scope: !591)
!682 = !DILocation(line: 1367, column: 9, scope: !591)
!683 = !DILocation(line: 1371, column: 31, scope: !591)
!684 = !DILocation(line: 1371, column: 37, scope: !591)
!685 = !DILocation(line: 1371, column: 30, scope: !591)
!686 = !DILocation(line: 1371, column: 7, scope: !591)
!687 = !DILocation(line: 1371, column: 13, scope: !591)
!688 = !DILocation(line: 1371, column: 23, scope: !591)
!689 = !DILocation(line: 1371, column: 28, scope: !591)
!690 = !DILocation(line: 1374, column: 7, scope: !591)
!691 = !DILocation(line: 1374, column: 13, scope: !591)
!692 = !DILocation(line: 1374, column: 21, scope: !591)
!693 = !DILocation(line: 1376, column: 7, scope: !591)
!694 = !DILocation(line: 1376, column: 13, scope: !591)
!695 = !DILocation(line: 1376, column: 22, scope: !591)
!696 = distinct !{!696, !669, !697}
!697 = !DILocation(line: 1377, column: 5, scope: !591)
!698 = !DILocation(line: 1380, column: 40, scope: !591)
!699 = !DILocation(line: 1380, column: 46, scope: !591)
!700 = !DILocation(line: 1380, column: 55, scope: !591)
!701 = !DILocation(line: 1380, column: 9, scope: !591)
!702 = !DILocation(line: 1380, column: 66, scope: !591)
!703 = !DILocation(line: 1383, column: 7, scope: !591)
!704 = !DILocation(line: 1383, column: 13, scope: !591)
!705 = !DILocation(line: 1383, column: 23, scope: !591)
!706 = !DILocation(line: 1383, column: 27, scope: !591)
!707 = !DILocation(line: 1385, column: 11, scope: !591)
!708 = !DILocation(line: 1385, column: 17, scope: !591)
!709 = !DILocation(line: 1385, column: 27, scope: !591)
!710 = !DILocation(line: 1389, column: 9, scope: !591)
!711 = !DILocation(line: 1389, column: 15, scope: !591)
!712 = !DILocation(line: 1389, column: 25, scope: !591)
!713 = !DILocation(line: 1390, column: 7, scope: !591)
!714 = !DILocation(line: 1393, column: 9, scope: !591)
!715 = !DILocation(line: 1395, column: 5, scope: !591)
!716 = !DILocation(line: 1398, column: 5, scope: !591)
!717 = !DILocation(line: 1401, column: 36, scope: !591)
!718 = !DILocation(line: 1401, column: 62, scope: !591)
!719 = !DILocation(line: 1401, column: 71, scope: !591)
!720 = !DILocation(line: 1401, column: 9, scope: !591)
!721 = !DILocation(line: 1401, column: 82, scope: !591)
!722 = !DILocation(line: 1404, column: 7, scope: !591)
!723 = !DILocation(line: 1404, column: 13, scope: !591)
!724 = !DILocation(line: 1404, column: 23, scope: !591)
!725 = !DILocation(line: 1404, column: 27, scope: !591)
!726 = !DILocation(line: 1405, column: 7, scope: !591)
!727 = !DILocation(line: 1409, column: 5, scope: !591)
!728 = !DILocation(line: 1409, column: 11, scope: !591)
!729 = !DILocation(line: 1409, column: 21, scope: !591)
!730 = !DILocation(line: 1409, column: 25, scope: !591)
!731 = !DILocation(line: 1411, column: 5, scope: !591)
!732 = !DILocation(line: 1411, column: 11, scope: !591)
!733 = !DILocation(line: 1411, column: 17, scope: !591)
!734 = !DILocation(line: 1412, column: 5, scope: !591)
!735 = !DILocation(line: 1412, column: 11, scope: !591)
!736 = !DILocation(line: 1412, column: 17, scope: !591)
!737 = !DILocation(line: 1415, column: 5, scope: !591)
!738 = !DILocation(line: 1417, column: 5, scope: !591)
!739 = !DILocation(line: 1421, column: 5, scope: !591)
!740 = !DILocation(line: 1423, column: 1, scope: !591)
!741 = distinct !DISubprogram(name: "HAL_I2C_Slave_Receive", scope: !1, file: !1, line: 1434, type: !9, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!742 = !DILocation(line: 1438, column: 7, scope: !741)
!743 = !DILocation(line: 1438, column: 13, scope: !741)
!744 = !DILocation(line: 1438, column: 19, scope: !741)
!745 = !DILocation(line: 1440, column: 10, scope: !741)
!746 = !DILocation(line: 1440, column: 16, scope: !741)
!747 = !DILocation(line: 1440, column: 25, scope: !741)
!748 = !DILocation(line: 1440, column: 29, scope: !741)
!749 = !DILocation(line: 1440, column: 34, scope: !741)
!750 = !DILocation(line: 1440, column: 9, scope: !741)
!751 = !DILocation(line: 1442, column: 7, scope: !741)
!752 = !DILocation(line: 1442, column: 13, scope: !741)
!753 = !DILocation(line: 1442, column: 23, scope: !741)
!754 = !DILocation(line: 1443, column: 7, scope: !741)
!755 = !DILocation(line: 1446, column: 5, scope: !741)
!756 = !DILocation(line: 1449, column: 17, scope: !741)
!757 = !DILocation(line: 1449, column: 15, scope: !741)
!758 = !DILocation(line: 1451, column: 5, scope: !741)
!759 = !DILocation(line: 1451, column: 11, scope: !741)
!760 = !DILocation(line: 1451, column: 21, scope: !741)
!761 = !DILocation(line: 1452, column: 5, scope: !741)
!762 = !DILocation(line: 1452, column: 11, scope: !741)
!763 = !DILocation(line: 1452, column: 21, scope: !741)
!764 = !DILocation(line: 1453, column: 5, scope: !741)
!765 = !DILocation(line: 1453, column: 11, scope: !741)
!766 = !DILocation(line: 1453, column: 21, scope: !741)
!767 = !DILocation(line: 1456, column: 23, scope: !741)
!768 = !DILocation(line: 1456, column: 5, scope: !741)
!769 = !DILocation(line: 1456, column: 11, scope: !741)
!770 = !DILocation(line: 1456, column: 21, scope: !741)
!771 = !DILocation(line: 1457, column: 23, scope: !741)
!772 = !DILocation(line: 1457, column: 5, scope: !741)
!773 = !DILocation(line: 1457, column: 11, scope: !741)
!774 = !DILocation(line: 1457, column: 21, scope: !741)
!775 = !DILocation(line: 1458, column: 5, scope: !741)
!776 = !DILocation(line: 1458, column: 11, scope: !741)
!777 = !DILocation(line: 1458, column: 21, scope: !741)
!778 = !DILocation(line: 1461, column: 5, scope: !741)
!779 = !DILocation(line: 1461, column: 11, scope: !741)
!780 = !DILocation(line: 1461, column: 21, scope: !741)
!781 = !DILocation(line: 1461, column: 25, scope: !741)
!782 = !DILocation(line: 1464, column: 36, scope: !741)
!783 = !DILocation(line: 1464, column: 64, scope: !741)
!784 = !DILocation(line: 1464, column: 73, scope: !741)
!785 = !DILocation(line: 1464, column: 9, scope: !741)
!786 = !DILocation(line: 1464, column: 84, scope: !741)
!787 = !DILocation(line: 1467, column: 7, scope: !741)
!788 = !DILocation(line: 1467, column: 13, scope: !741)
!789 = !DILocation(line: 1467, column: 23, scope: !741)
!790 = !DILocation(line: 1467, column: 27, scope: !741)
!791 = !DILocation(line: 1468, column: 7, scope: !741)
!792 = !DILocation(line: 1472, column: 5, scope: !741)
!793 = !DILocation(line: 1475, column: 36, scope: !741)
!794 = !DILocation(line: 1475, column: 61, scope: !741)
!795 = !DILocation(line: 1475, column: 70, scope: !741)
!796 = !DILocation(line: 1475, column: 9, scope: !741)
!797 = !DILocation(line: 1475, column: 81, scope: !741)
!798 = !DILocation(line: 1478, column: 7, scope: !741)
!799 = !DILocation(line: 1478, column: 13, scope: !741)
!800 = !DILocation(line: 1478, column: 23, scope: !741)
!801 = !DILocation(line: 1478, column: 27, scope: !741)
!802 = !DILocation(line: 1479, column: 7, scope: !741)
!803 = !DILocation(line: 1482, column: 5, scope: !741)
!804 = !DILocation(line: 1482, column: 12, scope: !741)
!805 = !DILocation(line: 1482, column: 18, scope: !741)
!806 = !DILocation(line: 1482, column: 28, scope: !741)
!807 = !DILocation(line: 1485, column: 42, scope: !741)
!808 = !DILocation(line: 1485, column: 48, scope: !741)
!809 = !DILocation(line: 1485, column: 57, scope: !741)
!810 = !DILocation(line: 1485, column: 11, scope: !741)
!811 = !DILocation(line: 1485, column: 68, scope: !741)
!812 = !DILocation(line: 1488, column: 9, scope: !741)
!813 = !DILocation(line: 1488, column: 15, scope: !741)
!814 = !DILocation(line: 1488, column: 25, scope: !741)
!815 = !DILocation(line: 1488, column: 29, scope: !741)
!816 = !DILocation(line: 1491, column: 13, scope: !741)
!817 = !DILocation(line: 1491, column: 53, scope: !741)
!818 = !DILocation(line: 1494, column: 38, scope: !741)
!819 = !DILocation(line: 1494, column: 44, scope: !741)
!820 = !DILocation(line: 1494, column: 54, scope: !741)
!821 = !DILocation(line: 1494, column: 29, scope: !741)
!822 = !DILocation(line: 1494, column: 12, scope: !741)
!823 = !DILocation(line: 1494, column: 18, scope: !741)
!824 = !DILocation(line: 1494, column: 27, scope: !741)
!825 = !DILocation(line: 1497, column: 11, scope: !741)
!826 = !DILocation(line: 1497, column: 17, scope: !741)
!827 = !DILocation(line: 1497, column: 25, scope: !741)
!828 = !DILocation(line: 1499, column: 11, scope: !741)
!829 = !DILocation(line: 1499, column: 17, scope: !741)
!830 = !DILocation(line: 1499, column: 26, scope: !741)
!831 = !DILocation(line: 1500, column: 9, scope: !741)
!832 = !DILocation(line: 1502, column: 9, scope: !741)
!833 = !DILocation(line: 1506, column: 34, scope: !741)
!834 = !DILocation(line: 1506, column: 40, scope: !741)
!835 = !DILocation(line: 1506, column: 50, scope: !741)
!836 = !DILocation(line: 1506, column: 25, scope: !741)
!837 = !DILocation(line: 1506, column: 8, scope: !741)
!838 = !DILocation(line: 1506, column: 14, scope: !741)
!839 = !DILocation(line: 1506, column: 23, scope: !741)
!840 = !DILocation(line: 1509, column: 7, scope: !741)
!841 = !DILocation(line: 1509, column: 13, scope: !741)
!842 = !DILocation(line: 1509, column: 21, scope: !741)
!843 = !DILocation(line: 1511, column: 7, scope: !741)
!844 = !DILocation(line: 1511, column: 13, scope: !741)
!845 = !DILocation(line: 1511, column: 22, scope: !741)
!846 = distinct !{!846, !803, !847}
!847 = !DILocation(line: 1512, column: 5, scope: !741)
!848 = !DILocation(line: 1515, column: 40, scope: !741)
!849 = !DILocation(line: 1515, column: 46, scope: !741)
!850 = !DILocation(line: 1515, column: 55, scope: !741)
!851 = !DILocation(line: 1515, column: 9, scope: !741)
!852 = !DILocation(line: 1515, column: 66, scope: !741)
!853 = !DILocation(line: 1518, column: 7, scope: !741)
!854 = !DILocation(line: 1518, column: 13, scope: !741)
!855 = !DILocation(line: 1518, column: 23, scope: !741)
!856 = !DILocation(line: 1518, column: 27, scope: !741)
!857 = !DILocation(line: 1519, column: 7, scope: !741)
!858 = !DILocation(line: 1523, column: 5, scope: !741)
!859 = !DILocation(line: 1526, column: 36, scope: !741)
!860 = !DILocation(line: 1526, column: 62, scope: !741)
!861 = !DILocation(line: 1526, column: 71, scope: !741)
!862 = !DILocation(line: 1526, column: 9, scope: !741)
!863 = !DILocation(line: 1526, column: 82, scope: !741)
!864 = !DILocation(line: 1529, column: 7, scope: !741)
!865 = !DILocation(line: 1529, column: 13, scope: !741)
!866 = !DILocation(line: 1529, column: 23, scope: !741)
!867 = !DILocation(line: 1529, column: 27, scope: !741)
!868 = !DILocation(line: 1530, column: 7, scope: !741)
!869 = !DILocation(line: 1534, column: 5, scope: !741)
!870 = !DILocation(line: 1534, column: 11, scope: !741)
!871 = !DILocation(line: 1534, column: 21, scope: !741)
!872 = !DILocation(line: 1534, column: 25, scope: !741)
!873 = !DILocation(line: 1536, column: 5, scope: !741)
!874 = !DILocation(line: 1536, column: 11, scope: !741)
!875 = !DILocation(line: 1536, column: 17, scope: !741)
!876 = !DILocation(line: 1537, column: 5, scope: !741)
!877 = !DILocation(line: 1537, column: 11, scope: !741)
!878 = !DILocation(line: 1537, column: 17, scope: !741)
!879 = !DILocation(line: 1540, column: 5, scope: !741)
!880 = !DILocation(line: 1542, column: 5, scope: !741)
!881 = !DILocation(line: 1546, column: 5, scope: !741)
!882 = !DILocation(line: 1548, column: 1, scope: !741)
!883 = distinct !DISubprogram(name: "HAL_I2C_Master_Transmit_IT", scope: !1, file: !1, line: 1560, type: !9, scopeLine: 1562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!884 = !DILocation(line: 1565, column: 7, scope: !883)
!885 = !DILocation(line: 1565, column: 13, scope: !883)
!886 = !DILocation(line: 1565, column: 19, scope: !883)
!887 = !DILocation(line: 1567, column: 9, scope: !883)
!888 = !DILocation(line: 1567, column: 49, scope: !883)
!889 = !DILocation(line: 1569, column: 7, scope: !883)
!890 = !DILocation(line: 1573, column: 5, scope: !883)
!891 = !DILocation(line: 1575, column: 5, scope: !883)
!892 = !DILocation(line: 1575, column: 11, scope: !883)
!893 = !DILocation(line: 1575, column: 23, scope: !883)
!894 = !DILocation(line: 1576, column: 5, scope: !883)
!895 = !DILocation(line: 1576, column: 11, scope: !883)
!896 = !DILocation(line: 1576, column: 23, scope: !883)
!897 = !DILocation(line: 1577, column: 5, scope: !883)
!898 = !DILocation(line: 1577, column: 11, scope: !883)
!899 = !DILocation(line: 1577, column: 23, scope: !883)
!900 = !DILocation(line: 1580, column: 25, scope: !883)
!901 = !DILocation(line: 1580, column: 5, scope: !883)
!902 = !DILocation(line: 1580, column: 11, scope: !883)
!903 = !DILocation(line: 1580, column: 23, scope: !883)
!904 = !DILocation(line: 1581, column: 25, scope: !883)
!905 = !DILocation(line: 1581, column: 5, scope: !883)
!906 = !DILocation(line: 1581, column: 11, scope: !883)
!907 = !DILocation(line: 1581, column: 23, scope: !883)
!908 = !DILocation(line: 1582, column: 5, scope: !883)
!909 = !DILocation(line: 1582, column: 11, scope: !883)
!910 = !DILocation(line: 1582, column: 23, scope: !883)
!911 = !DILocation(line: 1583, column: 5, scope: !883)
!912 = !DILocation(line: 1583, column: 11, scope: !883)
!913 = !DILocation(line: 1583, column: 23, scope: !883)
!914 = !DILocation(line: 1585, column: 9, scope: !883)
!915 = !DILocation(line: 1585, column: 15, scope: !883)
!916 = !DILocation(line: 1585, column: 25, scope: !883)
!917 = !DILocation(line: 1587, column: 7, scope: !883)
!918 = !DILocation(line: 1587, column: 13, scope: !883)
!919 = !DILocation(line: 1587, column: 22, scope: !883)
!920 = !DILocation(line: 1588, column: 16, scope: !883)
!921 = !DILocation(line: 1589, column: 5, scope: !883)
!922 = !DILocation(line: 1592, column: 24, scope: !883)
!923 = !DILocation(line: 1592, column: 30, scope: !883)
!924 = !DILocation(line: 1592, column: 7, scope: !883)
!925 = !DILocation(line: 1592, column: 13, scope: !883)
!926 = !DILocation(line: 1592, column: 22, scope: !883)
!927 = !DILocation(line: 1593, column: 16, scope: !883)
!928 = !DILocation(line: 1598, column: 24, scope: !883)
!929 = !DILocation(line: 1598, column: 30, scope: !883)
!930 = !DILocation(line: 1598, column: 51, scope: !883)
!931 = !DILocation(line: 1598, column: 57, scope: !883)
!932 = !DILocation(line: 1598, column: 42, scope: !883)
!933 = !DILocation(line: 1598, column: 67, scope: !883)
!934 = !DILocation(line: 1598, column: 5, scope: !883)
!935 = !DILocation(line: 1601, column: 5, scope: !883)
!936 = !DILocation(line: 1610, column: 20, scope: !883)
!937 = !DILocation(line: 1610, column: 5, scope: !883)
!938 = !DILocation(line: 1612, column: 5, scope: !883)
!939 = !DILocation(line: 1616, column: 5, scope: !883)
!940 = !DILocation(line: 1618, column: 1, scope: !883)
!941 = distinct !DISubprogram(name: "I2C_Master_ISR_IT", scope: !1, file: !1, line: 4631, type: !9, scopeLine: 4632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!942 = !DILocation(line: 4634, column: 25, scope: !941)
!943 = !DILocation(line: 4634, column: 12, scope: !941)
!944 = !DILocation(line: 4637, column: 3, scope: !941)
!945 = !DILocation(line: 4639, column: 8, scope: !941)
!946 = !DILocation(line: 4639, column: 48, scope: !941)
!947 = !DILocation(line: 4639, column: 58, scope: !941)
!948 = !DILocation(line: 4639, column: 62, scope: !941)
!949 = !DILocation(line: 4639, column: 107, scope: !941)
!950 = !DILocation(line: 4639, column: 7, scope: !941)
!951 = !DILocation(line: 4642, column: 5, scope: !941)
!952 = !DILocation(line: 4647, column: 5, scope: !941)
!953 = !DILocation(line: 4647, column: 11, scope: !941)
!954 = !DILocation(line: 4647, column: 21, scope: !941)
!955 = !DILocation(line: 4650, column: 20, scope: !941)
!956 = !DILocation(line: 4650, column: 5, scope: !941)
!957 = !DILocation(line: 4651, column: 3, scope: !941)
!958 = !DILocation(line: 4652, column: 13, scope: !941)
!959 = !DILocation(line: 4652, column: 55, scope: !941)
!960 = !DILocation(line: 4652, column: 65, scope: !941)
!961 = !DILocation(line: 4652, column: 69, scope: !941)
!962 = !DILocation(line: 4652, column: 112, scope: !941)
!963 = !DILocation(line: 4652, column: 12, scope: !941)
!964 = !DILocation(line: 4655, column: 16, scope: !941)
!965 = !DILocation(line: 4658, column: 32, scope: !941)
!966 = !DILocation(line: 4658, column: 38, scope: !941)
!967 = !DILocation(line: 4658, column: 48, scope: !941)
!968 = !DILocation(line: 4658, column: 23, scope: !941)
!969 = !DILocation(line: 4658, column: 6, scope: !941)
!970 = !DILocation(line: 4658, column: 12, scope: !941)
!971 = !DILocation(line: 4658, column: 21, scope: !941)
!972 = !DILocation(line: 4661, column: 5, scope: !941)
!973 = !DILocation(line: 4661, column: 11, scope: !941)
!974 = !DILocation(line: 4661, column: 19, scope: !941)
!975 = !DILocation(line: 4663, column: 5, scope: !941)
!976 = !DILocation(line: 4663, column: 11, scope: !941)
!977 = !DILocation(line: 4663, column: 19, scope: !941)
!978 = !DILocation(line: 4664, column: 5, scope: !941)
!979 = !DILocation(line: 4664, column: 11, scope: !941)
!980 = !DILocation(line: 4664, column: 20, scope: !941)
!981 = !DILocation(line: 4665, column: 3, scope: !941)
!982 = !DILocation(line: 4666, column: 13, scope: !941)
!983 = !DILocation(line: 4666, column: 55, scope: !941)
!984 = !DILocation(line: 4666, column: 65, scope: !941)
!985 = !DILocation(line: 4666, column: 69, scope: !941)
!986 = !DILocation(line: 4666, column: 112, scope: !941)
!987 = !DILocation(line: 4666, column: 12, scope: !941)
!988 = !DILocation(line: 4669, column: 29, scope: !941)
!989 = !DILocation(line: 4669, column: 35, scope: !941)
!990 = !DILocation(line: 4669, column: 28, scope: !941)
!991 = !DILocation(line: 4669, column: 5, scope: !941)
!992 = !DILocation(line: 4669, column: 11, scope: !941)
!993 = !DILocation(line: 4669, column: 21, scope: !941)
!994 = !DILocation(line: 4669, column: 26, scope: !941)
!995 = !DILocation(line: 4672, column: 5, scope: !941)
!996 = !DILocation(line: 4672, column: 11, scope: !941)
!997 = !DILocation(line: 4672, column: 19, scope: !941)
!998 = !DILocation(line: 4674, column: 5, scope: !941)
!999 = !DILocation(line: 4674, column: 11, scope: !941)
!1000 = !DILocation(line: 4674, column: 19, scope: !941)
!1001 = !DILocation(line: 4675, column: 5, scope: !941)
!1002 = !DILocation(line: 4675, column: 11, scope: !941)
!1003 = !DILocation(line: 4675, column: 20, scope: !941)
!1004 = !DILocation(line: 4676, column: 3, scope: !941)
!1005 = !DILocation(line: 4677, column: 13, scope: !941)
!1006 = !DILocation(line: 4677, column: 54, scope: !941)
!1007 = !DILocation(line: 4677, column: 64, scope: !941)
!1008 = !DILocation(line: 4677, column: 68, scope: !941)
!1009 = !DILocation(line: 4677, column: 111, scope: !941)
!1010 = !DILocation(line: 4677, column: 12, scope: !941)
!1011 = !DILocation(line: 4679, column: 10, scope: !941)
!1012 = !DILocation(line: 4679, column: 16, scope: !941)
!1013 = !DILocation(line: 4679, column: 26, scope: !941)
!1014 = !DILocation(line: 4679, column: 33, scope: !941)
!1015 = !DILocation(line: 4679, column: 37, scope: !941)
!1016 = !DILocation(line: 4679, column: 43, scope: !941)
!1017 = !DILocation(line: 4679, column: 52, scope: !941)
!1018 = !DILocation(line: 4679, column: 9, scope: !941)
!1019 = !DILocation(line: 4681, column: 31, scope: !941)
!1020 = !DILocation(line: 4681, column: 37, scope: !941)
!1021 = !DILocation(line: 4681, column: 47, scope: !941)
!1022 = !DILocation(line: 4681, column: 51, scope: !941)
!1023 = !DILocation(line: 4681, column: 20, scope: !941)
!1024 = !DILocation(line: 4681, column: 18, scope: !941)
!1025 = !DILocation(line: 4683, column: 11, scope: !941)
!1026 = !DILocation(line: 4683, column: 17, scope: !941)
!1027 = !DILocation(line: 4683, column: 27, scope: !941)
!1028 = !DILocation(line: 4685, column: 9, scope: !941)
!1029 = !DILocation(line: 4685, column: 15, scope: !941)
!1030 = !DILocation(line: 4685, column: 24, scope: !941)
!1031 = !DILocation(line: 4686, column: 28, scope: !941)
!1032 = !DILocation(line: 4686, column: 34, scope: !941)
!1033 = !DILocation(line: 4686, column: 55, scope: !941)
!1034 = !DILocation(line: 4686, column: 61, scope: !941)
!1035 = !DILocation(line: 4686, column: 46, scope: !941)
!1036 = !DILocation(line: 4686, column: 9, scope: !941)
!1037 = !DILocation(line: 4687, column: 7, scope: !941)
!1038 = !DILocation(line: 4690, column: 26, scope: !941)
!1039 = !DILocation(line: 4690, column: 32, scope: !941)
!1040 = !DILocation(line: 4690, column: 9, scope: !941)
!1041 = !DILocation(line: 4690, column: 15, scope: !941)
!1042 = !DILocation(line: 4690, column: 24, scope: !941)
!1043 = !DILocation(line: 4691, column: 13, scope: !941)
!1044 = !DILocation(line: 4691, column: 19, scope: !941)
!1045 = !DILocation(line: 4691, column: 31, scope: !941)
!1046 = !DILocation(line: 4693, column: 30, scope: !941)
!1047 = !DILocation(line: 4693, column: 36, scope: !941)
!1048 = !DILocation(line: 4693, column: 57, scope: !941)
!1049 = !DILocation(line: 4693, column: 63, scope: !941)
!1050 = !DILocation(line: 4693, column: 48, scope: !941)
!1051 = !DILocation(line: 4693, column: 73, scope: !941)
!1052 = !DILocation(line: 4693, column: 79, scope: !941)
!1053 = !DILocation(line: 4693, column: 11, scope: !941)
!1054 = !DILocation(line: 4694, column: 9, scope: !941)
!1055 = !DILocation(line: 4697, column: 30, scope: !941)
!1056 = !DILocation(line: 4697, column: 36, scope: !941)
!1057 = !DILocation(line: 4697, column: 57, scope: !941)
!1058 = !DILocation(line: 4697, column: 63, scope: !941)
!1059 = !DILocation(line: 4697, column: 48, scope: !941)
!1060 = !DILocation(line: 4697, column: 11, scope: !941)
!1061 = !DILocation(line: 4700, column: 5, scope: !941)
!1062 = !DILocation(line: 4704, column: 11, scope: !941)
!1063 = !DILocation(line: 4704, column: 35, scope: !941)
!1064 = !DILocation(line: 4707, column: 29, scope: !941)
!1065 = !DILocation(line: 4707, column: 9, scope: !941)
!1066 = !DILocation(line: 4708, column: 7, scope: !941)
!1067 = !DILocation(line: 4713, column: 21, scope: !941)
!1068 = !DILocation(line: 4713, column: 9, scope: !941)
!1069 = !DILocation(line: 4716, column: 3, scope: !941)
!1070 = !DILocation(line: 4717, column: 13, scope: !941)
!1071 = !DILocation(line: 4717, column: 53, scope: !941)
!1072 = !DILocation(line: 4717, column: 63, scope: !941)
!1073 = !DILocation(line: 4717, column: 67, scope: !941)
!1074 = !DILocation(line: 4717, column: 110, scope: !941)
!1075 = !DILocation(line: 4717, column: 12, scope: !941)
!1076 = !DILocation(line: 4719, column: 9, scope: !941)
!1077 = !DILocation(line: 4719, column: 15, scope: !941)
!1078 = !DILocation(line: 4719, column: 25, scope: !941)
!1079 = !DILocation(line: 4721, column: 11, scope: !941)
!1080 = !DILocation(line: 4721, column: 35, scope: !941)
!1081 = !DILocation(line: 4724, column: 13, scope: !941)
!1082 = !DILocation(line: 4724, column: 19, scope: !941)
!1083 = !DILocation(line: 4724, column: 31, scope: !941)
!1084 = !DILocation(line: 4727, column: 11, scope: !941)
!1085 = !DILocation(line: 4727, column: 17, scope: !941)
!1086 = !DILocation(line: 4727, column: 27, scope: !941)
!1087 = !DILocation(line: 4727, column: 31, scope: !941)
!1088 = !DILocation(line: 4728, column: 9, scope: !941)
!1089 = !DILocation(line: 4732, column: 31, scope: !941)
!1090 = !DILocation(line: 4732, column: 11, scope: !941)
!1091 = !DILocation(line: 4734, column: 7, scope: !941)
!1092 = !DILocation(line: 4735, column: 5, scope: !941)
!1093 = !DILocation(line: 4740, column: 19, scope: !941)
!1094 = !DILocation(line: 4740, column: 7, scope: !941)
!1095 = !DILocation(line: 4742, column: 3, scope: !941)
!1096 = !DILocation(line: 4748, column: 8, scope: !941)
!1097 = !DILocation(line: 4748, column: 51, scope: !941)
!1098 = !DILocation(line: 4748, column: 61, scope: !941)
!1099 = !DILocation(line: 4748, column: 65, scope: !941)
!1100 = !DILocation(line: 4748, column: 110, scope: !941)
!1101 = !DILocation(line: 4748, column: 7, scope: !941)
!1102 = !DILocation(line: 4751, column: 22, scope: !941)
!1103 = !DILocation(line: 4751, column: 28, scope: !941)
!1104 = !DILocation(line: 4751, column: 5, scope: !941)
!1105 = !DILocation(line: 4752, column: 3, scope: !941)
!1106 = !DILocation(line: 4755, column: 3, scope: !941)
!1107 = !DILocation(line: 4757, column: 3, scope: !941)
!1108 = !DILocation(line: 4758, column: 1, scope: !941)
!1109 = distinct !DISubprogram(name: "I2C_Enable_IRQ", scope: !1, file: !1, line: 6476, type: !9, scopeLine: 6477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1110 = !DILocation(line: 6478, column: 12, scope: !1109)
!1111 = !DILocation(line: 6480, column: 8, scope: !1109)
!1112 = !DILocation(line: 6480, column: 14, scope: !1109)
!1113 = !DILocation(line: 6480, column: 22, scope: !1109)
!1114 = !DILocation(line: 6480, column: 45, scope: !1109)
!1115 = !DILocation(line: 6481, column: 8, scope: !1109)
!1116 = !DILocation(line: 6481, column: 14, scope: !1109)
!1117 = !DILocation(line: 6481, column: 22, scope: !1109)
!1118 = !DILocation(line: 6480, column: 7, scope: !1109)
!1119 = !DILocation(line: 6483, column: 10, scope: !1109)
!1120 = !DILocation(line: 6483, column: 27, scope: !1109)
!1121 = !DILocation(line: 6483, column: 49, scope: !1109)
!1122 = !DILocation(line: 6483, column: 9, scope: !1109)
!1123 = !DILocation(line: 6486, column: 14, scope: !1109)
!1124 = !DILocation(line: 6487, column: 5, scope: !1109)
!1125 = !DILocation(line: 6489, column: 9, scope: !1109)
!1126 = !DILocation(line: 6489, column: 26, scope: !1109)
!1127 = !DILocation(line: 6492, column: 14, scope: !1109)
!1128 = !DILocation(line: 6493, column: 5, scope: !1109)
!1129 = !DILocation(line: 6495, column: 9, scope: !1109)
!1130 = !DILocation(line: 6495, column: 26, scope: !1109)
!1131 = !DILocation(line: 6498, column: 14, scope: !1109)
!1132 = !DILocation(line: 6499, column: 5, scope: !1109)
!1133 = !DILocation(line: 6501, column: 9, scope: !1109)
!1134 = !DILocation(line: 6501, column: 26, scope: !1109)
!1135 = !DILocation(line: 6504, column: 14, scope: !1109)
!1136 = !DILocation(line: 6505, column: 5, scope: !1109)
!1137 = !DILocation(line: 6506, column: 3, scope: !1109)
!1138 = !DILocation(line: 6509, column: 10, scope: !1109)
!1139 = !DILocation(line: 6509, column: 27, scope: !1109)
!1140 = !DILocation(line: 6509, column: 49, scope: !1109)
!1141 = !DILocation(line: 6509, column: 9, scope: !1109)
!1142 = !DILocation(line: 6512, column: 14, scope: !1109)
!1143 = !DILocation(line: 6513, column: 5, scope: !1109)
!1144 = !DILocation(line: 6515, column: 10, scope: !1109)
!1145 = !DILocation(line: 6515, column: 27, scope: !1109)
!1146 = !DILocation(line: 6515, column: 45, scope: !1109)
!1147 = !DILocation(line: 6515, column: 9, scope: !1109)
!1148 = !DILocation(line: 6518, column: 14, scope: !1109)
!1149 = !DILocation(line: 6519, column: 5, scope: !1109)
!1150 = !DILocation(line: 6521, column: 10, scope: !1109)
!1151 = !DILocation(line: 6521, column: 27, scope: !1109)
!1152 = !DILocation(line: 6521, column: 45, scope: !1109)
!1153 = !DILocation(line: 6521, column: 9, scope: !1109)
!1154 = !DILocation(line: 6524, column: 14, scope: !1109)
!1155 = !DILocation(line: 6525, column: 5, scope: !1109)
!1156 = !DILocation(line: 6527, column: 9, scope: !1109)
!1157 = !DILocation(line: 6527, column: 26, scope: !1109)
!1158 = !DILocation(line: 6530, column: 14, scope: !1109)
!1159 = !DILocation(line: 6531, column: 5, scope: !1109)
!1160 = !DILocation(line: 6537, column: 3, scope: !1109)
!1161 = !DILocation(line: 6538, column: 1, scope: !1109)
!1162 = distinct !DISubprogram(name: "HAL_I2C_Master_Receive_IT", scope: !1, file: !1, line: 1630, type: !9, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1163 = !DILocation(line: 1634, column: 7, scope: !1162)
!1164 = !DILocation(line: 1634, column: 13, scope: !1162)
!1165 = !DILocation(line: 1634, column: 19, scope: !1162)
!1166 = !DILocation(line: 1636, column: 9, scope: !1162)
!1167 = !DILocation(line: 1636, column: 49, scope: !1162)
!1168 = !DILocation(line: 1638, column: 7, scope: !1162)
!1169 = !DILocation(line: 1642, column: 5, scope: !1162)
!1170 = !DILocation(line: 1644, column: 5, scope: !1162)
!1171 = !DILocation(line: 1644, column: 11, scope: !1162)
!1172 = !DILocation(line: 1644, column: 23, scope: !1162)
!1173 = !DILocation(line: 1645, column: 5, scope: !1162)
!1174 = !DILocation(line: 1645, column: 11, scope: !1162)
!1175 = !DILocation(line: 1645, column: 23, scope: !1162)
!1176 = !DILocation(line: 1646, column: 5, scope: !1162)
!1177 = !DILocation(line: 1646, column: 11, scope: !1162)
!1178 = !DILocation(line: 1646, column: 23, scope: !1162)
!1179 = !DILocation(line: 1649, column: 25, scope: !1162)
!1180 = !DILocation(line: 1649, column: 5, scope: !1162)
!1181 = !DILocation(line: 1649, column: 11, scope: !1162)
!1182 = !DILocation(line: 1649, column: 23, scope: !1162)
!1183 = !DILocation(line: 1650, column: 25, scope: !1162)
!1184 = !DILocation(line: 1650, column: 5, scope: !1162)
!1185 = !DILocation(line: 1650, column: 11, scope: !1162)
!1186 = !DILocation(line: 1650, column: 23, scope: !1162)
!1187 = !DILocation(line: 1651, column: 5, scope: !1162)
!1188 = !DILocation(line: 1651, column: 11, scope: !1162)
!1189 = !DILocation(line: 1651, column: 23, scope: !1162)
!1190 = !DILocation(line: 1652, column: 5, scope: !1162)
!1191 = !DILocation(line: 1652, column: 11, scope: !1162)
!1192 = !DILocation(line: 1652, column: 23, scope: !1162)
!1193 = !DILocation(line: 1654, column: 9, scope: !1162)
!1194 = !DILocation(line: 1654, column: 15, scope: !1162)
!1195 = !DILocation(line: 1654, column: 25, scope: !1162)
!1196 = !DILocation(line: 1656, column: 7, scope: !1162)
!1197 = !DILocation(line: 1656, column: 13, scope: !1162)
!1198 = !DILocation(line: 1656, column: 22, scope: !1162)
!1199 = !DILocation(line: 1657, column: 16, scope: !1162)
!1200 = !DILocation(line: 1658, column: 5, scope: !1162)
!1201 = !DILocation(line: 1661, column: 24, scope: !1162)
!1202 = !DILocation(line: 1661, column: 30, scope: !1162)
!1203 = !DILocation(line: 1661, column: 7, scope: !1162)
!1204 = !DILocation(line: 1661, column: 13, scope: !1162)
!1205 = !DILocation(line: 1661, column: 22, scope: !1162)
!1206 = !DILocation(line: 1662, column: 16, scope: !1162)
!1207 = !DILocation(line: 1667, column: 24, scope: !1162)
!1208 = !DILocation(line: 1667, column: 30, scope: !1162)
!1209 = !DILocation(line: 1667, column: 51, scope: !1162)
!1210 = !DILocation(line: 1667, column: 57, scope: !1162)
!1211 = !DILocation(line: 1667, column: 42, scope: !1162)
!1212 = !DILocation(line: 1667, column: 67, scope: !1162)
!1213 = !DILocation(line: 1667, column: 5, scope: !1162)
!1214 = !DILocation(line: 1670, column: 5, scope: !1162)
!1215 = !DILocation(line: 1679, column: 20, scope: !1162)
!1216 = !DILocation(line: 1679, column: 5, scope: !1162)
!1217 = !DILocation(line: 1681, column: 5, scope: !1162)
!1218 = !DILocation(line: 1685, column: 5, scope: !1162)
!1219 = !DILocation(line: 1687, column: 1, scope: !1162)
!1220 = distinct !DISubprogram(name: "HAL_I2C_Slave_Transmit_IT", scope: !1, file: !1, line: 1697, type: !9, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1221 = !DILocation(line: 1699, column: 7, scope: !1220)
!1222 = !DILocation(line: 1699, column: 13, scope: !1220)
!1223 = !DILocation(line: 1699, column: 19, scope: !1220)
!1224 = !DILocation(line: 1702, column: 5, scope: !1220)
!1225 = !DILocation(line: 1704, column: 5, scope: !1220)
!1226 = !DILocation(line: 1704, column: 11, scope: !1220)
!1227 = !DILocation(line: 1704, column: 23, scope: !1220)
!1228 = !DILocation(line: 1705, column: 5, scope: !1220)
!1229 = !DILocation(line: 1705, column: 11, scope: !1220)
!1230 = !DILocation(line: 1705, column: 23, scope: !1220)
!1231 = !DILocation(line: 1706, column: 5, scope: !1220)
!1232 = !DILocation(line: 1706, column: 11, scope: !1220)
!1233 = !DILocation(line: 1706, column: 23, scope: !1220)
!1234 = !DILocation(line: 1709, column: 5, scope: !1220)
!1235 = !DILocation(line: 1709, column: 11, scope: !1220)
!1236 = !DILocation(line: 1709, column: 21, scope: !1220)
!1237 = !DILocation(line: 1709, column: 25, scope: !1220)
!1238 = !DILocation(line: 1712, column: 25, scope: !1220)
!1239 = !DILocation(line: 1712, column: 5, scope: !1220)
!1240 = !DILocation(line: 1712, column: 11, scope: !1220)
!1241 = !DILocation(line: 1712, column: 23, scope: !1220)
!1242 = !DILocation(line: 1713, column: 25, scope: !1220)
!1243 = !DILocation(line: 1713, column: 5, scope: !1220)
!1244 = !DILocation(line: 1713, column: 11, scope: !1220)
!1245 = !DILocation(line: 1713, column: 23, scope: !1220)
!1246 = !DILocation(line: 1714, column: 25, scope: !1220)
!1247 = !DILocation(line: 1714, column: 31, scope: !1220)
!1248 = !DILocation(line: 1714, column: 5, scope: !1220)
!1249 = !DILocation(line: 1714, column: 11, scope: !1220)
!1250 = !DILocation(line: 1714, column: 23, scope: !1220)
!1251 = !DILocation(line: 1715, column: 5, scope: !1220)
!1252 = !DILocation(line: 1715, column: 11, scope: !1220)
!1253 = !DILocation(line: 1715, column: 23, scope: !1220)
!1254 = !DILocation(line: 1716, column: 5, scope: !1220)
!1255 = !DILocation(line: 1716, column: 11, scope: !1220)
!1256 = !DILocation(line: 1716, column: 23, scope: !1220)
!1257 = !DILocation(line: 1719, column: 5, scope: !1220)
!1258 = !DILocation(line: 1728, column: 20, scope: !1220)
!1259 = !DILocation(line: 1728, column: 5, scope: !1220)
!1260 = !DILocation(line: 1730, column: 5, scope: !1220)
!1261 = !DILocation(line: 1734, column: 5, scope: !1220)
!1262 = !DILocation(line: 1736, column: 1, scope: !1220)
!1263 = distinct !DISubprogram(name: "I2C_Slave_ISR_IT", scope: !1, file: !1, line: 4768, type: !9, scopeLine: 4769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1264 = !DILocation(line: 4770, column: 25, scope: !1263)
!1265 = !DILocation(line: 4770, column: 31, scope: !1263)
!1266 = !DILocation(line: 4770, column: 12, scope: !1263)
!1267 = !DILocation(line: 4771, column: 25, scope: !1263)
!1268 = !DILocation(line: 4771, column: 12, scope: !1263)
!1269 = !DILocation(line: 4774, column: 3, scope: !1263)
!1270 = !DILocation(line: 4777, column: 8, scope: !1263)
!1271 = !DILocation(line: 4777, column: 51, scope: !1263)
!1272 = !DILocation(line: 4777, column: 61, scope: !1263)
!1273 = !DILocation(line: 4777, column: 65, scope: !1263)
!1274 = !DILocation(line: 4777, column: 110, scope: !1263)
!1275 = !DILocation(line: 4777, column: 7, scope: !1263)
!1276 = !DILocation(line: 4780, column: 21, scope: !1263)
!1277 = !DILocation(line: 4780, column: 27, scope: !1263)
!1278 = !DILocation(line: 4780, column: 5, scope: !1263)
!1279 = !DILocation(line: 4781, column: 3, scope: !1263)
!1280 = !DILocation(line: 4783, column: 8, scope: !1263)
!1281 = !DILocation(line: 4783, column: 48, scope: !1263)
!1282 = !DILocation(line: 4783, column: 58, scope: !1263)
!1283 = !DILocation(line: 4783, column: 62, scope: !1263)
!1284 = !DILocation(line: 4783, column: 107, scope: !1263)
!1285 = !DILocation(line: 4783, column: 7, scope: !1263)
!1286 = !DILocation(line: 4789, column: 9, scope: !1263)
!1287 = !DILocation(line: 4789, column: 15, scope: !1263)
!1288 = !DILocation(line: 4789, column: 25, scope: !1263)
!1289 = !DILocation(line: 4792, column: 12, scope: !1263)
!1290 = !DILocation(line: 4792, column: 18, scope: !1263)
!1291 = !DILocation(line: 4792, column: 24, scope: !1263)
!1292 = !DILocation(line: 4792, column: 49, scope: !1263)
!1293 = !DILocation(line: 4792, column: 53, scope: !1263)
!1294 = !DILocation(line: 4792, column: 64, scope: !1263)
!1295 = !DILocation(line: 4792, column: 11, scope: !1263)
!1296 = !DILocation(line: 4795, column: 26, scope: !1263)
!1297 = !DILocation(line: 4795, column: 32, scope: !1263)
!1298 = !DILocation(line: 4795, column: 9, scope: !1263)
!1299 = !DILocation(line: 4796, column: 7, scope: !1263)
!1300 = !DILocation(line: 4797, column: 17, scope: !1263)
!1301 = !DILocation(line: 4797, column: 23, scope: !1263)
!1302 = !DILocation(line: 4797, column: 29, scope: !1263)
!1303 = !DILocation(line: 4797, column: 62, scope: !1263)
!1304 = !DILocation(line: 4797, column: 66, scope: !1263)
!1305 = !DILocation(line: 4797, column: 77, scope: !1263)
!1306 = !DILocation(line: 4797, column: 16, scope: !1263)
!1307 = !DILocation(line: 4800, column: 9, scope: !1263)
!1308 = !DILocation(line: 4803, column: 24, scope: !1263)
!1309 = !DILocation(line: 4803, column: 9, scope: !1263)
!1310 = !DILocation(line: 4807, column: 28, scope: !1263)
!1311 = !DILocation(line: 4807, column: 9, scope: !1263)
!1312 = !DILocation(line: 4808, column: 7, scope: !1263)
!1313 = !DILocation(line: 4812, column: 9, scope: !1263)
!1314 = !DILocation(line: 4814, column: 5, scope: !1263)
!1315 = !DILocation(line: 4819, column: 7, scope: !1263)
!1316 = !DILocation(line: 4822, column: 7, scope: !1263)
!1317 = !DILocation(line: 4822, column: 13, scope: !1263)
!1318 = !DILocation(line: 4822, column: 23, scope: !1263)
!1319 = !DILocation(line: 4824, column: 12, scope: !1263)
!1320 = !DILocation(line: 4824, column: 23, scope: !1263)
!1321 = !DILocation(line: 4824, column: 43, scope: !1263)
!1322 = !DILocation(line: 4824, column: 47, scope: !1263)
!1323 = !DILocation(line: 4824, column: 58, scope: !1263)
!1324 = !DILocation(line: 4824, column: 11, scope: !1263)
!1325 = !DILocation(line: 4827, column: 21, scope: !1263)
!1326 = !DILocation(line: 4827, column: 27, scope: !1263)
!1327 = !DILocation(line: 4827, column: 33, scope: !1263)
!1328 = !DILocation(line: 4827, column: 9, scope: !1263)
!1329 = !DILocation(line: 4828, column: 7, scope: !1263)
!1330 = !DILocation(line: 4830, column: 3, scope: !1263)
!1331 = !DILocation(line: 4831, column: 13, scope: !1263)
!1332 = !DILocation(line: 4831, column: 55, scope: !1263)
!1333 = !DILocation(line: 4831, column: 65, scope: !1263)
!1334 = !DILocation(line: 4831, column: 69, scope: !1263)
!1335 = !DILocation(line: 4831, column: 112, scope: !1263)
!1336 = !DILocation(line: 4831, column: 12, scope: !1263)
!1337 = !DILocation(line: 4833, column: 9, scope: !1263)
!1338 = !DILocation(line: 4833, column: 15, scope: !1263)
!1339 = !DILocation(line: 4833, column: 25, scope: !1263)
!1340 = !DILocation(line: 4836, column: 34, scope: !1263)
!1341 = !DILocation(line: 4836, column: 40, scope: !1263)
!1342 = !DILocation(line: 4836, column: 50, scope: !1263)
!1343 = !DILocation(line: 4836, column: 25, scope: !1263)
!1344 = !DILocation(line: 4836, column: 8, scope: !1263)
!1345 = !DILocation(line: 4836, column: 14, scope: !1263)
!1346 = !DILocation(line: 4836, column: 23, scope: !1263)
!1347 = !DILocation(line: 4839, column: 7, scope: !1263)
!1348 = !DILocation(line: 4839, column: 13, scope: !1263)
!1349 = !DILocation(line: 4839, column: 21, scope: !1263)
!1350 = !DILocation(line: 4841, column: 7, scope: !1263)
!1351 = !DILocation(line: 4841, column: 13, scope: !1263)
!1352 = !DILocation(line: 4841, column: 21, scope: !1263)
!1353 = !DILocation(line: 4842, column: 7, scope: !1263)
!1354 = !DILocation(line: 4842, column: 13, scope: !1263)
!1355 = !DILocation(line: 4842, column: 22, scope: !1263)
!1356 = !DILocation(line: 4843, column: 5, scope: !1263)
!1357 = !DILocation(line: 4845, column: 10, scope: !1263)
!1358 = !DILocation(line: 4845, column: 16, scope: !1263)
!1359 = !DILocation(line: 4845, column: 26, scope: !1263)
!1360 = !DILocation(line: 4845, column: 33, scope: !1263)
!1361 = !DILocation(line: 4846, column: 10, scope: !1263)
!1362 = !DILocation(line: 4846, column: 21, scope: !1263)
!1363 = !DILocation(line: 4845, column: 9, scope: !1263)
!1364 = !DILocation(line: 4849, column: 26, scope: !1263)
!1365 = !DILocation(line: 4849, column: 7, scope: !1263)
!1366 = !DILocation(line: 4850, column: 5, scope: !1263)
!1367 = !DILocation(line: 4851, column: 3, scope: !1263)
!1368 = !DILocation(line: 4852, column: 13, scope: !1263)
!1369 = !DILocation(line: 4852, column: 55, scope: !1263)
!1370 = !DILocation(line: 4852, column: 65, scope: !1263)
!1371 = !DILocation(line: 4853, column: 13, scope: !1263)
!1372 = !DILocation(line: 4853, column: 58, scope: !1263)
!1373 = !DILocation(line: 4852, column: 12, scope: !1263)
!1374 = !DILocation(line: 4855, column: 20, scope: !1263)
!1375 = !DILocation(line: 4855, column: 26, scope: !1263)
!1376 = !DILocation(line: 4855, column: 5, scope: !1263)
!1377 = !DILocation(line: 4856, column: 3, scope: !1263)
!1378 = !DILocation(line: 4857, column: 13, scope: !1263)
!1379 = !DILocation(line: 4857, column: 55, scope: !1263)
!1380 = !DILocation(line: 4857, column: 65, scope: !1263)
!1381 = !DILocation(line: 4857, column: 69, scope: !1263)
!1382 = !DILocation(line: 4857, column: 112, scope: !1263)
!1383 = !DILocation(line: 4857, column: 12, scope: !1263)
!1384 = !DILocation(line: 4863, column: 9, scope: !1263)
!1385 = !DILocation(line: 4863, column: 15, scope: !1263)
!1386 = !DILocation(line: 4863, column: 25, scope: !1263)
!1387 = !DILocation(line: 4866, column: 31, scope: !1263)
!1388 = !DILocation(line: 4866, column: 37, scope: !1263)
!1389 = !DILocation(line: 4866, column: 30, scope: !1263)
!1390 = !DILocation(line: 4866, column: 7, scope: !1263)
!1391 = !DILocation(line: 4866, column: 13, scope: !1263)
!1392 = !DILocation(line: 4866, column: 23, scope: !1263)
!1393 = !DILocation(line: 4866, column: 28, scope: !1263)
!1394 = !DILocation(line: 4869, column: 7, scope: !1263)
!1395 = !DILocation(line: 4869, column: 13, scope: !1263)
!1396 = !DILocation(line: 4869, column: 21, scope: !1263)
!1397 = !DILocation(line: 4871, column: 7, scope: !1263)
!1398 = !DILocation(line: 4871, column: 13, scope: !1263)
!1399 = !DILocation(line: 4871, column: 22, scope: !1263)
!1400 = !DILocation(line: 4872, column: 7, scope: !1263)
!1401 = !DILocation(line: 4872, column: 13, scope: !1263)
!1402 = !DILocation(line: 4872, column: 21, scope: !1263)
!1403 = !DILocation(line: 4873, column: 5, scope: !1263)
!1404 = !DILocation(line: 4876, column: 12, scope: !1263)
!1405 = !DILocation(line: 4876, column: 23, scope: !1263)
!1406 = !DILocation(line: 4876, column: 42, scope: !1263)
!1407 = !DILocation(line: 4876, column: 46, scope: !1263)
!1408 = !DILocation(line: 4876, column: 57, scope: !1263)
!1409 = !DILocation(line: 4876, column: 11, scope: !1263)
!1410 = !DILocation(line: 4880, column: 28, scope: !1263)
!1411 = !DILocation(line: 4880, column: 9, scope: !1263)
!1412 = !DILocation(line: 4881, column: 7, scope: !1263)
!1413 = !DILocation(line: 4883, column: 3, scope: !1263)
!1414 = !DILocation(line: 4890, column: 3, scope: !1263)
!1415 = !DILocation(line: 4892, column: 3, scope: !1263)
!1416 = !DILocation(line: 4893, column: 1, scope: !1263)
!1417 = distinct !DISubprogram(name: "HAL_I2C_Slave_Receive_IT", scope: !1, file: !1, line: 1746, type: !9, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1418 = !DILocation(line: 1748, column: 7, scope: !1417)
!1419 = !DILocation(line: 1748, column: 13, scope: !1417)
!1420 = !DILocation(line: 1748, column: 19, scope: !1417)
!1421 = !DILocation(line: 1751, column: 5, scope: !1417)
!1422 = !DILocation(line: 1753, column: 5, scope: !1417)
!1423 = !DILocation(line: 1753, column: 11, scope: !1417)
!1424 = !DILocation(line: 1753, column: 23, scope: !1417)
!1425 = !DILocation(line: 1754, column: 5, scope: !1417)
!1426 = !DILocation(line: 1754, column: 11, scope: !1417)
!1427 = !DILocation(line: 1754, column: 23, scope: !1417)
!1428 = !DILocation(line: 1755, column: 5, scope: !1417)
!1429 = !DILocation(line: 1755, column: 11, scope: !1417)
!1430 = !DILocation(line: 1755, column: 23, scope: !1417)
!1431 = !DILocation(line: 1758, column: 5, scope: !1417)
!1432 = !DILocation(line: 1758, column: 11, scope: !1417)
!1433 = !DILocation(line: 1758, column: 21, scope: !1417)
!1434 = !DILocation(line: 1758, column: 25, scope: !1417)
!1435 = !DILocation(line: 1761, column: 25, scope: !1417)
!1436 = !DILocation(line: 1761, column: 5, scope: !1417)
!1437 = !DILocation(line: 1761, column: 11, scope: !1417)
!1438 = !DILocation(line: 1761, column: 23, scope: !1417)
!1439 = !DILocation(line: 1762, column: 25, scope: !1417)
!1440 = !DILocation(line: 1762, column: 5, scope: !1417)
!1441 = !DILocation(line: 1762, column: 11, scope: !1417)
!1442 = !DILocation(line: 1762, column: 23, scope: !1417)
!1443 = !DILocation(line: 1763, column: 25, scope: !1417)
!1444 = !DILocation(line: 1763, column: 31, scope: !1417)
!1445 = !DILocation(line: 1763, column: 5, scope: !1417)
!1446 = !DILocation(line: 1763, column: 11, scope: !1417)
!1447 = !DILocation(line: 1763, column: 23, scope: !1417)
!1448 = !DILocation(line: 1764, column: 5, scope: !1417)
!1449 = !DILocation(line: 1764, column: 11, scope: !1417)
!1450 = !DILocation(line: 1764, column: 23, scope: !1417)
!1451 = !DILocation(line: 1765, column: 5, scope: !1417)
!1452 = !DILocation(line: 1765, column: 11, scope: !1417)
!1453 = !DILocation(line: 1765, column: 23, scope: !1417)
!1454 = !DILocation(line: 1768, column: 5, scope: !1417)
!1455 = !DILocation(line: 1777, column: 20, scope: !1417)
!1456 = !DILocation(line: 1777, column: 5, scope: !1417)
!1457 = !DILocation(line: 1779, column: 5, scope: !1417)
!1458 = !DILocation(line: 1783, column: 5, scope: !1417)
!1459 = !DILocation(line: 1785, column: 1, scope: !1417)
!1460 = distinct !DISubprogram(name: "HAL_I2C_Master_Transmit_DMA", scope: !1, file: !1, line: 1797, type: !9, scopeLine: 1799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1461 = !DILocation(line: 1803, column: 7, scope: !1460)
!1462 = !DILocation(line: 1803, column: 13, scope: !1460)
!1463 = !DILocation(line: 1803, column: 19, scope: !1460)
!1464 = !DILocation(line: 1805, column: 9, scope: !1460)
!1465 = !DILocation(line: 1805, column: 49, scope: !1460)
!1466 = !DILocation(line: 1807, column: 7, scope: !1460)
!1467 = !DILocation(line: 1811, column: 5, scope: !1460)
!1468 = !DILocation(line: 1813, column: 5, scope: !1460)
!1469 = !DILocation(line: 1813, column: 11, scope: !1460)
!1470 = !DILocation(line: 1813, column: 23, scope: !1460)
!1471 = !DILocation(line: 1814, column: 5, scope: !1460)
!1472 = !DILocation(line: 1814, column: 11, scope: !1460)
!1473 = !DILocation(line: 1814, column: 23, scope: !1460)
!1474 = !DILocation(line: 1815, column: 5, scope: !1460)
!1475 = !DILocation(line: 1815, column: 11, scope: !1460)
!1476 = !DILocation(line: 1815, column: 23, scope: !1460)
!1477 = !DILocation(line: 1818, column: 25, scope: !1460)
!1478 = !DILocation(line: 1818, column: 5, scope: !1460)
!1479 = !DILocation(line: 1818, column: 11, scope: !1460)
!1480 = !DILocation(line: 1818, column: 23, scope: !1460)
!1481 = !DILocation(line: 1819, column: 25, scope: !1460)
!1482 = !DILocation(line: 1819, column: 5, scope: !1460)
!1483 = !DILocation(line: 1819, column: 11, scope: !1460)
!1484 = !DILocation(line: 1819, column: 23, scope: !1460)
!1485 = !DILocation(line: 1820, column: 5, scope: !1460)
!1486 = !DILocation(line: 1820, column: 11, scope: !1460)
!1487 = !DILocation(line: 1820, column: 23, scope: !1460)
!1488 = !DILocation(line: 1821, column: 5, scope: !1460)
!1489 = !DILocation(line: 1821, column: 11, scope: !1460)
!1490 = !DILocation(line: 1821, column: 23, scope: !1460)
!1491 = !DILocation(line: 1823, column: 9, scope: !1460)
!1492 = !DILocation(line: 1823, column: 15, scope: !1460)
!1493 = !DILocation(line: 1823, column: 25, scope: !1460)
!1494 = !DILocation(line: 1825, column: 7, scope: !1460)
!1495 = !DILocation(line: 1825, column: 13, scope: !1460)
!1496 = !DILocation(line: 1825, column: 22, scope: !1460)
!1497 = !DILocation(line: 1826, column: 16, scope: !1460)
!1498 = !DILocation(line: 1827, column: 5, scope: !1460)
!1499 = !DILocation(line: 1830, column: 24, scope: !1460)
!1500 = !DILocation(line: 1830, column: 30, scope: !1460)
!1501 = !DILocation(line: 1830, column: 7, scope: !1460)
!1502 = !DILocation(line: 1830, column: 13, scope: !1460)
!1503 = !DILocation(line: 1830, column: 22, scope: !1460)
!1504 = !DILocation(line: 1831, column: 16, scope: !1460)
!1505 = !DILocation(line: 1834, column: 9, scope: !1460)
!1506 = !DILocation(line: 1834, column: 15, scope: !1460)
!1507 = !DILocation(line: 1834, column: 24, scope: !1460)
!1508 = !DILocation(line: 1836, column: 11, scope: !1460)
!1509 = !DILocation(line: 1836, column: 17, scope: !1460)
!1510 = !DILocation(line: 1836, column: 24, scope: !1460)
!1511 = !DILocation(line: 1839, column: 9, scope: !1460)
!1512 = !DILocation(line: 1839, column: 15, scope: !1460)
!1513 = !DILocation(line: 1839, column: 23, scope: !1460)
!1514 = !DILocation(line: 1839, column: 40, scope: !1460)
!1515 = !DILocation(line: 1842, column: 9, scope: !1460)
!1516 = !DILocation(line: 1842, column: 15, scope: !1460)
!1517 = !DILocation(line: 1842, column: 23, scope: !1460)
!1518 = !DILocation(line: 1842, column: 41, scope: !1460)
!1519 = !DILocation(line: 1845, column: 9, scope: !1460)
!1520 = !DILocation(line: 1845, column: 15, scope: !1460)
!1521 = !DILocation(line: 1845, column: 23, scope: !1460)
!1522 = !DILocation(line: 1845, column: 44, scope: !1460)
!1523 = !DILocation(line: 1846, column: 9, scope: !1460)
!1524 = !DILocation(line: 1846, column: 15, scope: !1460)
!1525 = !DILocation(line: 1846, column: 23, scope: !1460)
!1526 = !DILocation(line: 1846, column: 41, scope: !1460)
!1527 = !DILocation(line: 1849, column: 42, scope: !1460)
!1528 = !DILocation(line: 1849, column: 48, scope: !1460)
!1529 = !DILocation(line: 1849, column: 66, scope: !1460)
!1530 = !DILocation(line: 1849, column: 56, scope: !1460)
!1531 = !DILocation(line: 1849, column: 84, scope: !1460)
!1532 = !DILocation(line: 1849, column: 90, scope: !1460)
!1533 = !DILocation(line: 1849, column: 100, scope: !1460)
!1534 = !DILocation(line: 1849, column: 73, scope: !1460)
!1535 = !DILocation(line: 1849, column: 106, scope: !1460)
!1536 = !DILocation(line: 1849, column: 112, scope: !1460)
!1537 = !DILocation(line: 1849, column: 25, scope: !1460)
!1538 = !DILocation(line: 1849, column: 23, scope: !1460)
!1539 = !DILocation(line: 1850, column: 7, scope: !1460)
!1540 = !DILocation(line: 1854, column: 9, scope: !1460)
!1541 = !DILocation(line: 1854, column: 15, scope: !1460)
!1542 = !DILocation(line: 1854, column: 25, scope: !1460)
!1543 = !DILocation(line: 1855, column: 9, scope: !1460)
!1544 = !DILocation(line: 1855, column: 15, scope: !1460)
!1545 = !DILocation(line: 1855, column: 25, scope: !1460)
!1546 = !DILocation(line: 1858, column: 9, scope: !1460)
!1547 = !DILocation(line: 1858, column: 15, scope: !1460)
!1548 = !DILocation(line: 1858, column: 25, scope: !1460)
!1549 = !DILocation(line: 1861, column: 9, scope: !1460)
!1550 = !DILocation(line: 1863, column: 9, scope: !1460)
!1551 = !DILocation(line: 1866, column: 11, scope: !1460)
!1552 = !DILocation(line: 1866, column: 25, scope: !1460)
!1553 = !DILocation(line: 1870, column: 28, scope: !1460)
!1554 = !DILocation(line: 1870, column: 34, scope: !1460)
!1555 = !DILocation(line: 1870, column: 55, scope: !1460)
!1556 = !DILocation(line: 1870, column: 61, scope: !1460)
!1557 = !DILocation(line: 1870, column: 46, scope: !1460)
!1558 = !DILocation(line: 1870, column: 71, scope: !1460)
!1559 = !DILocation(line: 1870, column: 9, scope: !1460)
!1560 = !DILocation(line: 1873, column: 28, scope: !1460)
!1561 = !DILocation(line: 1873, column: 34, scope: !1460)
!1562 = !DILocation(line: 1873, column: 9, scope: !1460)
!1563 = !DILocation(line: 1873, column: 15, scope: !1460)
!1564 = !DILocation(line: 1873, column: 25, scope: !1460)
!1565 = !DILocation(line: 1876, column: 9, scope: !1460)
!1566 = !DILocation(line: 1882, column: 24, scope: !1460)
!1567 = !DILocation(line: 1882, column: 9, scope: !1460)
!1568 = !DILocation(line: 1885, column: 9, scope: !1460)
!1569 = !DILocation(line: 1885, column: 15, scope: !1460)
!1570 = !DILocation(line: 1885, column: 25, scope: !1460)
!1571 = !DILocation(line: 1885, column: 29, scope: !1460)
!1572 = !DILocation(line: 1886, column: 7, scope: !1460)
!1573 = !DILocation(line: 1890, column: 9, scope: !1460)
!1574 = !DILocation(line: 1890, column: 15, scope: !1460)
!1575 = !DILocation(line: 1890, column: 25, scope: !1460)
!1576 = !DILocation(line: 1891, column: 9, scope: !1460)
!1577 = !DILocation(line: 1891, column: 15, scope: !1460)
!1578 = !DILocation(line: 1891, column: 25, scope: !1460)
!1579 = !DILocation(line: 1894, column: 9, scope: !1460)
!1580 = !DILocation(line: 1894, column: 15, scope: !1460)
!1581 = !DILocation(line: 1894, column: 25, scope: !1460)
!1582 = !DILocation(line: 1897, column: 9, scope: !1460)
!1583 = !DILocation(line: 1899, column: 9, scope: !1460)
!1584 = !DILocation(line: 1901, column: 5, scope: !1460)
!1585 = !DILocation(line: 1905, column: 7, scope: !1460)
!1586 = !DILocation(line: 1905, column: 13, scope: !1460)
!1587 = !DILocation(line: 1905, column: 21, scope: !1460)
!1588 = !DILocation(line: 1909, column: 26, scope: !1460)
!1589 = !DILocation(line: 1909, column: 32, scope: !1460)
!1590 = !DILocation(line: 1909, column: 53, scope: !1460)
!1591 = !DILocation(line: 1909, column: 59, scope: !1460)
!1592 = !DILocation(line: 1909, column: 44, scope: !1460)
!1593 = !DILocation(line: 1909, column: 7, scope: !1460)
!1594 = !DILocation(line: 1912, column: 7, scope: !1460)
!1595 = !DILocation(line: 1920, column: 22, scope: !1460)
!1596 = !DILocation(line: 1920, column: 7, scope: !1460)
!1597 = !DILocation(line: 1923, column: 5, scope: !1460)
!1598 = !DILocation(line: 1927, column: 5, scope: !1460)
!1599 = !DILocation(line: 1929, column: 1, scope: !1460)
!1600 = distinct !DISubprogram(name: "I2C_Master_ISR_DMA", scope: !1, file: !1, line: 4903, type: !9, scopeLine: 4904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1601 = !DILocation(line: 4909, column: 3, scope: !1600)
!1602 = !DILocation(line: 4911, column: 8, scope: !1600)
!1603 = !DILocation(line: 4911, column: 45, scope: !1600)
!1604 = !DILocation(line: 4911, column: 55, scope: !1600)
!1605 = !DILocation(line: 4911, column: 59, scope: !1600)
!1606 = !DILocation(line: 4911, column: 104, scope: !1600)
!1607 = !DILocation(line: 4911, column: 7, scope: !1600)
!1608 = !DILocation(line: 4914, column: 5, scope: !1600)
!1609 = !DILocation(line: 4917, column: 5, scope: !1600)
!1610 = !DILocation(line: 4917, column: 11, scope: !1600)
!1611 = !DILocation(line: 4917, column: 21, scope: !1600)
!1612 = !DILocation(line: 4922, column: 20, scope: !1600)
!1613 = !DILocation(line: 4922, column: 5, scope: !1600)
!1614 = !DILocation(line: 4925, column: 20, scope: !1600)
!1615 = !DILocation(line: 4925, column: 5, scope: !1600)
!1616 = !DILocation(line: 4926, column: 3, scope: !1600)
!1617 = !DILocation(line: 4927, column: 13, scope: !1600)
!1618 = !DILocation(line: 4927, column: 51, scope: !1600)
!1619 = !DILocation(line: 4927, column: 61, scope: !1600)
!1620 = !DILocation(line: 4927, column: 65, scope: !1600)
!1621 = !DILocation(line: 4927, column: 108, scope: !1600)
!1622 = !DILocation(line: 4927, column: 12, scope: !1600)
!1623 = !DILocation(line: 4930, column: 5, scope: !1600)
!1624 = !DILocation(line: 4932, column: 9, scope: !1600)
!1625 = !DILocation(line: 4932, column: 15, scope: !1600)
!1626 = !DILocation(line: 4932, column: 25, scope: !1600)
!1627 = !DILocation(line: 4935, column: 31, scope: !1600)
!1628 = !DILocation(line: 4935, column: 37, scope: !1600)
!1629 = !DILocation(line: 4935, column: 47, scope: !1600)
!1630 = !DILocation(line: 4935, column: 51, scope: !1600)
!1631 = !DILocation(line: 4935, column: 20, scope: !1600)
!1632 = !DILocation(line: 4935, column: 18, scope: !1600)
!1633 = !DILocation(line: 4938, column: 11, scope: !1600)
!1634 = !DILocation(line: 4938, column: 17, scope: !1600)
!1635 = !DILocation(line: 4938, column: 27, scope: !1600)
!1636 = !DILocation(line: 4940, column: 9, scope: !1600)
!1637 = !DILocation(line: 4940, column: 15, scope: !1600)
!1638 = !DILocation(line: 4940, column: 24, scope: !1600)
!1639 = !DILocation(line: 4941, column: 18, scope: !1600)
!1640 = !DILocation(line: 4942, column: 7, scope: !1600)
!1641 = !DILocation(line: 4945, column: 26, scope: !1600)
!1642 = !DILocation(line: 4945, column: 32, scope: !1600)
!1643 = !DILocation(line: 4945, column: 9, scope: !1600)
!1644 = !DILocation(line: 4945, column: 15, scope: !1600)
!1645 = !DILocation(line: 4945, column: 24, scope: !1600)
!1646 = !DILocation(line: 4946, column: 13, scope: !1600)
!1647 = !DILocation(line: 4946, column: 19, scope: !1600)
!1648 = !DILocation(line: 4946, column: 31, scope: !1600)
!1649 = !DILocation(line: 4948, column: 22, scope: !1600)
!1650 = !DILocation(line: 4948, column: 28, scope: !1600)
!1651 = !DILocation(line: 4948, column: 20, scope: !1600)
!1652 = !DILocation(line: 4949, column: 9, scope: !1600)
!1653 = !DILocation(line: 4952, column: 20, scope: !1600)
!1654 = !DILocation(line: 4957, column: 26, scope: !1600)
!1655 = !DILocation(line: 4957, column: 32, scope: !1600)
!1656 = !DILocation(line: 4957, column: 53, scope: !1600)
!1657 = !DILocation(line: 4957, column: 59, scope: !1600)
!1658 = !DILocation(line: 4957, column: 44, scope: !1600)
!1659 = !DILocation(line: 4957, column: 69, scope: !1600)
!1660 = !DILocation(line: 4957, column: 7, scope: !1600)
!1661 = !DILocation(line: 4960, column: 26, scope: !1600)
!1662 = !DILocation(line: 4960, column: 32, scope: !1600)
!1663 = !DILocation(line: 4960, column: 7, scope: !1600)
!1664 = !DILocation(line: 4960, column: 13, scope: !1600)
!1665 = !DILocation(line: 4960, column: 23, scope: !1600)
!1666 = !DILocation(line: 4963, column: 11, scope: !1600)
!1667 = !DILocation(line: 4963, column: 17, scope: !1600)
!1668 = !DILocation(line: 4963, column: 23, scope: !1600)
!1669 = !DILocation(line: 4965, column: 9, scope: !1600)
!1670 = !DILocation(line: 4965, column: 15, scope: !1600)
!1671 = !DILocation(line: 4965, column: 25, scope: !1600)
!1672 = !DILocation(line: 4965, column: 29, scope: !1600)
!1673 = !DILocation(line: 4966, column: 7, scope: !1600)
!1674 = !DILocation(line: 4969, column: 9, scope: !1600)
!1675 = !DILocation(line: 4969, column: 15, scope: !1600)
!1676 = !DILocation(line: 4969, column: 25, scope: !1600)
!1677 = !DILocation(line: 4969, column: 29, scope: !1600)
!1678 = !DILocation(line: 4971, column: 5, scope: !1600)
!1679 = !DILocation(line: 4975, column: 11, scope: !1600)
!1680 = !DILocation(line: 4975, column: 35, scope: !1600)
!1681 = !DILocation(line: 4978, column: 29, scope: !1600)
!1682 = !DILocation(line: 4978, column: 9, scope: !1600)
!1683 = !DILocation(line: 4979, column: 7, scope: !1600)
!1684 = !DILocation(line: 4984, column: 21, scope: !1600)
!1685 = !DILocation(line: 4984, column: 9, scope: !1600)
!1686 = !DILocation(line: 4987, column: 3, scope: !1600)
!1687 = !DILocation(line: 4988, column: 13, scope: !1600)
!1688 = !DILocation(line: 4988, column: 50, scope: !1600)
!1689 = !DILocation(line: 4988, column: 60, scope: !1600)
!1690 = !DILocation(line: 4988, column: 64, scope: !1600)
!1691 = !DILocation(line: 4988, column: 107, scope: !1600)
!1692 = !DILocation(line: 4988, column: 12, scope: !1600)
!1693 = !DILocation(line: 4990, column: 9, scope: !1600)
!1694 = !DILocation(line: 4990, column: 15, scope: !1600)
!1695 = !DILocation(line: 4990, column: 25, scope: !1600)
!1696 = !DILocation(line: 4992, column: 11, scope: !1600)
!1697 = !DILocation(line: 4992, column: 35, scope: !1600)
!1698 = !DILocation(line: 4995, column: 13, scope: !1600)
!1699 = !DILocation(line: 4995, column: 19, scope: !1600)
!1700 = !DILocation(line: 4995, column: 31, scope: !1600)
!1701 = !DILocation(line: 4998, column: 11, scope: !1600)
!1702 = !DILocation(line: 4998, column: 17, scope: !1600)
!1703 = !DILocation(line: 4998, column: 27, scope: !1600)
!1704 = !DILocation(line: 4998, column: 31, scope: !1600)
!1705 = !DILocation(line: 4999, column: 9, scope: !1600)
!1706 = !DILocation(line: 5003, column: 31, scope: !1600)
!1707 = !DILocation(line: 5003, column: 11, scope: !1600)
!1708 = !DILocation(line: 5005, column: 7, scope: !1600)
!1709 = !DILocation(line: 5006, column: 5, scope: !1600)
!1710 = !DILocation(line: 5011, column: 19, scope: !1600)
!1711 = !DILocation(line: 5011, column: 7, scope: !1600)
!1712 = !DILocation(line: 5013, column: 3, scope: !1600)
!1713 = !DILocation(line: 5014, column: 13, scope: !1600)
!1714 = !DILocation(line: 5014, column: 53, scope: !1600)
!1715 = !DILocation(line: 5014, column: 63, scope: !1600)
!1716 = !DILocation(line: 5014, column: 67, scope: !1600)
!1717 = !DILocation(line: 5014, column: 112, scope: !1600)
!1718 = !DILocation(line: 5014, column: 12, scope: !1600)
!1719 = !DILocation(line: 5017, column: 22, scope: !1600)
!1720 = !DILocation(line: 5017, column: 28, scope: !1600)
!1721 = !DILocation(line: 5017, column: 5, scope: !1600)
!1722 = !DILocation(line: 5018, column: 3, scope: !1600)
!1723 = !DILocation(line: 5025, column: 3, scope: !1600)
!1724 = !DILocation(line: 5027, column: 3, scope: !1600)
!1725 = !DILocation(line: 5028, column: 1, scope: !1600)
!1726 = distinct !DISubprogram(name: "I2C_DMAMasterTransmitCplt", scope: !1, file: !1, line: 6026, type: !9, scopeLine: 6027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1727 = !DILocation(line: 6028, column: 73, scope: !1726)
!1728 = !DILocation(line: 6028, column: 80, scope: !1726)
!1729 = !DILocation(line: 6028, column: 29, scope: !1726)
!1730 = !DILocation(line: 6028, column: 22, scope: !1726)
!1731 = !DILocation(line: 6031, column: 3, scope: !1726)
!1732 = !DILocation(line: 6031, column: 9, scope: !1726)
!1733 = !DILocation(line: 6031, column: 19, scope: !1726)
!1734 = !DILocation(line: 6031, column: 23, scope: !1726)
!1735 = !DILocation(line: 6034, column: 7, scope: !1726)
!1736 = !DILocation(line: 6034, column: 13, scope: !1726)
!1737 = !DILocation(line: 6034, column: 23, scope: !1726)
!1738 = !DILocation(line: 6037, column: 20, scope: !1726)
!1739 = !DILocation(line: 6037, column: 5, scope: !1726)
!1740 = !DILocation(line: 6038, column: 3, scope: !1726)
!1741 = !DILocation(line: 6043, column: 23, scope: !1726)
!1742 = !DILocation(line: 6043, column: 29, scope: !1726)
!1743 = !DILocation(line: 6043, column: 5, scope: !1726)
!1744 = !DILocation(line: 6043, column: 11, scope: !1726)
!1745 = !DILocation(line: 6043, column: 20, scope: !1726)
!1746 = !DILocation(line: 6046, column: 9, scope: !1726)
!1747 = !DILocation(line: 6046, column: 15, scope: !1726)
!1748 = !DILocation(line: 6046, column: 25, scope: !1726)
!1749 = !DILocation(line: 6048, column: 7, scope: !1726)
!1750 = !DILocation(line: 6048, column: 13, scope: !1726)
!1751 = !DILocation(line: 6048, column: 22, scope: !1726)
!1752 = !DILocation(line: 6049, column: 5, scope: !1726)
!1753 = !DILocation(line: 6052, column: 24, scope: !1726)
!1754 = !DILocation(line: 6052, column: 30, scope: !1726)
!1755 = !DILocation(line: 6052, column: 7, scope: !1726)
!1756 = !DILocation(line: 6052, column: 13, scope: !1726)
!1757 = !DILocation(line: 6052, column: 22, scope: !1726)
!1758 = !DILocation(line: 6056, column: 26, scope: !1726)
!1759 = !DILocation(line: 6056, column: 32, scope: !1726)
!1760 = !DILocation(line: 6056, column: 50, scope: !1726)
!1761 = !DILocation(line: 6056, column: 56, scope: !1726)
!1762 = !DILocation(line: 6056, column: 40, scope: !1726)
!1763 = !DILocation(line: 6056, column: 77, scope: !1726)
!1764 = !DILocation(line: 6056, column: 83, scope: !1726)
!1765 = !DILocation(line: 6056, column: 93, scope: !1726)
!1766 = !DILocation(line: 6056, column: 66, scope: !1726)
!1767 = !DILocation(line: 6056, column: 99, scope: !1726)
!1768 = !DILocation(line: 6056, column: 105, scope: !1726)
!1769 = !DILocation(line: 6056, column: 9, scope: !1726)
!1770 = !DILocation(line: 6056, column: 115, scope: !1726)
!1771 = !DILocation(line: 6059, column: 19, scope: !1726)
!1772 = !DILocation(line: 6059, column: 7, scope: !1726)
!1773 = !DILocation(line: 6060, column: 5, scope: !1726)
!1774 = !DILocation(line: 6064, column: 22, scope: !1726)
!1775 = !DILocation(line: 6064, column: 7, scope: !1726)
!1776 = !DILocation(line: 6067, column: 1, scope: !1726)
!1777 = distinct !DISubprogram(name: "I2C_DMAError", scope: !1, file: !1, line: 6176, type: !9, scopeLine: 6177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1778 = !DILocation(line: 6178, column: 73, scope: !1777)
!1779 = !DILocation(line: 6178, column: 80, scope: !1777)
!1780 = !DILocation(line: 6178, column: 29, scope: !1777)
!1781 = !DILocation(line: 6178, column: 22, scope: !1777)
!1782 = !DILocation(line: 6181, column: 3, scope: !1777)
!1783 = !DILocation(line: 6181, column: 9, scope: !1777)
!1784 = !DILocation(line: 6181, column: 19, scope: !1777)
!1785 = !DILocation(line: 6181, column: 23, scope: !1777)
!1786 = !DILocation(line: 6184, column: 15, scope: !1777)
!1787 = !DILocation(line: 6184, column: 3, scope: !1777)
!1788 = !DILocation(line: 6185, column: 1, scope: !1777)
!1789 = distinct !DISubprogram(name: "HAL_I2C_Master_Receive_DMA", scope: !1, file: !1, line: 1941, type: !9, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1790 = !DILocation(line: 1947, column: 7, scope: !1789)
!1791 = !DILocation(line: 1947, column: 13, scope: !1789)
!1792 = !DILocation(line: 1947, column: 19, scope: !1789)
!1793 = !DILocation(line: 1949, column: 9, scope: !1789)
!1794 = !DILocation(line: 1949, column: 49, scope: !1789)
!1795 = !DILocation(line: 1951, column: 7, scope: !1789)
!1796 = !DILocation(line: 1955, column: 5, scope: !1789)
!1797 = !DILocation(line: 1957, column: 5, scope: !1789)
!1798 = !DILocation(line: 1957, column: 11, scope: !1789)
!1799 = !DILocation(line: 1957, column: 23, scope: !1789)
!1800 = !DILocation(line: 1958, column: 5, scope: !1789)
!1801 = !DILocation(line: 1958, column: 11, scope: !1789)
!1802 = !DILocation(line: 1958, column: 23, scope: !1789)
!1803 = !DILocation(line: 1959, column: 5, scope: !1789)
!1804 = !DILocation(line: 1959, column: 11, scope: !1789)
!1805 = !DILocation(line: 1959, column: 23, scope: !1789)
!1806 = !DILocation(line: 1962, column: 25, scope: !1789)
!1807 = !DILocation(line: 1962, column: 5, scope: !1789)
!1808 = !DILocation(line: 1962, column: 11, scope: !1789)
!1809 = !DILocation(line: 1962, column: 23, scope: !1789)
!1810 = !DILocation(line: 1963, column: 25, scope: !1789)
!1811 = !DILocation(line: 1963, column: 5, scope: !1789)
!1812 = !DILocation(line: 1963, column: 11, scope: !1789)
!1813 = !DILocation(line: 1963, column: 23, scope: !1789)
!1814 = !DILocation(line: 1964, column: 5, scope: !1789)
!1815 = !DILocation(line: 1964, column: 11, scope: !1789)
!1816 = !DILocation(line: 1964, column: 23, scope: !1789)
!1817 = !DILocation(line: 1965, column: 5, scope: !1789)
!1818 = !DILocation(line: 1965, column: 11, scope: !1789)
!1819 = !DILocation(line: 1965, column: 23, scope: !1789)
!1820 = !DILocation(line: 1967, column: 9, scope: !1789)
!1821 = !DILocation(line: 1967, column: 15, scope: !1789)
!1822 = !DILocation(line: 1967, column: 25, scope: !1789)
!1823 = !DILocation(line: 1969, column: 7, scope: !1789)
!1824 = !DILocation(line: 1969, column: 13, scope: !1789)
!1825 = !DILocation(line: 1969, column: 22, scope: !1789)
!1826 = !DILocation(line: 1970, column: 16, scope: !1789)
!1827 = !DILocation(line: 1971, column: 5, scope: !1789)
!1828 = !DILocation(line: 1974, column: 24, scope: !1789)
!1829 = !DILocation(line: 1974, column: 30, scope: !1789)
!1830 = !DILocation(line: 1974, column: 7, scope: !1789)
!1831 = !DILocation(line: 1974, column: 13, scope: !1789)
!1832 = !DILocation(line: 1974, column: 22, scope: !1789)
!1833 = !DILocation(line: 1975, column: 16, scope: !1789)
!1834 = !DILocation(line: 1978, column: 9, scope: !1789)
!1835 = !DILocation(line: 1978, column: 15, scope: !1789)
!1836 = !DILocation(line: 1978, column: 24, scope: !1789)
!1837 = !DILocation(line: 1980, column: 11, scope: !1789)
!1838 = !DILocation(line: 1980, column: 17, scope: !1789)
!1839 = !DILocation(line: 1980, column: 24, scope: !1789)
!1840 = !DILocation(line: 1983, column: 9, scope: !1789)
!1841 = !DILocation(line: 1983, column: 15, scope: !1789)
!1842 = !DILocation(line: 1983, column: 23, scope: !1789)
!1843 = !DILocation(line: 1983, column: 40, scope: !1789)
!1844 = !DILocation(line: 1986, column: 9, scope: !1789)
!1845 = !DILocation(line: 1986, column: 15, scope: !1789)
!1846 = !DILocation(line: 1986, column: 23, scope: !1789)
!1847 = !DILocation(line: 1986, column: 41, scope: !1789)
!1848 = !DILocation(line: 1989, column: 9, scope: !1789)
!1849 = !DILocation(line: 1989, column: 15, scope: !1789)
!1850 = !DILocation(line: 1989, column: 23, scope: !1789)
!1851 = !DILocation(line: 1989, column: 44, scope: !1789)
!1852 = !DILocation(line: 1990, column: 9, scope: !1789)
!1853 = !DILocation(line: 1990, column: 15, scope: !1789)
!1854 = !DILocation(line: 1990, column: 23, scope: !1789)
!1855 = !DILocation(line: 1990, column: 41, scope: !1789)
!1856 = !DILocation(line: 1993, column: 42, scope: !1789)
!1857 = !DILocation(line: 1993, column: 48, scope: !1789)
!1858 = !DILocation(line: 1993, column: 67, scope: !1789)
!1859 = !DILocation(line: 1993, column: 73, scope: !1789)
!1860 = !DILocation(line: 1993, column: 83, scope: !1789)
!1861 = !DILocation(line: 1993, column: 56, scope: !1789)
!1862 = !DILocation(line: 1993, column: 99, scope: !1789)
!1863 = !DILocation(line: 1993, column: 89, scope: !1789)
!1864 = !DILocation(line: 1993, column: 106, scope: !1789)
!1865 = !DILocation(line: 1993, column: 112, scope: !1789)
!1866 = !DILocation(line: 1993, column: 25, scope: !1789)
!1867 = !DILocation(line: 1993, column: 23, scope: !1789)
!1868 = !DILocation(line: 1994, column: 7, scope: !1789)
!1869 = !DILocation(line: 1998, column: 9, scope: !1789)
!1870 = !DILocation(line: 1998, column: 15, scope: !1789)
!1871 = !DILocation(line: 1998, column: 25, scope: !1789)
!1872 = !DILocation(line: 1999, column: 9, scope: !1789)
!1873 = !DILocation(line: 1999, column: 15, scope: !1789)
!1874 = !DILocation(line: 1999, column: 25, scope: !1789)
!1875 = !DILocation(line: 2002, column: 9, scope: !1789)
!1876 = !DILocation(line: 2002, column: 15, scope: !1789)
!1877 = !DILocation(line: 2002, column: 25, scope: !1789)
!1878 = !DILocation(line: 2005, column: 9, scope: !1789)
!1879 = !DILocation(line: 2007, column: 9, scope: !1789)
!1880 = !DILocation(line: 2010, column: 11, scope: !1789)
!1881 = !DILocation(line: 2010, column: 25, scope: !1789)
!1882 = !DILocation(line: 2014, column: 28, scope: !1789)
!1883 = !DILocation(line: 2014, column: 34, scope: !1789)
!1884 = !DILocation(line: 2014, column: 55, scope: !1789)
!1885 = !DILocation(line: 2014, column: 61, scope: !1789)
!1886 = !DILocation(line: 2014, column: 46, scope: !1789)
!1887 = !DILocation(line: 2014, column: 71, scope: !1789)
!1888 = !DILocation(line: 2014, column: 9, scope: !1789)
!1889 = !DILocation(line: 2017, column: 28, scope: !1789)
!1890 = !DILocation(line: 2017, column: 34, scope: !1789)
!1891 = !DILocation(line: 2017, column: 9, scope: !1789)
!1892 = !DILocation(line: 2017, column: 15, scope: !1789)
!1893 = !DILocation(line: 2017, column: 25, scope: !1789)
!1894 = !DILocation(line: 2020, column: 9, scope: !1789)
!1895 = !DILocation(line: 2026, column: 24, scope: !1789)
!1896 = !DILocation(line: 2026, column: 9, scope: !1789)
!1897 = !DILocation(line: 2029, column: 9, scope: !1789)
!1898 = !DILocation(line: 2029, column: 15, scope: !1789)
!1899 = !DILocation(line: 2029, column: 25, scope: !1789)
!1900 = !DILocation(line: 2029, column: 29, scope: !1789)
!1901 = !DILocation(line: 2030, column: 7, scope: !1789)
!1902 = !DILocation(line: 2034, column: 9, scope: !1789)
!1903 = !DILocation(line: 2034, column: 15, scope: !1789)
!1904 = !DILocation(line: 2034, column: 25, scope: !1789)
!1905 = !DILocation(line: 2035, column: 9, scope: !1789)
!1906 = !DILocation(line: 2035, column: 15, scope: !1789)
!1907 = !DILocation(line: 2035, column: 25, scope: !1789)
!1908 = !DILocation(line: 2038, column: 9, scope: !1789)
!1909 = !DILocation(line: 2038, column: 15, scope: !1789)
!1910 = !DILocation(line: 2038, column: 25, scope: !1789)
!1911 = !DILocation(line: 2041, column: 9, scope: !1789)
!1912 = !DILocation(line: 2043, column: 9, scope: !1789)
!1913 = !DILocation(line: 2045, column: 5, scope: !1789)
!1914 = !DILocation(line: 2049, column: 7, scope: !1789)
!1915 = !DILocation(line: 2049, column: 13, scope: !1789)
!1916 = !DILocation(line: 2049, column: 21, scope: !1789)
!1917 = !DILocation(line: 2053, column: 26, scope: !1789)
!1918 = !DILocation(line: 2053, column: 32, scope: !1789)
!1919 = !DILocation(line: 2053, column: 53, scope: !1789)
!1920 = !DILocation(line: 2053, column: 59, scope: !1789)
!1921 = !DILocation(line: 2053, column: 44, scope: !1789)
!1922 = !DILocation(line: 2053, column: 7, scope: !1789)
!1923 = !DILocation(line: 2056, column: 7, scope: !1789)
!1924 = !DILocation(line: 2064, column: 22, scope: !1789)
!1925 = !DILocation(line: 2064, column: 7, scope: !1789)
!1926 = !DILocation(line: 2067, column: 5, scope: !1789)
!1927 = !DILocation(line: 2071, column: 5, scope: !1789)
!1928 = !DILocation(line: 2073, column: 1, scope: !1789)
!1929 = distinct !DISubprogram(name: "I2C_DMAMasterReceiveCplt", scope: !1, file: !1, line: 6101, type: !9, scopeLine: 6102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1930 = !DILocation(line: 6103, column: 73, scope: !1929)
!1931 = !DILocation(line: 6103, column: 80, scope: !1929)
!1932 = !DILocation(line: 6103, column: 29, scope: !1929)
!1933 = !DILocation(line: 6103, column: 22, scope: !1929)
!1934 = !DILocation(line: 6106, column: 3, scope: !1929)
!1935 = !DILocation(line: 6106, column: 9, scope: !1929)
!1936 = !DILocation(line: 6106, column: 19, scope: !1929)
!1937 = !DILocation(line: 6106, column: 23, scope: !1929)
!1938 = !DILocation(line: 6109, column: 7, scope: !1929)
!1939 = !DILocation(line: 6109, column: 13, scope: !1929)
!1940 = !DILocation(line: 6109, column: 23, scope: !1929)
!1941 = !DILocation(line: 6112, column: 20, scope: !1929)
!1942 = !DILocation(line: 6112, column: 5, scope: !1929)
!1943 = !DILocation(line: 6113, column: 3, scope: !1929)
!1944 = !DILocation(line: 6118, column: 23, scope: !1929)
!1945 = !DILocation(line: 6118, column: 29, scope: !1929)
!1946 = !DILocation(line: 6118, column: 5, scope: !1929)
!1947 = !DILocation(line: 6118, column: 11, scope: !1929)
!1948 = !DILocation(line: 6118, column: 20, scope: !1929)
!1949 = !DILocation(line: 6121, column: 9, scope: !1929)
!1950 = !DILocation(line: 6121, column: 15, scope: !1929)
!1951 = !DILocation(line: 6121, column: 25, scope: !1929)
!1952 = !DILocation(line: 6123, column: 7, scope: !1929)
!1953 = !DILocation(line: 6123, column: 13, scope: !1929)
!1954 = !DILocation(line: 6123, column: 22, scope: !1929)
!1955 = !DILocation(line: 6124, column: 5, scope: !1929)
!1956 = !DILocation(line: 6127, column: 24, scope: !1929)
!1957 = !DILocation(line: 6127, column: 30, scope: !1929)
!1958 = !DILocation(line: 6127, column: 7, scope: !1929)
!1959 = !DILocation(line: 6127, column: 13, scope: !1929)
!1960 = !DILocation(line: 6127, column: 22, scope: !1929)
!1961 = !DILocation(line: 6131, column: 26, scope: !1929)
!1962 = !DILocation(line: 6131, column: 32, scope: !1929)
!1963 = !DILocation(line: 6131, column: 51, scope: !1929)
!1964 = !DILocation(line: 6131, column: 57, scope: !1929)
!1965 = !DILocation(line: 6131, column: 67, scope: !1929)
!1966 = !DILocation(line: 6131, column: 40, scope: !1929)
!1967 = !DILocation(line: 6131, column: 83, scope: !1929)
!1968 = !DILocation(line: 6131, column: 89, scope: !1929)
!1969 = !DILocation(line: 6131, column: 73, scope: !1929)
!1970 = !DILocation(line: 6131, column: 99, scope: !1929)
!1971 = !DILocation(line: 6131, column: 105, scope: !1929)
!1972 = !DILocation(line: 6131, column: 9, scope: !1929)
!1973 = !DILocation(line: 6131, column: 115, scope: !1929)
!1974 = !DILocation(line: 6134, column: 19, scope: !1929)
!1975 = !DILocation(line: 6134, column: 7, scope: !1929)
!1976 = !DILocation(line: 6135, column: 5, scope: !1929)
!1977 = !DILocation(line: 6139, column: 22, scope: !1929)
!1978 = !DILocation(line: 6139, column: 7, scope: !1929)
!1979 = !DILocation(line: 6142, column: 1, scope: !1929)
!1980 = distinct !DISubprogram(name: "HAL_I2C_Slave_Transmit_DMA", scope: !1, file: !1, line: 2083, type: !9, scopeLine: 2084, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!1981 = !DILocation(line: 2087, column: 7, scope: !1980)
!1982 = !DILocation(line: 2087, column: 13, scope: !1980)
!1983 = !DILocation(line: 2087, column: 19, scope: !1980)
!1984 = !DILocation(line: 2089, column: 10, scope: !1980)
!1985 = !DILocation(line: 2089, column: 16, scope: !1980)
!1986 = !DILocation(line: 2089, column: 25, scope: !1980)
!1987 = !DILocation(line: 2089, column: 29, scope: !1980)
!1988 = !DILocation(line: 2089, column: 34, scope: !1980)
!1989 = !DILocation(line: 2089, column: 9, scope: !1980)
!1990 = !DILocation(line: 2091, column: 7, scope: !1980)
!1991 = !DILocation(line: 2091, column: 13, scope: !1980)
!1992 = !DILocation(line: 2091, column: 23, scope: !1980)
!1993 = !DILocation(line: 2092, column: 7, scope: !1980)
!1994 = !DILocation(line: 2095, column: 5, scope: !1980)
!1995 = !DILocation(line: 2097, column: 5, scope: !1980)
!1996 = !DILocation(line: 2097, column: 11, scope: !1980)
!1997 = !DILocation(line: 2097, column: 23, scope: !1980)
!1998 = !DILocation(line: 2098, column: 5, scope: !1980)
!1999 = !DILocation(line: 2098, column: 11, scope: !1980)
!2000 = !DILocation(line: 2098, column: 23, scope: !1980)
!2001 = !DILocation(line: 2099, column: 5, scope: !1980)
!2002 = !DILocation(line: 2099, column: 11, scope: !1980)
!2003 = !DILocation(line: 2099, column: 23, scope: !1980)
!2004 = !DILocation(line: 2102, column: 25, scope: !1980)
!2005 = !DILocation(line: 2102, column: 5, scope: !1980)
!2006 = !DILocation(line: 2102, column: 11, scope: !1980)
!2007 = !DILocation(line: 2102, column: 23, scope: !1980)
!2008 = !DILocation(line: 2103, column: 25, scope: !1980)
!2009 = !DILocation(line: 2103, column: 5, scope: !1980)
!2010 = !DILocation(line: 2103, column: 11, scope: !1980)
!2011 = !DILocation(line: 2103, column: 23, scope: !1980)
!2012 = !DILocation(line: 2104, column: 25, scope: !1980)
!2013 = !DILocation(line: 2104, column: 31, scope: !1980)
!2014 = !DILocation(line: 2104, column: 5, scope: !1980)
!2015 = !DILocation(line: 2104, column: 11, scope: !1980)
!2016 = !DILocation(line: 2104, column: 23, scope: !1980)
!2017 = !DILocation(line: 2105, column: 5, scope: !1980)
!2018 = !DILocation(line: 2105, column: 11, scope: !1980)
!2019 = !DILocation(line: 2105, column: 23, scope: !1980)
!2020 = !DILocation(line: 2106, column: 5, scope: !1980)
!2021 = !DILocation(line: 2106, column: 11, scope: !1980)
!2022 = !DILocation(line: 2106, column: 23, scope: !1980)
!2023 = !DILocation(line: 2108, column: 9, scope: !1980)
!2024 = !DILocation(line: 2108, column: 15, scope: !1980)
!2025 = !DILocation(line: 2108, column: 22, scope: !1980)
!2026 = !DILocation(line: 2111, column: 7, scope: !1980)
!2027 = !DILocation(line: 2111, column: 13, scope: !1980)
!2028 = !DILocation(line: 2111, column: 21, scope: !1980)
!2029 = !DILocation(line: 2111, column: 38, scope: !1980)
!2030 = !DILocation(line: 2114, column: 7, scope: !1980)
!2031 = !DILocation(line: 2114, column: 13, scope: !1980)
!2032 = !DILocation(line: 2114, column: 21, scope: !1980)
!2033 = !DILocation(line: 2114, column: 39, scope: !1980)
!2034 = !DILocation(line: 2117, column: 7, scope: !1980)
!2035 = !DILocation(line: 2117, column: 13, scope: !1980)
!2036 = !DILocation(line: 2117, column: 21, scope: !1980)
!2037 = !DILocation(line: 2117, column: 42, scope: !1980)
!2038 = !DILocation(line: 2118, column: 7, scope: !1980)
!2039 = !DILocation(line: 2118, column: 13, scope: !1980)
!2040 = !DILocation(line: 2118, column: 21, scope: !1980)
!2041 = !DILocation(line: 2118, column: 39, scope: !1980)
!2042 = !DILocation(line: 2121, column: 40, scope: !1980)
!2043 = !DILocation(line: 2121, column: 46, scope: !1980)
!2044 = !DILocation(line: 2121, column: 64, scope: !1980)
!2045 = !DILocation(line: 2121, column: 54, scope: !1980)
!2046 = !DILocation(line: 2121, column: 82, scope: !1980)
!2047 = !DILocation(line: 2121, column: 88, scope: !1980)
!2048 = !DILocation(line: 2121, column: 98, scope: !1980)
!2049 = !DILocation(line: 2121, column: 71, scope: !1980)
!2050 = !DILocation(line: 2121, column: 104, scope: !1980)
!2051 = !DILocation(line: 2121, column: 110, scope: !1980)
!2052 = !DILocation(line: 2121, column: 23, scope: !1980)
!2053 = !DILocation(line: 2121, column: 21, scope: !1980)
!2054 = !DILocation(line: 2122, column: 5, scope: !1980)
!2055 = !DILocation(line: 2126, column: 7, scope: !1980)
!2056 = !DILocation(line: 2126, column: 13, scope: !1980)
!2057 = !DILocation(line: 2126, column: 23, scope: !1980)
!2058 = !DILocation(line: 2127, column: 7, scope: !1980)
!2059 = !DILocation(line: 2127, column: 13, scope: !1980)
!2060 = !DILocation(line: 2127, column: 23, scope: !1980)
!2061 = !DILocation(line: 2130, column: 7, scope: !1980)
!2062 = !DILocation(line: 2130, column: 13, scope: !1980)
!2063 = !DILocation(line: 2130, column: 23, scope: !1980)
!2064 = !DILocation(line: 2133, column: 7, scope: !1980)
!2065 = !DILocation(line: 2135, column: 7, scope: !1980)
!2066 = !DILocation(line: 2138, column: 9, scope: !1980)
!2067 = !DILocation(line: 2138, column: 23, scope: !1980)
!2068 = !DILocation(line: 2141, column: 7, scope: !1980)
!2069 = !DILocation(line: 2141, column: 13, scope: !1980)
!2070 = !DILocation(line: 2141, column: 23, scope: !1980)
!2071 = !DILocation(line: 2141, column: 27, scope: !1980)
!2072 = !DILocation(line: 2144, column: 7, scope: !1980)
!2073 = !DILocation(line: 2150, column: 22, scope: !1980)
!2074 = !DILocation(line: 2150, column: 7, scope: !1980)
!2075 = !DILocation(line: 2153, column: 7, scope: !1980)
!2076 = !DILocation(line: 2153, column: 13, scope: !1980)
!2077 = !DILocation(line: 2153, column: 23, scope: !1980)
!2078 = !DILocation(line: 2153, column: 27, scope: !1980)
!2079 = !DILocation(line: 2154, column: 5, scope: !1980)
!2080 = !DILocation(line: 2158, column: 7, scope: !1980)
!2081 = !DILocation(line: 2158, column: 13, scope: !1980)
!2082 = !DILocation(line: 2158, column: 23, scope: !1980)
!2083 = !DILocation(line: 2159, column: 7, scope: !1980)
!2084 = !DILocation(line: 2159, column: 13, scope: !1980)
!2085 = !DILocation(line: 2159, column: 23, scope: !1980)
!2086 = !DILocation(line: 2162, column: 7, scope: !1980)
!2087 = !DILocation(line: 2162, column: 13, scope: !1980)
!2088 = !DILocation(line: 2162, column: 23, scope: !1980)
!2089 = !DILocation(line: 2165, column: 7, scope: !1980)
!2090 = !DILocation(line: 2167, column: 7, scope: !1980)
!2091 = !DILocation(line: 2170, column: 5, scope: !1980)
!2092 = !DILocation(line: 2174, column: 5, scope: !1980)
!2093 = !DILocation(line: 2176, column: 1, scope: !1980)
!2094 = distinct !DISubprogram(name: "I2C_Slave_ISR_DMA", scope: !1, file: !1, line: 5038, type: !9, scopeLine: 5039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2095 = !DILocation(line: 5040, column: 25, scope: !2094)
!2096 = !DILocation(line: 5040, column: 31, scope: !2094)
!2097 = !DILocation(line: 5040, column: 12, scope: !2094)
!2098 = !DILocation(line: 5041, column: 12, scope: !2094)
!2099 = !DILocation(line: 5045, column: 3, scope: !2094)
!2100 = !DILocation(line: 5048, column: 8, scope: !2094)
!2101 = !DILocation(line: 5048, column: 48, scope: !2094)
!2102 = !DILocation(line: 5048, column: 58, scope: !2094)
!2103 = !DILocation(line: 5048, column: 62, scope: !2094)
!2104 = !DILocation(line: 5048, column: 107, scope: !2094)
!2105 = !DILocation(line: 5048, column: 7, scope: !2094)
!2106 = !DILocation(line: 5051, column: 21, scope: !2094)
!2107 = !DILocation(line: 5051, column: 27, scope: !2094)
!2108 = !DILocation(line: 5051, column: 5, scope: !2094)
!2109 = !DILocation(line: 5052, column: 3, scope: !2094)
!2110 = !DILocation(line: 5054, column: 8, scope: !2094)
!2111 = !DILocation(line: 5054, column: 45, scope: !2094)
!2112 = !DILocation(line: 5054, column: 55, scope: !2094)
!2113 = !DILocation(line: 5054, column: 59, scope: !2094)
!2114 = !DILocation(line: 5054, column: 104, scope: !2094)
!2115 = !DILocation(line: 5054, column: 7, scope: !2094)
!2116 = !DILocation(line: 5060, column: 10, scope: !2094)
!2117 = !DILocation(line: 5060, column: 58, scope: !2094)
!2118 = !DILocation(line: 5060, column: 68, scope: !2094)
!2119 = !DILocation(line: 5061, column: 10, scope: !2094)
!2120 = !DILocation(line: 5061, column: 58, scope: !2094)
!2121 = !DILocation(line: 5060, column: 9, scope: !2094)
!2122 = !DILocation(line: 5064, column: 11, scope: !2094)
!2123 = !DILocation(line: 5064, column: 17, scope: !2094)
!2124 = !DILocation(line: 5064, column: 24, scope: !2094)
!2125 = !DILocation(line: 5066, column: 13, scope: !2094)
!2126 = !DILocation(line: 5066, column: 61, scope: !2094)
!2127 = !DILocation(line: 5068, column: 15, scope: !2094)
!2128 = !DILocation(line: 5068, column: 51, scope: !2094)
!2129 = !DILocation(line: 5070, column: 26, scope: !2094)
!2130 = !DILocation(line: 5071, column: 11, scope: !2094)
!2131 = !DILocation(line: 5072, column: 9, scope: !2094)
!2132 = !DILocation(line: 5073, column: 7, scope: !2094)
!2133 = !DILocation(line: 5076, column: 11, scope: !2094)
!2134 = !DILocation(line: 5076, column: 17, scope: !2094)
!2135 = !DILocation(line: 5076, column: 24, scope: !2094)
!2136 = !DILocation(line: 5078, column: 13, scope: !2094)
!2137 = !DILocation(line: 5078, column: 61, scope: !2094)
!2138 = !DILocation(line: 5080, column: 15, scope: !2094)
!2139 = !DILocation(line: 5080, column: 51, scope: !2094)
!2140 = !DILocation(line: 5082, column: 26, scope: !2094)
!2141 = !DILocation(line: 5083, column: 11, scope: !2094)
!2142 = !DILocation(line: 5084, column: 9, scope: !2094)
!2143 = !DILocation(line: 5085, column: 7, scope: !2094)
!2144 = !DILocation(line: 5087, column: 11, scope: !2094)
!2145 = !DILocation(line: 5087, column: 24, scope: !2094)
!2146 = !DILocation(line: 5090, column: 14, scope: !2094)
!2147 = !DILocation(line: 5090, column: 20, scope: !2094)
!2148 = !DILocation(line: 5090, column: 26, scope: !2094)
!2149 = !DILocation(line: 5090, column: 51, scope: !2094)
!2150 = !DILocation(line: 5090, column: 55, scope: !2094)
!2151 = !DILocation(line: 5090, column: 66, scope: !2094)
!2152 = !DILocation(line: 5090, column: 13, scope: !2094)
!2153 = !DILocation(line: 5093, column: 28, scope: !2094)
!2154 = !DILocation(line: 5093, column: 34, scope: !2094)
!2155 = !DILocation(line: 5093, column: 11, scope: !2094)
!2156 = !DILocation(line: 5094, column: 9, scope: !2094)
!2157 = !DILocation(line: 5095, column: 19, scope: !2094)
!2158 = !DILocation(line: 5095, column: 25, scope: !2094)
!2159 = !DILocation(line: 5095, column: 31, scope: !2094)
!2160 = !DILocation(line: 5095, column: 64, scope: !2094)
!2161 = !DILocation(line: 5095, column: 68, scope: !2094)
!2162 = !DILocation(line: 5095, column: 79, scope: !2094)
!2163 = !DILocation(line: 5095, column: 18, scope: !2094)
!2164 = !DILocation(line: 5098, column: 11, scope: !2094)
!2165 = !DILocation(line: 5101, column: 26, scope: !2094)
!2166 = !DILocation(line: 5101, column: 11, scope: !2094)
!2167 = !DILocation(line: 5105, column: 30, scope: !2094)
!2168 = !DILocation(line: 5105, column: 11, scope: !2094)
!2169 = !DILocation(line: 5106, column: 9, scope: !2094)
!2170 = !DILocation(line: 5110, column: 11, scope: !2094)
!2171 = !DILocation(line: 5112, column: 7, scope: !2094)
!2172 = !DILocation(line: 5117, column: 9, scope: !2094)
!2173 = !DILocation(line: 5120, column: 9, scope: !2094)
!2174 = !DILocation(line: 5120, column: 15, scope: !2094)
!2175 = !DILocation(line: 5120, column: 25, scope: !2094)
!2176 = !DILocation(line: 5123, column: 20, scope: !2094)
!2177 = !DILocation(line: 5123, column: 26, scope: !2094)
!2178 = !DILocation(line: 5123, column: 18, scope: !2094)
!2179 = !DILocation(line: 5125, column: 14, scope: !2094)
!2180 = !DILocation(line: 5125, column: 25, scope: !2094)
!2181 = !DILocation(line: 5125, column: 45, scope: !2094)
!2182 = !DILocation(line: 5125, column: 49, scope: !2094)
!2183 = !DILocation(line: 5125, column: 60, scope: !2094)
!2184 = !DILocation(line: 5125, column: 13, scope: !2094)
!2185 = !DILocation(line: 5127, column: 16, scope: !2094)
!2186 = !DILocation(line: 5127, column: 25, scope: !2094)
!2187 = !DILocation(line: 5127, column: 51, scope: !2094)
!2188 = !DILocation(line: 5127, column: 55, scope: !2094)
!2189 = !DILocation(line: 5127, column: 64, scope: !2094)
!2190 = !DILocation(line: 5127, column: 15, scope: !2094)
!2191 = !DILocation(line: 5129, column: 13, scope: !2094)
!2192 = !DILocation(line: 5129, column: 19, scope: !2094)
!2193 = !DILocation(line: 5129, column: 33, scope: !2094)
!2194 = !DILocation(line: 5130, column: 11, scope: !2094)
!2195 = !DILocation(line: 5131, column: 21, scope: !2094)
!2196 = !DILocation(line: 5131, column: 30, scope: !2094)
!2197 = !DILocation(line: 5131, column: 56, scope: !2094)
!2198 = !DILocation(line: 5131, column: 60, scope: !2094)
!2199 = !DILocation(line: 5131, column: 69, scope: !2094)
!2200 = !DILocation(line: 5131, column: 20, scope: !2094)
!2201 = !DILocation(line: 5133, column: 13, scope: !2094)
!2202 = !DILocation(line: 5133, column: 19, scope: !2094)
!2203 = !DILocation(line: 5133, column: 33, scope: !2094)
!2204 = !DILocation(line: 5134, column: 11, scope: !2094)
!2205 = !DILocation(line: 5141, column: 23, scope: !2094)
!2206 = !DILocation(line: 5141, column: 29, scope: !2094)
!2207 = !DILocation(line: 5141, column: 35, scope: !2094)
!2208 = !DILocation(line: 5141, column: 11, scope: !2094)
!2209 = !DILocation(line: 5142, column: 9, scope: !2094)
!2210 = !DILocation(line: 5144, column: 5, scope: !2094)
!2211 = !DILocation(line: 5148, column: 7, scope: !2094)
!2212 = !DILocation(line: 5150, column: 3, scope: !2094)
!2213 = !DILocation(line: 5151, column: 13, scope: !2094)
!2214 = !DILocation(line: 5151, column: 52, scope: !2094)
!2215 = !DILocation(line: 5151, column: 62, scope: !2094)
!2216 = !DILocation(line: 5151, column: 66, scope: !2094)
!2217 = !DILocation(line: 5151, column: 111, scope: !2094)
!2218 = !DILocation(line: 5151, column: 12, scope: !2094)
!2219 = !DILocation(line: 5153, column: 20, scope: !2094)
!2220 = !DILocation(line: 5153, column: 26, scope: !2094)
!2221 = !DILocation(line: 5153, column: 5, scope: !2094)
!2222 = !DILocation(line: 5154, column: 3, scope: !2094)
!2223 = !DILocation(line: 5161, column: 3, scope: !2094)
!2224 = !DILocation(line: 5163, column: 3, scope: !2094)
!2225 = !DILocation(line: 5164, column: 1, scope: !2094)
!2226 = distinct !DISubprogram(name: "I2C_DMASlaveTransmitCplt", scope: !1, file: !1, line: 6074, type: !9, scopeLine: 6075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2227 = !DILocation(line: 6076, column: 73, scope: !2226)
!2228 = !DILocation(line: 6076, column: 80, scope: !2226)
!2229 = !DILocation(line: 6076, column: 29, scope: !2226)
!2230 = !DILocation(line: 6076, column: 22, scope: !2226)
!2231 = !DILocation(line: 6077, column: 25, scope: !2226)
!2232 = !DILocation(line: 6077, column: 31, scope: !2226)
!2233 = !DILocation(line: 6077, column: 12, scope: !2226)
!2234 = !DILocation(line: 6079, column: 8, scope: !2226)
!2235 = !DILocation(line: 6079, column: 19, scope: !2226)
!2236 = !DILocation(line: 6079, column: 38, scope: !2226)
!2237 = !DILocation(line: 6079, column: 42, scope: !2226)
!2238 = !DILocation(line: 6079, column: 53, scope: !2226)
!2239 = !DILocation(line: 6079, column: 7, scope: !2226)
!2240 = !DILocation(line: 6082, column: 5, scope: !2226)
!2241 = !DILocation(line: 6082, column: 11, scope: !2226)
!2242 = !DILocation(line: 6082, column: 21, scope: !2226)
!2243 = !DILocation(line: 6082, column: 25, scope: !2226)
!2244 = !DILocation(line: 6086, column: 24, scope: !2226)
!2245 = !DILocation(line: 6086, column: 5, scope: !2226)
!2246 = !DILocation(line: 6087, column: 3, scope: !2226)
!2247 = !DILocation(line: 6094, column: 1, scope: !2226)
!2248 = distinct !DISubprogram(name: "HAL_I2C_Slave_Receive_DMA", scope: !1, file: !1, line: 2186, type: !9, scopeLine: 2187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2249 = !DILocation(line: 2190, column: 7, scope: !2248)
!2250 = !DILocation(line: 2190, column: 13, scope: !2248)
!2251 = !DILocation(line: 2190, column: 19, scope: !2248)
!2252 = !DILocation(line: 2192, column: 10, scope: !2248)
!2253 = !DILocation(line: 2192, column: 16, scope: !2248)
!2254 = !DILocation(line: 2192, column: 25, scope: !2248)
!2255 = !DILocation(line: 2192, column: 29, scope: !2248)
!2256 = !DILocation(line: 2192, column: 34, scope: !2248)
!2257 = !DILocation(line: 2192, column: 9, scope: !2248)
!2258 = !DILocation(line: 2194, column: 7, scope: !2248)
!2259 = !DILocation(line: 2194, column: 13, scope: !2248)
!2260 = !DILocation(line: 2194, column: 23, scope: !2248)
!2261 = !DILocation(line: 2195, column: 7, scope: !2248)
!2262 = !DILocation(line: 2198, column: 5, scope: !2248)
!2263 = !DILocation(line: 2200, column: 5, scope: !2248)
!2264 = !DILocation(line: 2200, column: 11, scope: !2248)
!2265 = !DILocation(line: 2200, column: 23, scope: !2248)
!2266 = !DILocation(line: 2201, column: 5, scope: !2248)
!2267 = !DILocation(line: 2201, column: 11, scope: !2248)
!2268 = !DILocation(line: 2201, column: 23, scope: !2248)
!2269 = !DILocation(line: 2202, column: 5, scope: !2248)
!2270 = !DILocation(line: 2202, column: 11, scope: !2248)
!2271 = !DILocation(line: 2202, column: 23, scope: !2248)
!2272 = !DILocation(line: 2205, column: 25, scope: !2248)
!2273 = !DILocation(line: 2205, column: 5, scope: !2248)
!2274 = !DILocation(line: 2205, column: 11, scope: !2248)
!2275 = !DILocation(line: 2205, column: 23, scope: !2248)
!2276 = !DILocation(line: 2206, column: 25, scope: !2248)
!2277 = !DILocation(line: 2206, column: 5, scope: !2248)
!2278 = !DILocation(line: 2206, column: 11, scope: !2248)
!2279 = !DILocation(line: 2206, column: 23, scope: !2248)
!2280 = !DILocation(line: 2207, column: 25, scope: !2248)
!2281 = !DILocation(line: 2207, column: 31, scope: !2248)
!2282 = !DILocation(line: 2207, column: 5, scope: !2248)
!2283 = !DILocation(line: 2207, column: 11, scope: !2248)
!2284 = !DILocation(line: 2207, column: 23, scope: !2248)
!2285 = !DILocation(line: 2208, column: 5, scope: !2248)
!2286 = !DILocation(line: 2208, column: 11, scope: !2248)
!2287 = !DILocation(line: 2208, column: 23, scope: !2248)
!2288 = !DILocation(line: 2209, column: 5, scope: !2248)
!2289 = !DILocation(line: 2209, column: 11, scope: !2248)
!2290 = !DILocation(line: 2209, column: 23, scope: !2248)
!2291 = !DILocation(line: 2211, column: 9, scope: !2248)
!2292 = !DILocation(line: 2211, column: 15, scope: !2248)
!2293 = !DILocation(line: 2211, column: 22, scope: !2248)
!2294 = !DILocation(line: 2214, column: 7, scope: !2248)
!2295 = !DILocation(line: 2214, column: 13, scope: !2248)
!2296 = !DILocation(line: 2214, column: 21, scope: !2248)
!2297 = !DILocation(line: 2214, column: 38, scope: !2248)
!2298 = !DILocation(line: 2217, column: 7, scope: !2248)
!2299 = !DILocation(line: 2217, column: 13, scope: !2248)
!2300 = !DILocation(line: 2217, column: 21, scope: !2248)
!2301 = !DILocation(line: 2217, column: 39, scope: !2248)
!2302 = !DILocation(line: 2220, column: 7, scope: !2248)
!2303 = !DILocation(line: 2220, column: 13, scope: !2248)
!2304 = !DILocation(line: 2220, column: 21, scope: !2248)
!2305 = !DILocation(line: 2220, column: 42, scope: !2248)
!2306 = !DILocation(line: 2221, column: 7, scope: !2248)
!2307 = !DILocation(line: 2221, column: 13, scope: !2248)
!2308 = !DILocation(line: 2221, column: 21, scope: !2248)
!2309 = !DILocation(line: 2221, column: 39, scope: !2248)
!2310 = !DILocation(line: 2224, column: 40, scope: !2248)
!2311 = !DILocation(line: 2224, column: 46, scope: !2248)
!2312 = !DILocation(line: 2224, column: 65, scope: !2248)
!2313 = !DILocation(line: 2224, column: 71, scope: !2248)
!2314 = !DILocation(line: 2224, column: 81, scope: !2248)
!2315 = !DILocation(line: 2224, column: 54, scope: !2248)
!2316 = !DILocation(line: 2224, column: 97, scope: !2248)
!2317 = !DILocation(line: 2224, column: 87, scope: !2248)
!2318 = !DILocation(line: 2224, column: 104, scope: !2248)
!2319 = !DILocation(line: 2224, column: 110, scope: !2248)
!2320 = !DILocation(line: 2224, column: 23, scope: !2248)
!2321 = !DILocation(line: 2224, column: 21, scope: !2248)
!2322 = !DILocation(line: 2225, column: 5, scope: !2248)
!2323 = !DILocation(line: 2229, column: 7, scope: !2248)
!2324 = !DILocation(line: 2229, column: 13, scope: !2248)
!2325 = !DILocation(line: 2229, column: 23, scope: !2248)
!2326 = !DILocation(line: 2230, column: 7, scope: !2248)
!2327 = !DILocation(line: 2230, column: 13, scope: !2248)
!2328 = !DILocation(line: 2230, column: 23, scope: !2248)
!2329 = !DILocation(line: 2233, column: 7, scope: !2248)
!2330 = !DILocation(line: 2233, column: 13, scope: !2248)
!2331 = !DILocation(line: 2233, column: 23, scope: !2248)
!2332 = !DILocation(line: 2236, column: 7, scope: !2248)
!2333 = !DILocation(line: 2238, column: 7, scope: !2248)
!2334 = !DILocation(line: 2241, column: 9, scope: !2248)
!2335 = !DILocation(line: 2241, column: 23, scope: !2248)
!2336 = !DILocation(line: 2244, column: 7, scope: !2248)
!2337 = !DILocation(line: 2244, column: 13, scope: !2248)
!2338 = !DILocation(line: 2244, column: 23, scope: !2248)
!2339 = !DILocation(line: 2244, column: 27, scope: !2248)
!2340 = !DILocation(line: 2247, column: 7, scope: !2248)
!2341 = !DILocation(line: 2253, column: 22, scope: !2248)
!2342 = !DILocation(line: 2253, column: 7, scope: !2248)
!2343 = !DILocation(line: 2256, column: 7, scope: !2248)
!2344 = !DILocation(line: 2256, column: 13, scope: !2248)
!2345 = !DILocation(line: 2256, column: 23, scope: !2248)
!2346 = !DILocation(line: 2256, column: 27, scope: !2248)
!2347 = !DILocation(line: 2257, column: 5, scope: !2248)
!2348 = !DILocation(line: 2261, column: 7, scope: !2248)
!2349 = !DILocation(line: 2261, column: 13, scope: !2248)
!2350 = !DILocation(line: 2261, column: 23, scope: !2248)
!2351 = !DILocation(line: 2262, column: 7, scope: !2248)
!2352 = !DILocation(line: 2262, column: 13, scope: !2248)
!2353 = !DILocation(line: 2262, column: 23, scope: !2248)
!2354 = !DILocation(line: 2265, column: 7, scope: !2248)
!2355 = !DILocation(line: 2265, column: 13, scope: !2248)
!2356 = !DILocation(line: 2265, column: 23, scope: !2248)
!2357 = !DILocation(line: 2268, column: 7, scope: !2248)
!2358 = !DILocation(line: 2270, column: 7, scope: !2248)
!2359 = !DILocation(line: 2273, column: 5, scope: !2248)
!2360 = !DILocation(line: 2277, column: 5, scope: !2248)
!2361 = !DILocation(line: 2279, column: 1, scope: !2248)
!2362 = distinct !DISubprogram(name: "I2C_DMASlaveReceiveCplt", scope: !1, file: !1, line: 6149, type: !9, scopeLine: 6150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2363 = !DILocation(line: 6151, column: 73, scope: !2362)
!2364 = !DILocation(line: 6151, column: 80, scope: !2362)
!2365 = !DILocation(line: 6151, column: 29, scope: !2362)
!2366 = !DILocation(line: 6151, column: 22, scope: !2362)
!2367 = !DILocation(line: 6152, column: 25, scope: !2362)
!2368 = !DILocation(line: 6152, column: 31, scope: !2362)
!2369 = !DILocation(line: 6152, column: 12, scope: !2362)
!2370 = !DILocation(line: 6154, column: 8, scope: !2362)
!2371 = !DILocation(line: 6154, column: 44, scope: !2362)
!2372 = !DILocation(line: 6154, column: 51, scope: !2362)
!2373 = !DILocation(line: 6155, column: 8, scope: !2362)
!2374 = !DILocation(line: 6155, column: 19, scope: !2362)
!2375 = !DILocation(line: 6154, column: 7, scope: !2362)
!2376 = !DILocation(line: 6158, column: 5, scope: !2362)
!2377 = !DILocation(line: 6158, column: 11, scope: !2362)
!2378 = !DILocation(line: 6158, column: 21, scope: !2362)
!2379 = !DILocation(line: 6158, column: 25, scope: !2362)
!2380 = !DILocation(line: 6161, column: 24, scope: !2362)
!2381 = !DILocation(line: 6161, column: 5, scope: !2362)
!2382 = !DILocation(line: 6162, column: 3, scope: !2362)
!2383 = !DILocation(line: 6169, column: 1, scope: !2362)
!2384 = distinct !DISubprogram(name: "HAL_I2C_Mem_Write", scope: !1, file: !1, line: 2293, type: !9, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2385 = !DILocation(line: 2301, column: 7, scope: !2384)
!2386 = !DILocation(line: 2301, column: 13, scope: !2384)
!2387 = !DILocation(line: 2301, column: 19, scope: !2384)
!2388 = !DILocation(line: 2303, column: 10, scope: !2384)
!2389 = !DILocation(line: 2303, column: 16, scope: !2384)
!2390 = !DILocation(line: 2303, column: 25, scope: !2384)
!2391 = !DILocation(line: 2303, column: 29, scope: !2384)
!2392 = !DILocation(line: 2303, column: 34, scope: !2384)
!2393 = !DILocation(line: 2303, column: 9, scope: !2384)
!2394 = !DILocation(line: 2305, column: 7, scope: !2384)
!2395 = !DILocation(line: 2305, column: 13, scope: !2384)
!2396 = !DILocation(line: 2305, column: 23, scope: !2384)
!2397 = !DILocation(line: 2306, column: 7, scope: !2384)
!2398 = !DILocation(line: 2310, column: 5, scope: !2384)
!2399 = !DILocation(line: 2313, column: 17, scope: !2384)
!2400 = !DILocation(line: 2313, column: 15, scope: !2384)
!2401 = !DILocation(line: 2315, column: 36, scope: !2384)
!2402 = !DILocation(line: 2315, column: 80, scope: !2384)
!2403 = !DILocation(line: 2315, column: 9, scope: !2384)
!2404 = !DILocation(line: 2315, column: 91, scope: !2384)
!2405 = !DILocation(line: 2317, column: 7, scope: !2384)
!2406 = !DILocation(line: 2320, column: 5, scope: !2384)
!2407 = !DILocation(line: 2320, column: 11, scope: !2384)
!2408 = !DILocation(line: 2320, column: 21, scope: !2384)
!2409 = !DILocation(line: 2321, column: 5, scope: !2384)
!2410 = !DILocation(line: 2321, column: 11, scope: !2384)
!2411 = !DILocation(line: 2321, column: 21, scope: !2384)
!2412 = !DILocation(line: 2322, column: 5, scope: !2384)
!2413 = !DILocation(line: 2322, column: 11, scope: !2384)
!2414 = !DILocation(line: 2322, column: 21, scope: !2384)
!2415 = !DILocation(line: 2325, column: 23, scope: !2384)
!2416 = !DILocation(line: 2325, column: 5, scope: !2384)
!2417 = !DILocation(line: 2325, column: 11, scope: !2384)
!2418 = !DILocation(line: 2325, column: 21, scope: !2384)
!2419 = !DILocation(line: 2326, column: 23, scope: !2384)
!2420 = !DILocation(line: 2326, column: 5, scope: !2384)
!2421 = !DILocation(line: 2326, column: 11, scope: !2384)
!2422 = !DILocation(line: 2326, column: 21, scope: !2384)
!2423 = !DILocation(line: 2327, column: 5, scope: !2384)
!2424 = !DILocation(line: 2327, column: 11, scope: !2384)
!2425 = !DILocation(line: 2327, column: 21, scope: !2384)
!2426 = !DILocation(line: 2330, column: 32, scope: !2384)
!2427 = !DILocation(line: 2330, column: 38, scope: !2384)
!2428 = !DILocation(line: 2330, column: 50, scope: !2384)
!2429 = !DILocation(line: 2330, column: 62, scope: !2384)
!2430 = !DILocation(line: 2330, column: 74, scope: !2384)
!2431 = !DILocation(line: 2330, column: 83, scope: !2384)
!2432 = !DILocation(line: 2330, column: 9, scope: !2384)
!2433 = !DILocation(line: 2330, column: 94, scope: !2384)
!2434 = !DILocation(line: 2333, column: 7, scope: !2384)
!2435 = !DILocation(line: 2334, column: 7, scope: !2384)
!2436 = !DILocation(line: 2338, column: 9, scope: !2384)
!2437 = !DILocation(line: 2338, column: 15, scope: !2384)
!2438 = !DILocation(line: 2338, column: 25, scope: !2384)
!2439 = !DILocation(line: 2340, column: 7, scope: !2384)
!2440 = !DILocation(line: 2340, column: 13, scope: !2384)
!2441 = !DILocation(line: 2340, column: 22, scope: !2384)
!2442 = !DILocation(line: 2341, column: 26, scope: !2384)
!2443 = !DILocation(line: 2341, column: 32, scope: !2384)
!2444 = !DILocation(line: 2341, column: 53, scope: !2384)
!2445 = !DILocation(line: 2341, column: 59, scope: !2384)
!2446 = !DILocation(line: 2341, column: 44, scope: !2384)
!2447 = !DILocation(line: 2341, column: 7, scope: !2384)
!2448 = !DILocation(line: 2342, column: 5, scope: !2384)
!2449 = !DILocation(line: 2345, column: 24, scope: !2384)
!2450 = !DILocation(line: 2345, column: 30, scope: !2384)
!2451 = !DILocation(line: 2345, column: 7, scope: !2384)
!2452 = !DILocation(line: 2345, column: 13, scope: !2384)
!2453 = !DILocation(line: 2345, column: 22, scope: !2384)
!2454 = !DILocation(line: 2346, column: 26, scope: !2384)
!2455 = !DILocation(line: 2346, column: 32, scope: !2384)
!2456 = !DILocation(line: 2346, column: 53, scope: !2384)
!2457 = !DILocation(line: 2346, column: 59, scope: !2384)
!2458 = !DILocation(line: 2346, column: 44, scope: !2384)
!2459 = !DILocation(line: 2346, column: 7, scope: !2384)
!2460 = !DILocation(line: 2349, column: 5, scope: !2384)
!2461 = !DILocation(line: 2352, column: 42, scope: !2384)
!2462 = !DILocation(line: 2352, column: 48, scope: !2384)
!2463 = !DILocation(line: 2352, column: 57, scope: !2384)
!2464 = !DILocation(line: 2352, column: 11, scope: !2384)
!2465 = !DILocation(line: 2352, column: 68, scope: !2384)
!2466 = !DILocation(line: 2354, column: 9, scope: !2384)
!2467 = !DILocation(line: 2358, column: 31, scope: !2384)
!2468 = !DILocation(line: 2358, column: 37, scope: !2384)
!2469 = !DILocation(line: 2358, column: 30, scope: !2384)
!2470 = !DILocation(line: 2358, column: 7, scope: !2384)
!2471 = !DILocation(line: 2358, column: 13, scope: !2384)
!2472 = !DILocation(line: 2358, column: 23, scope: !2384)
!2473 = !DILocation(line: 2358, column: 28, scope: !2384)
!2474 = !DILocation(line: 2361, column: 7, scope: !2384)
!2475 = !DILocation(line: 2361, column: 13, scope: !2384)
!2476 = !DILocation(line: 2361, column: 21, scope: !2384)
!2477 = !DILocation(line: 2363, column: 7, scope: !2384)
!2478 = !DILocation(line: 2363, column: 13, scope: !2384)
!2479 = !DILocation(line: 2363, column: 22, scope: !2384)
!2480 = !DILocation(line: 2364, column: 7, scope: !2384)
!2481 = !DILocation(line: 2364, column: 13, scope: !2384)
!2482 = !DILocation(line: 2364, column: 21, scope: !2384)
!2483 = !DILocation(line: 2366, column: 12, scope: !2384)
!2484 = !DILocation(line: 2366, column: 18, scope: !2384)
!2485 = !DILocation(line: 2366, column: 28, scope: !2384)
!2486 = !DILocation(line: 2366, column: 35, scope: !2384)
!2487 = !DILocation(line: 2366, column: 39, scope: !2384)
!2488 = !DILocation(line: 2366, column: 45, scope: !2384)
!2489 = !DILocation(line: 2366, column: 54, scope: !2384)
!2490 = !DILocation(line: 2366, column: 11, scope: !2384)
!2491 = !DILocation(line: 2369, column: 40, scope: !2384)
!2492 = !DILocation(line: 2369, column: 67, scope: !2384)
!2493 = !DILocation(line: 2369, column: 76, scope: !2384)
!2494 = !DILocation(line: 2369, column: 13, scope: !2384)
!2495 = !DILocation(line: 2369, column: 87, scope: !2384)
!2496 = !DILocation(line: 2371, column: 11, scope: !2384)
!2497 = !DILocation(line: 2374, column: 13, scope: !2384)
!2498 = !DILocation(line: 2374, column: 19, scope: !2384)
!2499 = !DILocation(line: 2374, column: 29, scope: !2384)
!2500 = !DILocation(line: 2376, column: 11, scope: !2384)
!2501 = !DILocation(line: 2376, column: 17, scope: !2384)
!2502 = !DILocation(line: 2376, column: 26, scope: !2384)
!2503 = !DILocation(line: 2377, column: 30, scope: !2384)
!2504 = !DILocation(line: 2377, column: 36, scope: !2384)
!2505 = !DILocation(line: 2377, column: 57, scope: !2384)
!2506 = !DILocation(line: 2377, column: 63, scope: !2384)
!2507 = !DILocation(line: 2377, column: 48, scope: !2384)
!2508 = !DILocation(line: 2377, column: 11, scope: !2384)
!2509 = !DILocation(line: 2378, column: 9, scope: !2384)
!2510 = !DILocation(line: 2381, column: 28, scope: !2384)
!2511 = !DILocation(line: 2381, column: 34, scope: !2384)
!2512 = !DILocation(line: 2381, column: 11, scope: !2384)
!2513 = !DILocation(line: 2381, column: 17, scope: !2384)
!2514 = !DILocation(line: 2381, column: 26, scope: !2384)
!2515 = !DILocation(line: 2382, column: 30, scope: !2384)
!2516 = !DILocation(line: 2382, column: 36, scope: !2384)
!2517 = !DILocation(line: 2382, column: 57, scope: !2384)
!2518 = !DILocation(line: 2382, column: 63, scope: !2384)
!2519 = !DILocation(line: 2382, column: 48, scope: !2384)
!2520 = !DILocation(line: 2382, column: 11, scope: !2384)
!2521 = !DILocation(line: 2384, column: 7, scope: !2384)
!2522 = !DILocation(line: 2386, column: 5, scope: !2384)
!2523 = !DILocation(line: 2386, column: 14, scope: !2384)
!2524 = !DILocation(line: 2386, column: 20, scope: !2384)
!2525 = !DILocation(line: 2386, column: 30, scope: !2384)
!2526 = distinct !{!2526, !2460, !2527}
!2527 = !DILocation(line: 2386, column: 34, scope: !2384)
!2528 = !DILocation(line: 2390, column: 40, scope: !2384)
!2529 = !DILocation(line: 2390, column: 46, scope: !2384)
!2530 = !DILocation(line: 2390, column: 55, scope: !2384)
!2531 = !DILocation(line: 2390, column: 9, scope: !2384)
!2532 = !DILocation(line: 2390, column: 66, scope: !2384)
!2533 = !DILocation(line: 2392, column: 7, scope: !2384)
!2534 = !DILocation(line: 2396, column: 5, scope: !2384)
!2535 = !DILocation(line: 2399, column: 5, scope: !2384)
!2536 = !DILocation(line: 2401, column: 5, scope: !2384)
!2537 = !DILocation(line: 2401, column: 11, scope: !2384)
!2538 = !DILocation(line: 2401, column: 17, scope: !2384)
!2539 = !DILocation(line: 2402, column: 5, scope: !2384)
!2540 = !DILocation(line: 2402, column: 11, scope: !2384)
!2541 = !DILocation(line: 2402, column: 17, scope: !2384)
!2542 = !DILocation(line: 2405, column: 5, scope: !2384)
!2543 = !DILocation(line: 2407, column: 5, scope: !2384)
!2544 = !DILocation(line: 2411, column: 5, scope: !2384)
!2545 = !DILocation(line: 2413, column: 1, scope: !2384)
!2546 = distinct !DISubprogram(name: "I2C_RequestMemoryWrite", scope: !1, file: !1, line: 5178, type: !9, scopeLine: 5180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2547 = !DILocation(line: 5181, column: 22, scope: !2546)
!2548 = !DILocation(line: 5181, column: 28, scope: !2546)
!2549 = !DILocation(line: 5181, column: 49, scope: !2546)
!2550 = !DILocation(line: 5181, column: 40, scope: !2546)
!2551 = !DILocation(line: 5181, column: 3, scope: !2546)
!2552 = !DILocation(line: 5184, column: 38, scope: !2546)
!2553 = !DILocation(line: 5184, column: 44, scope: !2546)
!2554 = !DILocation(line: 5184, column: 53, scope: !2546)
!2555 = !DILocation(line: 5184, column: 7, scope: !2546)
!2556 = !DILocation(line: 5184, column: 64, scope: !2546)
!2557 = !DILocation(line: 5186, column: 5, scope: !2546)
!2558 = !DILocation(line: 5190, column: 7, scope: !2546)
!2559 = !DILocation(line: 5190, column: 18, scope: !2546)
!2560 = !DILocation(line: 5193, column: 28, scope: !2546)
!2561 = !DILocation(line: 5193, column: 5, scope: !2546)
!2562 = !DILocation(line: 5193, column: 11, scope: !2546)
!2563 = !DILocation(line: 5193, column: 21, scope: !2546)
!2564 = !DILocation(line: 5193, column: 26, scope: !2546)
!2565 = !DILocation(line: 5194, column: 3, scope: !2546)
!2566 = !DILocation(line: 5199, column: 28, scope: !2546)
!2567 = !DILocation(line: 5199, column: 5, scope: !2546)
!2568 = !DILocation(line: 5199, column: 11, scope: !2546)
!2569 = !DILocation(line: 5199, column: 21, scope: !2546)
!2570 = !DILocation(line: 5199, column: 26, scope: !2546)
!2571 = !DILocation(line: 5202, column: 40, scope: !2546)
!2572 = !DILocation(line: 5202, column: 46, scope: !2546)
!2573 = !DILocation(line: 5202, column: 55, scope: !2546)
!2574 = !DILocation(line: 5202, column: 9, scope: !2546)
!2575 = !DILocation(line: 5202, column: 66, scope: !2546)
!2576 = !DILocation(line: 5204, column: 7, scope: !2546)
!2577 = !DILocation(line: 5208, column: 28, scope: !2546)
!2578 = !DILocation(line: 5208, column: 5, scope: !2546)
!2579 = !DILocation(line: 5208, column: 11, scope: !2546)
!2580 = !DILocation(line: 5208, column: 21, scope: !2546)
!2581 = !DILocation(line: 5208, column: 26, scope: !2546)
!2582 = !DILocation(line: 5212, column: 34, scope: !2546)
!2583 = !DILocation(line: 5212, column: 61, scope: !2546)
!2584 = !DILocation(line: 5212, column: 70, scope: !2546)
!2585 = !DILocation(line: 5212, column: 7, scope: !2546)
!2586 = !DILocation(line: 5212, column: 81, scope: !2546)
!2587 = !DILocation(line: 5214, column: 5, scope: !2546)
!2588 = !DILocation(line: 5217, column: 3, scope: !2546)
!2589 = !DILocation(line: 5218, column: 1, scope: !2546)
!2590 = distinct !DISubprogram(name: "HAL_I2C_Mem_Read", scope: !1, file: !1, line: 2428, type: !9, scopeLine: 2430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2591 = !DILocation(line: 2436, column: 7, scope: !2590)
!2592 = !DILocation(line: 2436, column: 13, scope: !2590)
!2593 = !DILocation(line: 2436, column: 19, scope: !2590)
!2594 = !DILocation(line: 2438, column: 10, scope: !2590)
!2595 = !DILocation(line: 2438, column: 16, scope: !2590)
!2596 = !DILocation(line: 2438, column: 25, scope: !2590)
!2597 = !DILocation(line: 2438, column: 29, scope: !2590)
!2598 = !DILocation(line: 2438, column: 34, scope: !2590)
!2599 = !DILocation(line: 2438, column: 9, scope: !2590)
!2600 = !DILocation(line: 2440, column: 7, scope: !2590)
!2601 = !DILocation(line: 2440, column: 13, scope: !2590)
!2602 = !DILocation(line: 2440, column: 23, scope: !2590)
!2603 = !DILocation(line: 2441, column: 7, scope: !2590)
!2604 = !DILocation(line: 2445, column: 5, scope: !2590)
!2605 = !DILocation(line: 2448, column: 17, scope: !2590)
!2606 = !DILocation(line: 2448, column: 15, scope: !2590)
!2607 = !DILocation(line: 2450, column: 36, scope: !2590)
!2608 = !DILocation(line: 2450, column: 80, scope: !2590)
!2609 = !DILocation(line: 2450, column: 9, scope: !2590)
!2610 = !DILocation(line: 2450, column: 91, scope: !2590)
!2611 = !DILocation(line: 2452, column: 7, scope: !2590)
!2612 = !DILocation(line: 2455, column: 5, scope: !2590)
!2613 = !DILocation(line: 2455, column: 11, scope: !2590)
!2614 = !DILocation(line: 2455, column: 21, scope: !2590)
!2615 = !DILocation(line: 2456, column: 5, scope: !2590)
!2616 = !DILocation(line: 2456, column: 11, scope: !2590)
!2617 = !DILocation(line: 2456, column: 21, scope: !2590)
!2618 = !DILocation(line: 2457, column: 5, scope: !2590)
!2619 = !DILocation(line: 2457, column: 11, scope: !2590)
!2620 = !DILocation(line: 2457, column: 21, scope: !2590)
!2621 = !DILocation(line: 2460, column: 23, scope: !2590)
!2622 = !DILocation(line: 2460, column: 5, scope: !2590)
!2623 = !DILocation(line: 2460, column: 11, scope: !2590)
!2624 = !DILocation(line: 2460, column: 21, scope: !2590)
!2625 = !DILocation(line: 2461, column: 23, scope: !2590)
!2626 = !DILocation(line: 2461, column: 5, scope: !2590)
!2627 = !DILocation(line: 2461, column: 11, scope: !2590)
!2628 = !DILocation(line: 2461, column: 21, scope: !2590)
!2629 = !DILocation(line: 2462, column: 5, scope: !2590)
!2630 = !DILocation(line: 2462, column: 11, scope: !2590)
!2631 = !DILocation(line: 2462, column: 21, scope: !2590)
!2632 = !DILocation(line: 2465, column: 31, scope: !2590)
!2633 = !DILocation(line: 2465, column: 37, scope: !2590)
!2634 = !DILocation(line: 2465, column: 49, scope: !2590)
!2635 = !DILocation(line: 2465, column: 61, scope: !2590)
!2636 = !DILocation(line: 2465, column: 73, scope: !2590)
!2637 = !DILocation(line: 2465, column: 82, scope: !2590)
!2638 = !DILocation(line: 2465, column: 9, scope: !2590)
!2639 = !DILocation(line: 2465, column: 93, scope: !2590)
!2640 = !DILocation(line: 2468, column: 7, scope: !2590)
!2641 = !DILocation(line: 2469, column: 7, scope: !2590)
!2642 = !DILocation(line: 2474, column: 9, scope: !2590)
!2643 = !DILocation(line: 2474, column: 15, scope: !2590)
!2644 = !DILocation(line: 2474, column: 25, scope: !2590)
!2645 = !DILocation(line: 2476, column: 7, scope: !2590)
!2646 = !DILocation(line: 2476, column: 13, scope: !2590)
!2647 = !DILocation(line: 2476, column: 22, scope: !2590)
!2648 = !DILocation(line: 2477, column: 26, scope: !2590)
!2649 = !DILocation(line: 2477, column: 32, scope: !2590)
!2650 = !DILocation(line: 2477, column: 53, scope: !2590)
!2651 = !DILocation(line: 2477, column: 59, scope: !2590)
!2652 = !DILocation(line: 2477, column: 44, scope: !2590)
!2653 = !DILocation(line: 2477, column: 7, scope: !2590)
!2654 = !DILocation(line: 2478, column: 5, scope: !2590)
!2655 = !DILocation(line: 2481, column: 24, scope: !2590)
!2656 = !DILocation(line: 2481, column: 30, scope: !2590)
!2657 = !DILocation(line: 2481, column: 7, scope: !2590)
!2658 = !DILocation(line: 2481, column: 13, scope: !2590)
!2659 = !DILocation(line: 2481, column: 22, scope: !2590)
!2660 = !DILocation(line: 2482, column: 26, scope: !2590)
!2661 = !DILocation(line: 2482, column: 32, scope: !2590)
!2662 = !DILocation(line: 2482, column: 53, scope: !2590)
!2663 = !DILocation(line: 2482, column: 59, scope: !2590)
!2664 = !DILocation(line: 2482, column: 44, scope: !2590)
!2665 = !DILocation(line: 2482, column: 7, scope: !2590)
!2666 = !DILocation(line: 2485, column: 5, scope: !2590)
!2667 = !DILocation(line: 2488, column: 38, scope: !2590)
!2668 = !DILocation(line: 2488, column: 66, scope: !2590)
!2669 = !DILocation(line: 2488, column: 75, scope: !2590)
!2670 = !DILocation(line: 2488, column: 11, scope: !2590)
!2671 = !DILocation(line: 2488, column: 86, scope: !2590)
!2672 = !DILocation(line: 2490, column: 9, scope: !2590)
!2673 = !DILocation(line: 2494, column: 34, scope: !2590)
!2674 = !DILocation(line: 2494, column: 40, scope: !2590)
!2675 = !DILocation(line: 2494, column: 50, scope: !2590)
!2676 = !DILocation(line: 2494, column: 25, scope: !2590)
!2677 = !DILocation(line: 2494, column: 8, scope: !2590)
!2678 = !DILocation(line: 2494, column: 14, scope: !2590)
!2679 = !DILocation(line: 2494, column: 23, scope: !2590)
!2680 = !DILocation(line: 2497, column: 7, scope: !2590)
!2681 = !DILocation(line: 2497, column: 13, scope: !2590)
!2682 = !DILocation(line: 2497, column: 21, scope: !2590)
!2683 = !DILocation(line: 2499, column: 7, scope: !2590)
!2684 = !DILocation(line: 2499, column: 13, scope: !2590)
!2685 = !DILocation(line: 2499, column: 21, scope: !2590)
!2686 = !DILocation(line: 2500, column: 7, scope: !2590)
!2687 = !DILocation(line: 2500, column: 13, scope: !2590)
!2688 = !DILocation(line: 2500, column: 22, scope: !2590)
!2689 = !DILocation(line: 2502, column: 12, scope: !2590)
!2690 = !DILocation(line: 2502, column: 18, scope: !2590)
!2691 = !DILocation(line: 2502, column: 28, scope: !2590)
!2692 = !DILocation(line: 2502, column: 35, scope: !2590)
!2693 = !DILocation(line: 2502, column: 39, scope: !2590)
!2694 = !DILocation(line: 2502, column: 45, scope: !2590)
!2695 = !DILocation(line: 2502, column: 54, scope: !2590)
!2696 = !DILocation(line: 2502, column: 11, scope: !2590)
!2697 = !DILocation(line: 2505, column: 40, scope: !2590)
!2698 = !DILocation(line: 2505, column: 67, scope: !2590)
!2699 = !DILocation(line: 2505, column: 76, scope: !2590)
!2700 = !DILocation(line: 2505, column: 13, scope: !2590)
!2701 = !DILocation(line: 2505, column: 87, scope: !2590)
!2702 = !DILocation(line: 2507, column: 11, scope: !2590)
!2703 = !DILocation(line: 2510, column: 13, scope: !2590)
!2704 = !DILocation(line: 2510, column: 19, scope: !2590)
!2705 = !DILocation(line: 2510, column: 29, scope: !2590)
!2706 = !DILocation(line: 2512, column: 11, scope: !2590)
!2707 = !DILocation(line: 2512, column: 17, scope: !2590)
!2708 = !DILocation(line: 2512, column: 26, scope: !2590)
!2709 = !DILocation(line: 2513, column: 30, scope: !2590)
!2710 = !DILocation(line: 2513, column: 36, scope: !2590)
!2711 = !DILocation(line: 2513, column: 58, scope: !2590)
!2712 = !DILocation(line: 2513, column: 64, scope: !2590)
!2713 = !DILocation(line: 2513, column: 48, scope: !2590)
!2714 = !DILocation(line: 2513, column: 11, scope: !2590)
!2715 = !DILocation(line: 2514, column: 9, scope: !2590)
!2716 = !DILocation(line: 2517, column: 28, scope: !2590)
!2717 = !DILocation(line: 2517, column: 34, scope: !2590)
!2718 = !DILocation(line: 2517, column: 11, scope: !2590)
!2719 = !DILocation(line: 2517, column: 17, scope: !2590)
!2720 = !DILocation(line: 2517, column: 26, scope: !2590)
!2721 = !DILocation(line: 2518, column: 30, scope: !2590)
!2722 = !DILocation(line: 2518, column: 36, scope: !2590)
!2723 = !DILocation(line: 2518, column: 57, scope: !2590)
!2724 = !DILocation(line: 2518, column: 63, scope: !2590)
!2725 = !DILocation(line: 2518, column: 48, scope: !2590)
!2726 = !DILocation(line: 2518, column: 11, scope: !2590)
!2727 = !DILocation(line: 2520, column: 7, scope: !2590)
!2728 = !DILocation(line: 2521, column: 5, scope: !2590)
!2729 = !DILocation(line: 2521, column: 14, scope: !2590)
!2730 = !DILocation(line: 2521, column: 20, scope: !2590)
!2731 = !DILocation(line: 2521, column: 30, scope: !2590)
!2732 = distinct !{!2732, !2666, !2733}
!2733 = !DILocation(line: 2521, column: 34, scope: !2590)
!2734 = !DILocation(line: 2525, column: 40, scope: !2590)
!2735 = !DILocation(line: 2525, column: 46, scope: !2590)
!2736 = !DILocation(line: 2525, column: 55, scope: !2590)
!2737 = !DILocation(line: 2525, column: 9, scope: !2590)
!2738 = !DILocation(line: 2525, column: 66, scope: !2590)
!2739 = !DILocation(line: 2527, column: 7, scope: !2590)
!2740 = !DILocation(line: 2531, column: 5, scope: !2590)
!2741 = !DILocation(line: 2534, column: 5, scope: !2590)
!2742 = !DILocation(line: 2536, column: 5, scope: !2590)
!2743 = !DILocation(line: 2536, column: 11, scope: !2590)
!2744 = !DILocation(line: 2536, column: 17, scope: !2590)
!2745 = !DILocation(line: 2537, column: 5, scope: !2590)
!2746 = !DILocation(line: 2537, column: 11, scope: !2590)
!2747 = !DILocation(line: 2537, column: 17, scope: !2590)
!2748 = !DILocation(line: 2540, column: 5, scope: !2590)
!2749 = !DILocation(line: 2542, column: 5, scope: !2590)
!2750 = !DILocation(line: 2546, column: 5, scope: !2590)
!2751 = !DILocation(line: 2548, column: 1, scope: !2590)
!2752 = distinct !DISubprogram(name: "I2C_RequestMemoryRead", scope: !1, file: !1, line: 5232, type: !9, scopeLine: 5234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2753 = !DILocation(line: 5235, column: 22, scope: !2752)
!2754 = !DILocation(line: 5235, column: 28, scope: !2752)
!2755 = !DILocation(line: 5235, column: 49, scope: !2752)
!2756 = !DILocation(line: 5235, column: 40, scope: !2752)
!2757 = !DILocation(line: 5235, column: 3, scope: !2752)
!2758 = !DILocation(line: 5238, column: 38, scope: !2752)
!2759 = !DILocation(line: 5238, column: 44, scope: !2752)
!2760 = !DILocation(line: 5238, column: 53, scope: !2752)
!2761 = !DILocation(line: 5238, column: 7, scope: !2752)
!2762 = !DILocation(line: 5238, column: 64, scope: !2752)
!2763 = !DILocation(line: 5240, column: 5, scope: !2752)
!2764 = !DILocation(line: 5244, column: 7, scope: !2752)
!2765 = !DILocation(line: 5244, column: 18, scope: !2752)
!2766 = !DILocation(line: 5247, column: 28, scope: !2752)
!2767 = !DILocation(line: 5247, column: 5, scope: !2752)
!2768 = !DILocation(line: 5247, column: 11, scope: !2752)
!2769 = !DILocation(line: 5247, column: 21, scope: !2752)
!2770 = !DILocation(line: 5247, column: 26, scope: !2752)
!2771 = !DILocation(line: 5248, column: 3, scope: !2752)
!2772 = !DILocation(line: 5253, column: 28, scope: !2752)
!2773 = !DILocation(line: 5253, column: 5, scope: !2752)
!2774 = !DILocation(line: 5253, column: 11, scope: !2752)
!2775 = !DILocation(line: 5253, column: 21, scope: !2752)
!2776 = !DILocation(line: 5253, column: 26, scope: !2752)
!2777 = !DILocation(line: 5256, column: 40, scope: !2752)
!2778 = !DILocation(line: 5256, column: 46, scope: !2752)
!2779 = !DILocation(line: 5256, column: 55, scope: !2752)
!2780 = !DILocation(line: 5256, column: 9, scope: !2752)
!2781 = !DILocation(line: 5256, column: 66, scope: !2752)
!2782 = !DILocation(line: 5258, column: 7, scope: !2752)
!2783 = !DILocation(line: 5262, column: 28, scope: !2752)
!2784 = !DILocation(line: 5262, column: 5, scope: !2752)
!2785 = !DILocation(line: 5262, column: 11, scope: !2752)
!2786 = !DILocation(line: 5262, column: 21, scope: !2752)
!2787 = !DILocation(line: 5262, column: 26, scope: !2752)
!2788 = !DILocation(line: 5266, column: 34, scope: !2752)
!2789 = !DILocation(line: 5266, column: 60, scope: !2752)
!2790 = !DILocation(line: 5266, column: 69, scope: !2752)
!2791 = !DILocation(line: 5266, column: 7, scope: !2752)
!2792 = !DILocation(line: 5266, column: 80, scope: !2752)
!2793 = !DILocation(line: 5268, column: 5, scope: !2752)
!2794 = !DILocation(line: 5271, column: 3, scope: !2752)
!2795 = !DILocation(line: 5272, column: 1, scope: !2752)
!2796 = distinct !DISubprogram(name: "HAL_I2C_Mem_Write_IT", scope: !1, file: !1, line: 2561, type: !9, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2797 = !DILocation(line: 2570, column: 7, scope: !2796)
!2798 = !DILocation(line: 2570, column: 13, scope: !2796)
!2799 = !DILocation(line: 2570, column: 19, scope: !2796)
!2800 = !DILocation(line: 2572, column: 10, scope: !2796)
!2801 = !DILocation(line: 2572, column: 16, scope: !2796)
!2802 = !DILocation(line: 2572, column: 25, scope: !2796)
!2803 = !DILocation(line: 2572, column: 29, scope: !2796)
!2804 = !DILocation(line: 2572, column: 34, scope: !2796)
!2805 = !DILocation(line: 2572, column: 9, scope: !2796)
!2806 = !DILocation(line: 2574, column: 7, scope: !2796)
!2807 = !DILocation(line: 2574, column: 13, scope: !2796)
!2808 = !DILocation(line: 2574, column: 23, scope: !2796)
!2809 = !DILocation(line: 2575, column: 7, scope: !2796)
!2810 = !DILocation(line: 2578, column: 9, scope: !2796)
!2811 = !DILocation(line: 2578, column: 49, scope: !2796)
!2812 = !DILocation(line: 2580, column: 7, scope: !2796)
!2813 = !DILocation(line: 2584, column: 5, scope: !2796)
!2814 = !DILocation(line: 2587, column: 17, scope: !2796)
!2815 = !DILocation(line: 2587, column: 15, scope: !2796)
!2816 = !DILocation(line: 2589, column: 5, scope: !2796)
!2817 = !DILocation(line: 2589, column: 11, scope: !2796)
!2818 = !DILocation(line: 2589, column: 23, scope: !2796)
!2819 = !DILocation(line: 2590, column: 5, scope: !2796)
!2820 = !DILocation(line: 2590, column: 11, scope: !2796)
!2821 = !DILocation(line: 2590, column: 23, scope: !2796)
!2822 = !DILocation(line: 2591, column: 5, scope: !2796)
!2823 = !DILocation(line: 2591, column: 11, scope: !2796)
!2824 = !DILocation(line: 2591, column: 23, scope: !2796)
!2825 = !DILocation(line: 2594, column: 25, scope: !2796)
!2826 = !DILocation(line: 2594, column: 5, scope: !2796)
!2827 = !DILocation(line: 2594, column: 11, scope: !2796)
!2828 = !DILocation(line: 2594, column: 23, scope: !2796)
!2829 = !DILocation(line: 2595, column: 25, scope: !2796)
!2830 = !DILocation(line: 2595, column: 5, scope: !2796)
!2831 = !DILocation(line: 2595, column: 11, scope: !2796)
!2832 = !DILocation(line: 2595, column: 23, scope: !2796)
!2833 = !DILocation(line: 2596, column: 5, scope: !2796)
!2834 = !DILocation(line: 2596, column: 11, scope: !2796)
!2835 = !DILocation(line: 2596, column: 23, scope: !2796)
!2836 = !DILocation(line: 2597, column: 5, scope: !2796)
!2837 = !DILocation(line: 2597, column: 11, scope: !2796)
!2838 = !DILocation(line: 2597, column: 23, scope: !2796)
!2839 = !DILocation(line: 2599, column: 9, scope: !2796)
!2840 = !DILocation(line: 2599, column: 15, scope: !2796)
!2841 = !DILocation(line: 2599, column: 25, scope: !2796)
!2842 = !DILocation(line: 2601, column: 7, scope: !2796)
!2843 = !DILocation(line: 2601, column: 13, scope: !2796)
!2844 = !DILocation(line: 2601, column: 22, scope: !2796)
!2845 = !DILocation(line: 2602, column: 16, scope: !2796)
!2846 = !DILocation(line: 2603, column: 5, scope: !2796)
!2847 = !DILocation(line: 2606, column: 24, scope: !2796)
!2848 = !DILocation(line: 2606, column: 30, scope: !2796)
!2849 = !DILocation(line: 2606, column: 7, scope: !2796)
!2850 = !DILocation(line: 2606, column: 13, scope: !2796)
!2851 = !DILocation(line: 2606, column: 22, scope: !2796)
!2852 = !DILocation(line: 2607, column: 16, scope: !2796)
!2853 = !DILocation(line: 2611, column: 32, scope: !2796)
!2854 = !DILocation(line: 2611, column: 38, scope: !2796)
!2855 = !DILocation(line: 2611, column: 50, scope: !2796)
!2856 = !DILocation(line: 2611, column: 62, scope: !2796)
!2857 = !DILocation(line: 2611, column: 92, scope: !2796)
!2858 = !DILocation(line: 2611, column: 9, scope: !2796)
!2859 = !DILocation(line: 2611, column: 103, scope: !2796)
!2860 = !DILocation(line: 2614, column: 7, scope: !2796)
!2861 = !DILocation(line: 2615, column: 7, scope: !2796)
!2862 = !DILocation(line: 2619, column: 24, scope: !2796)
!2863 = !DILocation(line: 2619, column: 30, scope: !2796)
!2864 = !DILocation(line: 2619, column: 51, scope: !2796)
!2865 = !DILocation(line: 2619, column: 57, scope: !2796)
!2866 = !DILocation(line: 2619, column: 42, scope: !2796)
!2867 = !DILocation(line: 2619, column: 67, scope: !2796)
!2868 = !DILocation(line: 2619, column: 5, scope: !2796)
!2869 = !DILocation(line: 2622, column: 5, scope: !2796)
!2870 = !DILocation(line: 2631, column: 20, scope: !2796)
!2871 = !DILocation(line: 2631, column: 5, scope: !2796)
!2872 = !DILocation(line: 2633, column: 5, scope: !2796)
!2873 = !DILocation(line: 2637, column: 5, scope: !2796)
!2874 = !DILocation(line: 2639, column: 1, scope: !2796)
!2875 = distinct !DISubprogram(name: "HAL_I2C_Mem_Read_IT", scope: !1, file: !1, line: 2653, type: !9, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2876 = !DILocation(line: 2662, column: 7, scope: !2875)
!2877 = !DILocation(line: 2662, column: 13, scope: !2875)
!2878 = !DILocation(line: 2662, column: 19, scope: !2875)
!2879 = !DILocation(line: 2664, column: 10, scope: !2875)
!2880 = !DILocation(line: 2664, column: 16, scope: !2875)
!2881 = !DILocation(line: 2664, column: 25, scope: !2875)
!2882 = !DILocation(line: 2664, column: 29, scope: !2875)
!2883 = !DILocation(line: 2664, column: 34, scope: !2875)
!2884 = !DILocation(line: 2664, column: 9, scope: !2875)
!2885 = !DILocation(line: 2666, column: 7, scope: !2875)
!2886 = !DILocation(line: 2666, column: 13, scope: !2875)
!2887 = !DILocation(line: 2666, column: 23, scope: !2875)
!2888 = !DILocation(line: 2667, column: 7, scope: !2875)
!2889 = !DILocation(line: 2670, column: 9, scope: !2875)
!2890 = !DILocation(line: 2670, column: 49, scope: !2875)
!2891 = !DILocation(line: 2672, column: 7, scope: !2875)
!2892 = !DILocation(line: 2676, column: 5, scope: !2875)
!2893 = !DILocation(line: 2679, column: 17, scope: !2875)
!2894 = !DILocation(line: 2679, column: 15, scope: !2875)
!2895 = !DILocation(line: 2681, column: 5, scope: !2875)
!2896 = !DILocation(line: 2681, column: 11, scope: !2875)
!2897 = !DILocation(line: 2681, column: 23, scope: !2875)
!2898 = !DILocation(line: 2682, column: 5, scope: !2875)
!2899 = !DILocation(line: 2682, column: 11, scope: !2875)
!2900 = !DILocation(line: 2682, column: 23, scope: !2875)
!2901 = !DILocation(line: 2683, column: 5, scope: !2875)
!2902 = !DILocation(line: 2683, column: 11, scope: !2875)
!2903 = !DILocation(line: 2683, column: 23, scope: !2875)
!2904 = !DILocation(line: 2686, column: 25, scope: !2875)
!2905 = !DILocation(line: 2686, column: 5, scope: !2875)
!2906 = !DILocation(line: 2686, column: 11, scope: !2875)
!2907 = !DILocation(line: 2686, column: 23, scope: !2875)
!2908 = !DILocation(line: 2687, column: 25, scope: !2875)
!2909 = !DILocation(line: 2687, column: 5, scope: !2875)
!2910 = !DILocation(line: 2687, column: 11, scope: !2875)
!2911 = !DILocation(line: 2687, column: 23, scope: !2875)
!2912 = !DILocation(line: 2688, column: 5, scope: !2875)
!2913 = !DILocation(line: 2688, column: 11, scope: !2875)
!2914 = !DILocation(line: 2688, column: 23, scope: !2875)
!2915 = !DILocation(line: 2689, column: 5, scope: !2875)
!2916 = !DILocation(line: 2689, column: 11, scope: !2875)
!2917 = !DILocation(line: 2689, column: 23, scope: !2875)
!2918 = !DILocation(line: 2691, column: 9, scope: !2875)
!2919 = !DILocation(line: 2691, column: 15, scope: !2875)
!2920 = !DILocation(line: 2691, column: 25, scope: !2875)
!2921 = !DILocation(line: 2693, column: 7, scope: !2875)
!2922 = !DILocation(line: 2693, column: 13, scope: !2875)
!2923 = !DILocation(line: 2693, column: 22, scope: !2875)
!2924 = !DILocation(line: 2694, column: 16, scope: !2875)
!2925 = !DILocation(line: 2695, column: 5, scope: !2875)
!2926 = !DILocation(line: 2698, column: 24, scope: !2875)
!2927 = !DILocation(line: 2698, column: 30, scope: !2875)
!2928 = !DILocation(line: 2698, column: 7, scope: !2875)
!2929 = !DILocation(line: 2698, column: 13, scope: !2875)
!2930 = !DILocation(line: 2698, column: 22, scope: !2875)
!2931 = !DILocation(line: 2699, column: 16, scope: !2875)
!2932 = !DILocation(line: 2703, column: 31, scope: !2875)
!2933 = !DILocation(line: 2703, column: 37, scope: !2875)
!2934 = !DILocation(line: 2703, column: 49, scope: !2875)
!2935 = !DILocation(line: 2703, column: 61, scope: !2875)
!2936 = !DILocation(line: 2703, column: 91, scope: !2875)
!2937 = !DILocation(line: 2703, column: 9, scope: !2875)
!2938 = !DILocation(line: 2703, column: 102, scope: !2875)
!2939 = !DILocation(line: 2706, column: 7, scope: !2875)
!2940 = !DILocation(line: 2707, column: 7, scope: !2875)
!2941 = !DILocation(line: 2711, column: 24, scope: !2875)
!2942 = !DILocation(line: 2711, column: 30, scope: !2875)
!2943 = !DILocation(line: 2711, column: 51, scope: !2875)
!2944 = !DILocation(line: 2711, column: 57, scope: !2875)
!2945 = !DILocation(line: 2711, column: 42, scope: !2875)
!2946 = !DILocation(line: 2711, column: 67, scope: !2875)
!2947 = !DILocation(line: 2711, column: 5, scope: !2875)
!2948 = !DILocation(line: 2714, column: 5, scope: !2875)
!2949 = !DILocation(line: 2723, column: 20, scope: !2875)
!2950 = !DILocation(line: 2723, column: 5, scope: !2875)
!2951 = !DILocation(line: 2725, column: 5, scope: !2875)
!2952 = !DILocation(line: 2729, column: 5, scope: !2875)
!2953 = !DILocation(line: 2731, column: 1, scope: !2875)
!2954 = distinct !DISubprogram(name: "HAL_I2C_Mem_Write_DMA", scope: !1, file: !1, line: 2744, type: !9, scopeLine: 2746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!2955 = !DILocation(line: 2754, column: 7, scope: !2954)
!2956 = !DILocation(line: 2754, column: 13, scope: !2954)
!2957 = !DILocation(line: 2754, column: 19, scope: !2954)
!2958 = !DILocation(line: 2756, column: 10, scope: !2954)
!2959 = !DILocation(line: 2756, column: 16, scope: !2954)
!2960 = !DILocation(line: 2756, column: 25, scope: !2954)
!2961 = !DILocation(line: 2756, column: 29, scope: !2954)
!2962 = !DILocation(line: 2756, column: 34, scope: !2954)
!2963 = !DILocation(line: 2756, column: 9, scope: !2954)
!2964 = !DILocation(line: 2758, column: 7, scope: !2954)
!2965 = !DILocation(line: 2758, column: 13, scope: !2954)
!2966 = !DILocation(line: 2758, column: 23, scope: !2954)
!2967 = !DILocation(line: 2759, column: 7, scope: !2954)
!2968 = !DILocation(line: 2762, column: 9, scope: !2954)
!2969 = !DILocation(line: 2762, column: 49, scope: !2954)
!2970 = !DILocation(line: 2764, column: 7, scope: !2954)
!2971 = !DILocation(line: 2768, column: 5, scope: !2954)
!2972 = !DILocation(line: 2771, column: 17, scope: !2954)
!2973 = !DILocation(line: 2771, column: 15, scope: !2954)
!2974 = !DILocation(line: 2773, column: 5, scope: !2954)
!2975 = !DILocation(line: 2773, column: 11, scope: !2954)
!2976 = !DILocation(line: 2773, column: 23, scope: !2954)
!2977 = !DILocation(line: 2774, column: 5, scope: !2954)
!2978 = !DILocation(line: 2774, column: 11, scope: !2954)
!2979 = !DILocation(line: 2774, column: 23, scope: !2954)
!2980 = !DILocation(line: 2775, column: 5, scope: !2954)
!2981 = !DILocation(line: 2775, column: 11, scope: !2954)
!2982 = !DILocation(line: 2775, column: 23, scope: !2954)
!2983 = !DILocation(line: 2778, column: 25, scope: !2954)
!2984 = !DILocation(line: 2778, column: 5, scope: !2954)
!2985 = !DILocation(line: 2778, column: 11, scope: !2954)
!2986 = !DILocation(line: 2778, column: 23, scope: !2954)
!2987 = !DILocation(line: 2779, column: 25, scope: !2954)
!2988 = !DILocation(line: 2779, column: 5, scope: !2954)
!2989 = !DILocation(line: 2779, column: 11, scope: !2954)
!2990 = !DILocation(line: 2779, column: 23, scope: !2954)
!2991 = !DILocation(line: 2780, column: 5, scope: !2954)
!2992 = !DILocation(line: 2780, column: 11, scope: !2954)
!2993 = !DILocation(line: 2780, column: 23, scope: !2954)
!2994 = !DILocation(line: 2781, column: 5, scope: !2954)
!2995 = !DILocation(line: 2781, column: 11, scope: !2954)
!2996 = !DILocation(line: 2781, column: 23, scope: !2954)
!2997 = !DILocation(line: 2783, column: 9, scope: !2954)
!2998 = !DILocation(line: 2783, column: 15, scope: !2954)
!2999 = !DILocation(line: 2783, column: 25, scope: !2954)
!3000 = !DILocation(line: 2785, column: 7, scope: !2954)
!3001 = !DILocation(line: 2785, column: 13, scope: !2954)
!3002 = !DILocation(line: 2785, column: 22, scope: !2954)
!3003 = !DILocation(line: 2786, column: 16, scope: !2954)
!3004 = !DILocation(line: 2787, column: 5, scope: !2954)
!3005 = !DILocation(line: 2790, column: 24, scope: !2954)
!3006 = !DILocation(line: 2790, column: 30, scope: !2954)
!3007 = !DILocation(line: 2790, column: 7, scope: !2954)
!3008 = !DILocation(line: 2790, column: 13, scope: !2954)
!3009 = !DILocation(line: 2790, column: 22, scope: !2954)
!3010 = !DILocation(line: 2791, column: 16, scope: !2954)
!3011 = !DILocation(line: 2795, column: 32, scope: !2954)
!3012 = !DILocation(line: 2795, column: 38, scope: !2954)
!3013 = !DILocation(line: 2795, column: 50, scope: !2954)
!3014 = !DILocation(line: 2795, column: 62, scope: !2954)
!3015 = !DILocation(line: 2795, column: 92, scope: !2954)
!3016 = !DILocation(line: 2795, column: 9, scope: !2954)
!3017 = !DILocation(line: 2795, column: 103, scope: !2954)
!3018 = !DILocation(line: 2798, column: 7, scope: !2954)
!3019 = !DILocation(line: 2799, column: 7, scope: !2954)
!3020 = !DILocation(line: 2803, column: 9, scope: !2954)
!3021 = !DILocation(line: 2803, column: 15, scope: !2954)
!3022 = !DILocation(line: 2803, column: 22, scope: !2954)
!3023 = !DILocation(line: 2806, column: 7, scope: !2954)
!3024 = !DILocation(line: 2806, column: 13, scope: !2954)
!3025 = !DILocation(line: 2806, column: 21, scope: !2954)
!3026 = !DILocation(line: 2806, column: 38, scope: !2954)
!3027 = !DILocation(line: 2809, column: 7, scope: !2954)
!3028 = !DILocation(line: 2809, column: 13, scope: !2954)
!3029 = !DILocation(line: 2809, column: 21, scope: !2954)
!3030 = !DILocation(line: 2809, column: 39, scope: !2954)
!3031 = !DILocation(line: 2812, column: 7, scope: !2954)
!3032 = !DILocation(line: 2812, column: 13, scope: !2954)
!3033 = !DILocation(line: 2812, column: 21, scope: !2954)
!3034 = !DILocation(line: 2812, column: 42, scope: !2954)
!3035 = !DILocation(line: 2813, column: 7, scope: !2954)
!3036 = !DILocation(line: 2813, column: 13, scope: !2954)
!3037 = !DILocation(line: 2813, column: 21, scope: !2954)
!3038 = !DILocation(line: 2813, column: 39, scope: !2954)
!3039 = !DILocation(line: 2816, column: 40, scope: !2954)
!3040 = !DILocation(line: 2816, column: 46, scope: !2954)
!3041 = !DILocation(line: 2816, column: 64, scope: !2954)
!3042 = !DILocation(line: 2816, column: 54, scope: !2954)
!3043 = !DILocation(line: 2816, column: 82, scope: !2954)
!3044 = !DILocation(line: 2816, column: 88, scope: !2954)
!3045 = !DILocation(line: 2816, column: 98, scope: !2954)
!3046 = !DILocation(line: 2816, column: 71, scope: !2954)
!3047 = !DILocation(line: 2816, column: 104, scope: !2954)
!3048 = !DILocation(line: 2816, column: 110, scope: !2954)
!3049 = !DILocation(line: 2816, column: 23, scope: !2954)
!3050 = !DILocation(line: 2816, column: 21, scope: !2954)
!3051 = !DILocation(line: 2817, column: 5, scope: !2954)
!3052 = !DILocation(line: 2821, column: 7, scope: !2954)
!3053 = !DILocation(line: 2821, column: 13, scope: !2954)
!3054 = !DILocation(line: 2821, column: 23, scope: !2954)
!3055 = !DILocation(line: 2822, column: 7, scope: !2954)
!3056 = !DILocation(line: 2822, column: 13, scope: !2954)
!3057 = !DILocation(line: 2822, column: 23, scope: !2954)
!3058 = !DILocation(line: 2825, column: 7, scope: !2954)
!3059 = !DILocation(line: 2825, column: 13, scope: !2954)
!3060 = !DILocation(line: 2825, column: 23, scope: !2954)
!3061 = !DILocation(line: 2828, column: 7, scope: !2954)
!3062 = !DILocation(line: 2830, column: 7, scope: !2954)
!3063 = !DILocation(line: 2833, column: 9, scope: !2954)
!3064 = !DILocation(line: 2833, column: 23, scope: !2954)
!3065 = !DILocation(line: 2837, column: 26, scope: !2954)
!3066 = !DILocation(line: 2837, column: 32, scope: !2954)
!3067 = !DILocation(line: 2837, column: 53, scope: !2954)
!3068 = !DILocation(line: 2837, column: 59, scope: !2954)
!3069 = !DILocation(line: 2837, column: 44, scope: !2954)
!3070 = !DILocation(line: 2837, column: 69, scope: !2954)
!3071 = !DILocation(line: 2837, column: 7, scope: !2954)
!3072 = !DILocation(line: 2840, column: 26, scope: !2954)
!3073 = !DILocation(line: 2840, column: 32, scope: !2954)
!3074 = !DILocation(line: 2840, column: 7, scope: !2954)
!3075 = !DILocation(line: 2840, column: 13, scope: !2954)
!3076 = !DILocation(line: 2840, column: 23, scope: !2954)
!3077 = !DILocation(line: 2843, column: 7, scope: !2954)
!3078 = !DILocation(line: 2849, column: 22, scope: !2954)
!3079 = !DILocation(line: 2849, column: 7, scope: !2954)
!3080 = !DILocation(line: 2852, column: 7, scope: !2954)
!3081 = !DILocation(line: 2852, column: 13, scope: !2954)
!3082 = !DILocation(line: 2852, column: 23, scope: !2954)
!3083 = !DILocation(line: 2852, column: 27, scope: !2954)
!3084 = !DILocation(line: 2853, column: 5, scope: !2954)
!3085 = !DILocation(line: 2857, column: 7, scope: !2954)
!3086 = !DILocation(line: 2857, column: 13, scope: !2954)
!3087 = !DILocation(line: 2857, column: 23, scope: !2954)
!3088 = !DILocation(line: 2858, column: 7, scope: !2954)
!3089 = !DILocation(line: 2858, column: 13, scope: !2954)
!3090 = !DILocation(line: 2858, column: 23, scope: !2954)
!3091 = !DILocation(line: 2861, column: 7, scope: !2954)
!3092 = !DILocation(line: 2861, column: 13, scope: !2954)
!3093 = !DILocation(line: 2861, column: 23, scope: !2954)
!3094 = !DILocation(line: 2864, column: 7, scope: !2954)
!3095 = !DILocation(line: 2866, column: 7, scope: !2954)
!3096 = !DILocation(line: 2869, column: 5, scope: !2954)
!3097 = !DILocation(line: 2873, column: 5, scope: !2954)
!3098 = !DILocation(line: 2875, column: 1, scope: !2954)
!3099 = distinct !DISubprogram(name: "HAL_I2C_Mem_Read_DMA", scope: !1, file: !1, line: 2889, type: !9, scopeLine: 2891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3100 = !DILocation(line: 2899, column: 7, scope: !3099)
!3101 = !DILocation(line: 2899, column: 13, scope: !3099)
!3102 = !DILocation(line: 2899, column: 19, scope: !3099)
!3103 = !DILocation(line: 2901, column: 10, scope: !3099)
!3104 = !DILocation(line: 2901, column: 16, scope: !3099)
!3105 = !DILocation(line: 2901, column: 25, scope: !3099)
!3106 = !DILocation(line: 2901, column: 29, scope: !3099)
!3107 = !DILocation(line: 2901, column: 34, scope: !3099)
!3108 = !DILocation(line: 2901, column: 9, scope: !3099)
!3109 = !DILocation(line: 2903, column: 7, scope: !3099)
!3110 = !DILocation(line: 2903, column: 13, scope: !3099)
!3111 = !DILocation(line: 2903, column: 23, scope: !3099)
!3112 = !DILocation(line: 2904, column: 7, scope: !3099)
!3113 = !DILocation(line: 2907, column: 9, scope: !3099)
!3114 = !DILocation(line: 2907, column: 49, scope: !3099)
!3115 = !DILocation(line: 2909, column: 7, scope: !3099)
!3116 = !DILocation(line: 2913, column: 5, scope: !3099)
!3117 = !DILocation(line: 2916, column: 17, scope: !3099)
!3118 = !DILocation(line: 2916, column: 15, scope: !3099)
!3119 = !DILocation(line: 2918, column: 5, scope: !3099)
!3120 = !DILocation(line: 2918, column: 11, scope: !3099)
!3121 = !DILocation(line: 2918, column: 23, scope: !3099)
!3122 = !DILocation(line: 2919, column: 5, scope: !3099)
!3123 = !DILocation(line: 2919, column: 11, scope: !3099)
!3124 = !DILocation(line: 2919, column: 23, scope: !3099)
!3125 = !DILocation(line: 2920, column: 5, scope: !3099)
!3126 = !DILocation(line: 2920, column: 11, scope: !3099)
!3127 = !DILocation(line: 2920, column: 23, scope: !3099)
!3128 = !DILocation(line: 2923, column: 25, scope: !3099)
!3129 = !DILocation(line: 2923, column: 5, scope: !3099)
!3130 = !DILocation(line: 2923, column: 11, scope: !3099)
!3131 = !DILocation(line: 2923, column: 23, scope: !3099)
!3132 = !DILocation(line: 2924, column: 25, scope: !3099)
!3133 = !DILocation(line: 2924, column: 5, scope: !3099)
!3134 = !DILocation(line: 2924, column: 11, scope: !3099)
!3135 = !DILocation(line: 2924, column: 23, scope: !3099)
!3136 = !DILocation(line: 2925, column: 5, scope: !3099)
!3137 = !DILocation(line: 2925, column: 11, scope: !3099)
!3138 = !DILocation(line: 2925, column: 23, scope: !3099)
!3139 = !DILocation(line: 2926, column: 5, scope: !3099)
!3140 = !DILocation(line: 2926, column: 11, scope: !3099)
!3141 = !DILocation(line: 2926, column: 23, scope: !3099)
!3142 = !DILocation(line: 2928, column: 9, scope: !3099)
!3143 = !DILocation(line: 2928, column: 15, scope: !3099)
!3144 = !DILocation(line: 2928, column: 25, scope: !3099)
!3145 = !DILocation(line: 2930, column: 7, scope: !3099)
!3146 = !DILocation(line: 2930, column: 13, scope: !3099)
!3147 = !DILocation(line: 2930, column: 22, scope: !3099)
!3148 = !DILocation(line: 2931, column: 16, scope: !3099)
!3149 = !DILocation(line: 2932, column: 5, scope: !3099)
!3150 = !DILocation(line: 2935, column: 24, scope: !3099)
!3151 = !DILocation(line: 2935, column: 30, scope: !3099)
!3152 = !DILocation(line: 2935, column: 7, scope: !3099)
!3153 = !DILocation(line: 2935, column: 13, scope: !3099)
!3154 = !DILocation(line: 2935, column: 22, scope: !3099)
!3155 = !DILocation(line: 2936, column: 16, scope: !3099)
!3156 = !DILocation(line: 2940, column: 31, scope: !3099)
!3157 = !DILocation(line: 2940, column: 37, scope: !3099)
!3158 = !DILocation(line: 2940, column: 49, scope: !3099)
!3159 = !DILocation(line: 2940, column: 61, scope: !3099)
!3160 = !DILocation(line: 2940, column: 91, scope: !3099)
!3161 = !DILocation(line: 2940, column: 9, scope: !3099)
!3162 = !DILocation(line: 2940, column: 102, scope: !3099)
!3163 = !DILocation(line: 2943, column: 7, scope: !3099)
!3164 = !DILocation(line: 2944, column: 7, scope: !3099)
!3165 = !DILocation(line: 2947, column: 9, scope: !3099)
!3166 = !DILocation(line: 2947, column: 15, scope: !3099)
!3167 = !DILocation(line: 2947, column: 22, scope: !3099)
!3168 = !DILocation(line: 2950, column: 7, scope: !3099)
!3169 = !DILocation(line: 2950, column: 13, scope: !3099)
!3170 = !DILocation(line: 2950, column: 21, scope: !3099)
!3171 = !DILocation(line: 2950, column: 38, scope: !3099)
!3172 = !DILocation(line: 2953, column: 7, scope: !3099)
!3173 = !DILocation(line: 2953, column: 13, scope: !3099)
!3174 = !DILocation(line: 2953, column: 21, scope: !3099)
!3175 = !DILocation(line: 2953, column: 39, scope: !3099)
!3176 = !DILocation(line: 2956, column: 7, scope: !3099)
!3177 = !DILocation(line: 2956, column: 13, scope: !3099)
!3178 = !DILocation(line: 2956, column: 21, scope: !3099)
!3179 = !DILocation(line: 2956, column: 42, scope: !3099)
!3180 = !DILocation(line: 2957, column: 7, scope: !3099)
!3181 = !DILocation(line: 2957, column: 13, scope: !3099)
!3182 = !DILocation(line: 2957, column: 21, scope: !3099)
!3183 = !DILocation(line: 2957, column: 39, scope: !3099)
!3184 = !DILocation(line: 2960, column: 40, scope: !3099)
!3185 = !DILocation(line: 2960, column: 46, scope: !3099)
!3186 = !DILocation(line: 2960, column: 65, scope: !3099)
!3187 = !DILocation(line: 2960, column: 71, scope: !3099)
!3188 = !DILocation(line: 2960, column: 81, scope: !3099)
!3189 = !DILocation(line: 2960, column: 54, scope: !3099)
!3190 = !DILocation(line: 2960, column: 97, scope: !3099)
!3191 = !DILocation(line: 2960, column: 87, scope: !3099)
!3192 = !DILocation(line: 2960, column: 104, scope: !3099)
!3193 = !DILocation(line: 2960, column: 110, scope: !3099)
!3194 = !DILocation(line: 2960, column: 23, scope: !3099)
!3195 = !DILocation(line: 2960, column: 21, scope: !3099)
!3196 = !DILocation(line: 2961, column: 5, scope: !3099)
!3197 = !DILocation(line: 2965, column: 7, scope: !3099)
!3198 = !DILocation(line: 2965, column: 13, scope: !3099)
!3199 = !DILocation(line: 2965, column: 23, scope: !3099)
!3200 = !DILocation(line: 2966, column: 7, scope: !3099)
!3201 = !DILocation(line: 2966, column: 13, scope: !3099)
!3202 = !DILocation(line: 2966, column: 23, scope: !3099)
!3203 = !DILocation(line: 2969, column: 7, scope: !3099)
!3204 = !DILocation(line: 2969, column: 13, scope: !3099)
!3205 = !DILocation(line: 2969, column: 23, scope: !3099)
!3206 = !DILocation(line: 2972, column: 7, scope: !3099)
!3207 = !DILocation(line: 2974, column: 7, scope: !3099)
!3208 = !DILocation(line: 2977, column: 9, scope: !3099)
!3209 = !DILocation(line: 2977, column: 23, scope: !3099)
!3210 = !DILocation(line: 2980, column: 26, scope: !3099)
!3211 = !DILocation(line: 2980, column: 32, scope: !3099)
!3212 = !DILocation(line: 2980, column: 53, scope: !3099)
!3213 = !DILocation(line: 2980, column: 59, scope: !3099)
!3214 = !DILocation(line: 2980, column: 44, scope: !3099)
!3215 = !DILocation(line: 2980, column: 69, scope: !3099)
!3216 = !DILocation(line: 2980, column: 7, scope: !3099)
!3217 = !DILocation(line: 2983, column: 26, scope: !3099)
!3218 = !DILocation(line: 2983, column: 32, scope: !3099)
!3219 = !DILocation(line: 2983, column: 7, scope: !3099)
!3220 = !DILocation(line: 2983, column: 13, scope: !3099)
!3221 = !DILocation(line: 2983, column: 23, scope: !3099)
!3222 = !DILocation(line: 2986, column: 7, scope: !3099)
!3223 = !DILocation(line: 2992, column: 22, scope: !3099)
!3224 = !DILocation(line: 2992, column: 7, scope: !3099)
!3225 = !DILocation(line: 2995, column: 7, scope: !3099)
!3226 = !DILocation(line: 2995, column: 13, scope: !3099)
!3227 = !DILocation(line: 2995, column: 23, scope: !3099)
!3228 = !DILocation(line: 2995, column: 27, scope: !3099)
!3229 = !DILocation(line: 2996, column: 5, scope: !3099)
!3230 = !DILocation(line: 3000, column: 7, scope: !3099)
!3231 = !DILocation(line: 3000, column: 13, scope: !3099)
!3232 = !DILocation(line: 3000, column: 23, scope: !3099)
!3233 = !DILocation(line: 3001, column: 7, scope: !3099)
!3234 = !DILocation(line: 3001, column: 13, scope: !3099)
!3235 = !DILocation(line: 3001, column: 23, scope: !3099)
!3236 = !DILocation(line: 3004, column: 7, scope: !3099)
!3237 = !DILocation(line: 3004, column: 13, scope: !3099)
!3238 = !DILocation(line: 3004, column: 23, scope: !3099)
!3239 = !DILocation(line: 3007, column: 7, scope: !3099)
!3240 = !DILocation(line: 3009, column: 7, scope: !3099)
!3241 = !DILocation(line: 3012, column: 5, scope: !3099)
!3242 = !DILocation(line: 3016, column: 5, scope: !3099)
!3243 = !DILocation(line: 3018, column: 1, scope: !3099)
!3244 = distinct !DISubprogram(name: "HAL_I2C_IsDeviceReady", scope: !1, file: !1, line: 3031, type: !9, scopeLine: 3032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3245 = !DILocation(line: 3035, column: 17, scope: !3244)
!3246 = !DILocation(line: 3040, column: 7, scope: !3244)
!3247 = !DILocation(line: 3040, column: 13, scope: !3244)
!3248 = !DILocation(line: 3040, column: 19, scope: !3244)
!3249 = !DILocation(line: 3042, column: 9, scope: !3244)
!3250 = !DILocation(line: 3042, column: 49, scope: !3244)
!3251 = !DILocation(line: 3044, column: 7, scope: !3244)
!3252 = !DILocation(line: 3048, column: 5, scope: !3244)
!3253 = !DILocation(line: 3050, column: 5, scope: !3244)
!3254 = !DILocation(line: 3050, column: 11, scope: !3244)
!3255 = !DILocation(line: 3050, column: 17, scope: !3244)
!3256 = !DILocation(line: 3051, column: 5, scope: !3244)
!3257 = !DILocation(line: 3051, column: 11, scope: !3244)
!3258 = !DILocation(line: 3051, column: 21, scope: !3244)
!3259 = !DILocation(line: 3053, column: 5, scope: !3244)
!3260 = !DILocation(line: 3056, column: 29, scope: !3244)
!3261 = !DILocation(line: 3056, column: 7, scope: !3244)
!3262 = !DILocation(line: 3056, column: 13, scope: !3244)
!3263 = !DILocation(line: 3056, column: 23, scope: !3244)
!3264 = !DILocation(line: 3056, column: 27, scope: !3244)
!3265 = !DILocation(line: 3060, column: 19, scope: !3244)
!3266 = !DILocation(line: 3060, column: 17, scope: !3244)
!3267 = !DILocation(line: 3062, column: 14, scope: !3244)
!3268 = !DILocation(line: 3062, column: 12, scope: !3244)
!3269 = !DILocation(line: 3063, column: 14, scope: !3244)
!3270 = !DILocation(line: 3063, column: 12, scope: !3244)
!3271 = !DILocation(line: 3065, column: 7, scope: !3244)
!3272 = !DILocation(line: 3065, column: 15, scope: !3244)
!3273 = !DILocation(line: 3065, column: 20, scope: !3244)
!3274 = !DILocation(line: 3065, column: 30, scope: !3244)
!3275 = !DILocation(line: 3065, column: 34, scope: !3244)
!3276 = !DILocation(line: 3065, column: 39, scope: !3244)
!3277 = !DILocation(line: 0, scope: !3244)
!3278 = !DILocation(line: 3067, column: 13, scope: !3244)
!3279 = !DILocation(line: 3067, column: 21, scope: !3244)
!3280 = !DILocation(line: 3069, column: 17, scope: !3244)
!3281 = !DILocation(line: 3069, column: 33, scope: !3244)
!3282 = !DILocation(line: 3069, column: 31, scope: !3244)
!3283 = !DILocation(line: 3069, column: 46, scope: !3244)
!3284 = !DILocation(line: 3069, column: 44, scope: !3244)
!3285 = !DILocation(line: 3069, column: 55, scope: !3244)
!3286 = !DILocation(line: 3069, column: 59, scope: !3244)
!3287 = !DILocation(line: 3069, column: 67, scope: !3244)
!3288 = !DILocation(line: 3069, column: 15, scope: !3244)
!3289 = !DILocation(line: 3072, column: 13, scope: !3244)
!3290 = !DILocation(line: 3072, column: 19, scope: !3244)
!3291 = !DILocation(line: 3072, column: 25, scope: !3244)
!3292 = !DILocation(line: 3075, column: 13, scope: !3244)
!3293 = !DILocation(line: 3075, column: 19, scope: !3244)
!3294 = !DILocation(line: 3075, column: 29, scope: !3244)
!3295 = !DILocation(line: 3078, column: 13, scope: !3244)
!3296 = !DILocation(line: 3080, column: 13, scope: !3244)
!3297 = !DILocation(line: 3082, column: 9, scope: !3244)
!3298 = !DILocation(line: 3084, column: 16, scope: !3244)
!3299 = !DILocation(line: 3084, column: 14, scope: !3244)
!3300 = !DILocation(line: 3085, column: 16, scope: !3244)
!3301 = !DILocation(line: 3085, column: 14, scope: !3244)
!3302 = distinct !{!3302, !3271, !3303}
!3303 = !DILocation(line: 3086, column: 7, scope: !3244)
!3304 = !DILocation(line: 3089, column: 11, scope: !3244)
!3305 = !DILocation(line: 3089, column: 49, scope: !3244)
!3306 = !DILocation(line: 3092, column: 40, scope: !3244)
!3307 = !DILocation(line: 3092, column: 69, scope: !3244)
!3308 = !DILocation(line: 3092, column: 78, scope: !3244)
!3309 = !DILocation(line: 3092, column: 13, scope: !3244)
!3310 = !DILocation(line: 3092, column: 89, scope: !3244)
!3311 = !DILocation(line: 3094, column: 11, scope: !3244)
!3312 = !DILocation(line: 3098, column: 9, scope: !3244)
!3313 = !DILocation(line: 3101, column: 9, scope: !3244)
!3314 = !DILocation(line: 3101, column: 15, scope: !3244)
!3315 = !DILocation(line: 3101, column: 21, scope: !3244)
!3316 = !DILocation(line: 3104, column: 9, scope: !3244)
!3317 = !DILocation(line: 3106, column: 9, scope: !3244)
!3318 = !DILocation(line: 3111, column: 40, scope: !3244)
!3319 = !DILocation(line: 3111, column: 69, scope: !3244)
!3320 = !DILocation(line: 3111, column: 78, scope: !3244)
!3321 = !DILocation(line: 3111, column: 13, scope: !3244)
!3322 = !DILocation(line: 3111, column: 89, scope: !3244)
!3323 = !DILocation(line: 3113, column: 11, scope: !3244)
!3324 = !DILocation(line: 3117, column: 9, scope: !3244)
!3325 = !DILocation(line: 3120, column: 9, scope: !3244)
!3326 = !DILocation(line: 3124, column: 11, scope: !3244)
!3327 = !DILocation(line: 3124, column: 25, scope: !3244)
!3328 = !DILocation(line: 3124, column: 22, scope: !3244)
!3329 = !DILocation(line: 3127, column: 9, scope: !3244)
!3330 = !DILocation(line: 3127, column: 15, scope: !3244)
!3331 = !DILocation(line: 3127, column: 25, scope: !3244)
!3332 = !DILocation(line: 3127, column: 29, scope: !3244)
!3333 = !DILocation(line: 3130, column: 40, scope: !3244)
!3334 = !DILocation(line: 3130, column: 69, scope: !3244)
!3335 = !DILocation(line: 3130, column: 78, scope: !3244)
!3336 = !DILocation(line: 3130, column: 13, scope: !3244)
!3337 = !DILocation(line: 3130, column: 89, scope: !3244)
!3338 = !DILocation(line: 3132, column: 11, scope: !3244)
!3339 = !DILocation(line: 3136, column: 9, scope: !3244)
!3340 = !DILocation(line: 3137, column: 7, scope: !3244)
!3341 = !DILocation(line: 3140, column: 17, scope: !3244)
!3342 = !DILocation(line: 3141, column: 5, scope: !3244)
!3343 = !DILocation(line: 3141, column: 14, scope: !3244)
!3344 = !DILocation(line: 3141, column: 27, scope: !3244)
!3345 = !DILocation(line: 3141, column: 25, scope: !3244)
!3346 = distinct !{!3346, !3259, !3347}
!3347 = !DILocation(line: 3141, column: 33, scope: !3244)
!3348 = !DILocation(line: 3144, column: 5, scope: !3244)
!3349 = !DILocation(line: 3144, column: 11, scope: !3244)
!3350 = !DILocation(line: 3144, column: 17, scope: !3244)
!3351 = !DILocation(line: 3147, column: 5, scope: !3244)
!3352 = !DILocation(line: 3147, column: 11, scope: !3244)
!3353 = !DILocation(line: 3147, column: 21, scope: !3244)
!3354 = !DILocation(line: 3150, column: 5, scope: !3244)
!3355 = !DILocation(line: 3152, column: 5, scope: !3244)
!3356 = !DILocation(line: 3156, column: 5, scope: !3244)
!3357 = !DILocation(line: 3158, column: 1, scope: !3244)
!3358 = distinct !DISubprogram(name: "HAL_I2C_Master_Seq_Transmit_IT", scope: !1, file: !1, line: 3172, type: !9, scopeLine: 3174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3359 = !DILocation(line: 3176, column: 12, scope: !3358)
!3360 = !DILocation(line: 3181, column: 7, scope: !3358)
!3361 = !DILocation(line: 3181, column: 13, scope: !3358)
!3362 = !DILocation(line: 3181, column: 19, scope: !3358)
!3363 = !DILocation(line: 3184, column: 5, scope: !3358)
!3364 = !DILocation(line: 3186, column: 5, scope: !3358)
!3365 = !DILocation(line: 3186, column: 11, scope: !3358)
!3366 = !DILocation(line: 3186, column: 21, scope: !3358)
!3367 = !DILocation(line: 3187, column: 5, scope: !3358)
!3368 = !DILocation(line: 3187, column: 11, scope: !3358)
!3369 = !DILocation(line: 3187, column: 21, scope: !3358)
!3370 = !DILocation(line: 3188, column: 5, scope: !3358)
!3371 = !DILocation(line: 3188, column: 11, scope: !3358)
!3372 = !DILocation(line: 3188, column: 21, scope: !3358)
!3373 = !DILocation(line: 3191, column: 25, scope: !3358)
!3374 = !DILocation(line: 3191, column: 5, scope: !3358)
!3375 = !DILocation(line: 3191, column: 11, scope: !3358)
!3376 = !DILocation(line: 3191, column: 23, scope: !3358)
!3377 = !DILocation(line: 3192, column: 25, scope: !3358)
!3378 = !DILocation(line: 3192, column: 5, scope: !3358)
!3379 = !DILocation(line: 3192, column: 11, scope: !3358)
!3380 = !DILocation(line: 3192, column: 23, scope: !3358)
!3381 = !DILocation(line: 3193, column: 25, scope: !3358)
!3382 = !DILocation(line: 3193, column: 5, scope: !3358)
!3383 = !DILocation(line: 3193, column: 11, scope: !3358)
!3384 = !DILocation(line: 3193, column: 23, scope: !3358)
!3385 = !DILocation(line: 3194, column: 5, scope: !3358)
!3386 = !DILocation(line: 3194, column: 11, scope: !3358)
!3387 = !DILocation(line: 3194, column: 23, scope: !3358)
!3388 = !DILocation(line: 3197, column: 9, scope: !3358)
!3389 = !DILocation(line: 3197, column: 15, scope: !3358)
!3390 = !DILocation(line: 3197, column: 25, scope: !3358)
!3391 = !DILocation(line: 3199, column: 7, scope: !3358)
!3392 = !DILocation(line: 3199, column: 13, scope: !3358)
!3393 = !DILocation(line: 3199, column: 22, scope: !3358)
!3394 = !DILocation(line: 3200, column: 16, scope: !3358)
!3395 = !DILocation(line: 3201, column: 5, scope: !3358)
!3396 = !DILocation(line: 3204, column: 24, scope: !3358)
!3397 = !DILocation(line: 3204, column: 30, scope: !3358)
!3398 = !DILocation(line: 3204, column: 7, scope: !3358)
!3399 = !DILocation(line: 3204, column: 13, scope: !3358)
!3400 = !DILocation(line: 3204, column: 22, scope: !3358)
!3401 = !DILocation(line: 3205, column: 18, scope: !3358)
!3402 = !DILocation(line: 3205, column: 24, scope: !3358)
!3403 = !DILocation(line: 3205, column: 16, scope: !3358)
!3404 = !DILocation(line: 3210, column: 10, scope: !3358)
!3405 = !DILocation(line: 3210, column: 16, scope: !3358)
!3406 = !DILocation(line: 3210, column: 30, scope: !3358)
!3407 = !DILocation(line: 3210, column: 59, scope: !3358)
!3408 = !DILocation(line: 3210, column: 63, scope: !3358)
!3409 = !DILocation(line: 3210, column: 114, scope: !3358)
!3410 = !DILocation(line: 3210, column: 9, scope: !3358)
!3411 = !DILocation(line: 3212, column: 19, scope: !3358)
!3412 = !DILocation(line: 3213, column: 5, scope: !3358)
!3413 = !DILocation(line: 3217, column: 35, scope: !3358)
!3414 = !DILocation(line: 3217, column: 7, scope: !3358)
!3415 = !DILocation(line: 3220, column: 11, scope: !3358)
!3416 = !DILocation(line: 3220, column: 17, scope: !3358)
!3417 = !DILocation(line: 3220, column: 27, scope: !3358)
!3418 = !DILocation(line: 3222, column: 20, scope: !3358)
!3419 = !DILocation(line: 3222, column: 26, scope: !3358)
!3420 = !DILocation(line: 3222, column: 18, scope: !3358)
!3421 = !DILocation(line: 3223, column: 7, scope: !3358)
!3422 = !DILocation(line: 3227, column: 24, scope: !3358)
!3423 = !DILocation(line: 3227, column: 30, scope: !3358)
!3424 = !DILocation(line: 3227, column: 51, scope: !3358)
!3425 = !DILocation(line: 3227, column: 57, scope: !3358)
!3426 = !DILocation(line: 3227, column: 42, scope: !3358)
!3427 = !DILocation(line: 3227, column: 67, scope: !3358)
!3428 = !DILocation(line: 3227, column: 77, scope: !3358)
!3429 = !DILocation(line: 3227, column: 5, scope: !3358)
!3430 = !DILocation(line: 3230, column: 5, scope: !3358)
!3431 = !DILocation(line: 3235, column: 20, scope: !3358)
!3432 = !DILocation(line: 3235, column: 5, scope: !3358)
!3433 = !DILocation(line: 3237, column: 5, scope: !3358)
!3434 = !DILocation(line: 3241, column: 5, scope: !3358)
!3435 = !DILocation(line: 3243, column: 1, scope: !3358)
!3436 = distinct !DISubprogram(name: "I2C_ConvertOtherXferOptions", scope: !1, file: !1, line: 6610, type: !9, scopeLine: 6611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3437 = !DILocation(line: 6615, column: 7, scope: !3436)
!3438 = !DILocation(line: 6615, column: 13, scope: !3436)
!3439 = !DILocation(line: 6615, column: 25, scope: !3436)
!3440 = !DILocation(line: 6617, column: 5, scope: !3436)
!3441 = !DILocation(line: 6617, column: 11, scope: !3436)
!3442 = !DILocation(line: 6617, column: 23, scope: !3436)
!3443 = !DILocation(line: 6618, column: 3, scope: !3436)
!3444 = !DILocation(line: 6623, column: 12, scope: !3436)
!3445 = !DILocation(line: 6623, column: 18, scope: !3436)
!3446 = !DILocation(line: 6623, column: 30, scope: !3436)
!3447 = !DILocation(line: 6625, column: 5, scope: !3436)
!3448 = !DILocation(line: 6625, column: 11, scope: !3436)
!3449 = !DILocation(line: 6625, column: 23, scope: !3436)
!3450 = !DILocation(line: 6626, column: 3, scope: !3436)
!3451 = !DILocation(line: 6631, column: 1, scope: !3436)
!3452 = distinct !DISubprogram(name: "HAL_I2C_Master_Seq_Transmit_DMA", scope: !1, file: !1, line: 3257, type: !9, scopeLine: 3259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3453 = !DILocation(line: 3261, column: 12, scope: !3452)
!3454 = !DILocation(line: 3267, column: 7, scope: !3452)
!3455 = !DILocation(line: 3267, column: 13, scope: !3452)
!3456 = !DILocation(line: 3267, column: 19, scope: !3452)
!3457 = !DILocation(line: 3270, column: 5, scope: !3452)
!3458 = !DILocation(line: 3272, column: 5, scope: !3452)
!3459 = !DILocation(line: 3272, column: 11, scope: !3452)
!3460 = !DILocation(line: 3272, column: 21, scope: !3452)
!3461 = !DILocation(line: 3273, column: 5, scope: !3452)
!3462 = !DILocation(line: 3273, column: 11, scope: !3452)
!3463 = !DILocation(line: 3273, column: 21, scope: !3452)
!3464 = !DILocation(line: 3274, column: 5, scope: !3452)
!3465 = !DILocation(line: 3274, column: 11, scope: !3452)
!3466 = !DILocation(line: 3274, column: 21, scope: !3452)
!3467 = !DILocation(line: 3277, column: 25, scope: !3452)
!3468 = !DILocation(line: 3277, column: 5, scope: !3452)
!3469 = !DILocation(line: 3277, column: 11, scope: !3452)
!3470 = !DILocation(line: 3277, column: 23, scope: !3452)
!3471 = !DILocation(line: 3278, column: 25, scope: !3452)
!3472 = !DILocation(line: 3278, column: 5, scope: !3452)
!3473 = !DILocation(line: 3278, column: 11, scope: !3452)
!3474 = !DILocation(line: 3278, column: 23, scope: !3452)
!3475 = !DILocation(line: 3279, column: 25, scope: !3452)
!3476 = !DILocation(line: 3279, column: 5, scope: !3452)
!3477 = !DILocation(line: 3279, column: 11, scope: !3452)
!3478 = !DILocation(line: 3279, column: 23, scope: !3452)
!3479 = !DILocation(line: 3280, column: 5, scope: !3452)
!3480 = !DILocation(line: 3280, column: 11, scope: !3452)
!3481 = !DILocation(line: 3280, column: 23, scope: !3452)
!3482 = !DILocation(line: 3283, column: 9, scope: !3452)
!3483 = !DILocation(line: 3283, column: 15, scope: !3452)
!3484 = !DILocation(line: 3283, column: 25, scope: !3452)
!3485 = !DILocation(line: 3285, column: 7, scope: !3452)
!3486 = !DILocation(line: 3285, column: 13, scope: !3452)
!3487 = !DILocation(line: 3285, column: 22, scope: !3452)
!3488 = !DILocation(line: 3286, column: 16, scope: !3452)
!3489 = !DILocation(line: 3287, column: 5, scope: !3452)
!3490 = !DILocation(line: 3290, column: 24, scope: !3452)
!3491 = !DILocation(line: 3290, column: 30, scope: !3452)
!3492 = !DILocation(line: 3290, column: 7, scope: !3452)
!3493 = !DILocation(line: 3290, column: 13, scope: !3452)
!3494 = !DILocation(line: 3290, column: 22, scope: !3452)
!3495 = !DILocation(line: 3291, column: 18, scope: !3452)
!3496 = !DILocation(line: 3291, column: 24, scope: !3452)
!3497 = !DILocation(line: 3291, column: 16, scope: !3452)
!3498 = !DILocation(line: 3296, column: 10, scope: !3452)
!3499 = !DILocation(line: 3296, column: 16, scope: !3452)
!3500 = !DILocation(line: 3296, column: 30, scope: !3452)
!3501 = !DILocation(line: 3296, column: 59, scope: !3452)
!3502 = !DILocation(line: 3296, column: 63, scope: !3452)
!3503 = !DILocation(line: 3296, column: 114, scope: !3452)
!3504 = !DILocation(line: 3296, column: 9, scope: !3452)
!3505 = !DILocation(line: 3298, column: 19, scope: !3452)
!3506 = !DILocation(line: 3299, column: 5, scope: !3452)
!3507 = !DILocation(line: 3303, column: 35, scope: !3452)
!3508 = !DILocation(line: 3303, column: 7, scope: !3452)
!3509 = !DILocation(line: 3306, column: 11, scope: !3452)
!3510 = !DILocation(line: 3306, column: 17, scope: !3452)
!3511 = !DILocation(line: 3306, column: 27, scope: !3452)
!3512 = !DILocation(line: 3308, column: 20, scope: !3452)
!3513 = !DILocation(line: 3308, column: 26, scope: !3452)
!3514 = !DILocation(line: 3308, column: 18, scope: !3452)
!3515 = !DILocation(line: 3309, column: 7, scope: !3452)
!3516 = !DILocation(line: 3312, column: 9, scope: !3452)
!3517 = !DILocation(line: 3312, column: 15, scope: !3452)
!3518 = !DILocation(line: 3312, column: 24, scope: !3452)
!3519 = !DILocation(line: 3314, column: 11, scope: !3452)
!3520 = !DILocation(line: 3314, column: 17, scope: !3452)
!3521 = !DILocation(line: 3314, column: 24, scope: !3452)
!3522 = !DILocation(line: 3317, column: 9, scope: !3452)
!3523 = !DILocation(line: 3317, column: 15, scope: !3452)
!3524 = !DILocation(line: 3317, column: 23, scope: !3452)
!3525 = !DILocation(line: 3317, column: 40, scope: !3452)
!3526 = !DILocation(line: 3320, column: 9, scope: !3452)
!3527 = !DILocation(line: 3320, column: 15, scope: !3452)
!3528 = !DILocation(line: 3320, column: 23, scope: !3452)
!3529 = !DILocation(line: 3320, column: 41, scope: !3452)
!3530 = !DILocation(line: 3323, column: 9, scope: !3452)
!3531 = !DILocation(line: 3323, column: 15, scope: !3452)
!3532 = !DILocation(line: 3323, column: 23, scope: !3452)
!3533 = !DILocation(line: 3323, column: 44, scope: !3452)
!3534 = !DILocation(line: 3324, column: 9, scope: !3452)
!3535 = !DILocation(line: 3324, column: 15, scope: !3452)
!3536 = !DILocation(line: 3324, column: 23, scope: !3452)
!3537 = !DILocation(line: 3324, column: 41, scope: !3452)
!3538 = !DILocation(line: 3327, column: 42, scope: !3452)
!3539 = !DILocation(line: 3327, column: 48, scope: !3452)
!3540 = !DILocation(line: 3327, column: 66, scope: !3452)
!3541 = !DILocation(line: 3327, column: 56, scope: !3452)
!3542 = !DILocation(line: 3327, column: 84, scope: !3452)
!3543 = !DILocation(line: 3327, column: 90, scope: !3452)
!3544 = !DILocation(line: 3327, column: 100, scope: !3452)
!3545 = !DILocation(line: 3327, column: 73, scope: !3452)
!3546 = !DILocation(line: 3327, column: 106, scope: !3452)
!3547 = !DILocation(line: 3327, column: 112, scope: !3452)
!3548 = !DILocation(line: 3327, column: 25, scope: !3452)
!3549 = !DILocation(line: 3327, column: 23, scope: !3452)
!3550 = !DILocation(line: 3328, column: 7, scope: !3452)
!3551 = !DILocation(line: 3332, column: 9, scope: !3452)
!3552 = !DILocation(line: 3332, column: 15, scope: !3452)
!3553 = !DILocation(line: 3332, column: 25, scope: !3452)
!3554 = !DILocation(line: 3333, column: 9, scope: !3452)
!3555 = !DILocation(line: 3333, column: 15, scope: !3452)
!3556 = !DILocation(line: 3333, column: 25, scope: !3452)
!3557 = !DILocation(line: 3336, column: 9, scope: !3452)
!3558 = !DILocation(line: 3336, column: 15, scope: !3452)
!3559 = !DILocation(line: 3336, column: 25, scope: !3452)
!3560 = !DILocation(line: 3339, column: 9, scope: !3452)
!3561 = !DILocation(line: 3341, column: 9, scope: !3452)
!3562 = !DILocation(line: 3344, column: 11, scope: !3452)
!3563 = !DILocation(line: 3344, column: 25, scope: !3452)
!3564 = !DILocation(line: 3347, column: 28, scope: !3452)
!3565 = !DILocation(line: 3347, column: 34, scope: !3452)
!3566 = !DILocation(line: 3347, column: 55, scope: !3452)
!3567 = !DILocation(line: 3347, column: 61, scope: !3452)
!3568 = !DILocation(line: 3347, column: 46, scope: !3452)
!3569 = !DILocation(line: 3347, column: 71, scope: !3452)
!3570 = !DILocation(line: 3347, column: 81, scope: !3452)
!3571 = !DILocation(line: 3347, column: 9, scope: !3452)
!3572 = !DILocation(line: 3350, column: 28, scope: !3452)
!3573 = !DILocation(line: 3350, column: 34, scope: !3452)
!3574 = !DILocation(line: 3350, column: 9, scope: !3452)
!3575 = !DILocation(line: 3350, column: 15, scope: !3452)
!3576 = !DILocation(line: 3350, column: 25, scope: !3452)
!3577 = !DILocation(line: 3353, column: 9, scope: !3452)
!3578 = !DILocation(line: 3359, column: 24, scope: !3452)
!3579 = !DILocation(line: 3359, column: 9, scope: !3452)
!3580 = !DILocation(line: 3362, column: 9, scope: !3452)
!3581 = !DILocation(line: 3362, column: 15, scope: !3452)
!3582 = !DILocation(line: 3362, column: 25, scope: !3452)
!3583 = !DILocation(line: 3362, column: 29, scope: !3452)
!3584 = !DILocation(line: 3363, column: 7, scope: !3452)
!3585 = !DILocation(line: 3367, column: 9, scope: !3452)
!3586 = !DILocation(line: 3367, column: 15, scope: !3452)
!3587 = !DILocation(line: 3367, column: 25, scope: !3452)
!3588 = !DILocation(line: 3368, column: 9, scope: !3452)
!3589 = !DILocation(line: 3368, column: 15, scope: !3452)
!3590 = !DILocation(line: 3368, column: 25, scope: !3452)
!3591 = !DILocation(line: 3371, column: 9, scope: !3452)
!3592 = !DILocation(line: 3371, column: 15, scope: !3452)
!3593 = !DILocation(line: 3371, column: 25, scope: !3452)
!3594 = !DILocation(line: 3374, column: 9, scope: !3452)
!3595 = !DILocation(line: 3376, column: 9, scope: !3452)
!3596 = !DILocation(line: 3378, column: 5, scope: !3452)
!3597 = !DILocation(line: 3382, column: 7, scope: !3452)
!3598 = !DILocation(line: 3382, column: 13, scope: !3452)
!3599 = !DILocation(line: 3382, column: 21, scope: !3452)
!3600 = !DILocation(line: 3386, column: 26, scope: !3452)
!3601 = !DILocation(line: 3386, column: 32, scope: !3452)
!3602 = !DILocation(line: 3386, column: 53, scope: !3452)
!3603 = !DILocation(line: 3386, column: 59, scope: !3452)
!3604 = !DILocation(line: 3386, column: 44, scope: !3452)
!3605 = !DILocation(line: 3386, column: 7, scope: !3452)
!3606 = !DILocation(line: 3389, column: 7, scope: !3452)
!3607 = !DILocation(line: 3397, column: 22, scope: !3452)
!3608 = !DILocation(line: 3397, column: 7, scope: !3452)
!3609 = !DILocation(line: 3400, column: 5, scope: !3452)
!3610 = !DILocation(line: 3404, column: 5, scope: !3452)
!3611 = !DILocation(line: 3406, column: 1, scope: !3452)
!3612 = distinct !DISubprogram(name: "HAL_I2C_Master_Seq_Receive_IT", scope: !1, file: !1, line: 3420, type: !9, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3613 = !DILocation(line: 3424, column: 12, scope: !3612)
!3614 = !DILocation(line: 3429, column: 7, scope: !3612)
!3615 = !DILocation(line: 3429, column: 13, scope: !3612)
!3616 = !DILocation(line: 3429, column: 19, scope: !3612)
!3617 = !DILocation(line: 3432, column: 5, scope: !3612)
!3618 = !DILocation(line: 3434, column: 5, scope: !3612)
!3619 = !DILocation(line: 3434, column: 11, scope: !3612)
!3620 = !DILocation(line: 3434, column: 21, scope: !3612)
!3621 = !DILocation(line: 3435, column: 5, scope: !3612)
!3622 = !DILocation(line: 3435, column: 11, scope: !3612)
!3623 = !DILocation(line: 3435, column: 21, scope: !3612)
!3624 = !DILocation(line: 3436, column: 5, scope: !3612)
!3625 = !DILocation(line: 3436, column: 11, scope: !3612)
!3626 = !DILocation(line: 3436, column: 21, scope: !3612)
!3627 = !DILocation(line: 3439, column: 25, scope: !3612)
!3628 = !DILocation(line: 3439, column: 5, scope: !3612)
!3629 = !DILocation(line: 3439, column: 11, scope: !3612)
!3630 = !DILocation(line: 3439, column: 23, scope: !3612)
!3631 = !DILocation(line: 3440, column: 25, scope: !3612)
!3632 = !DILocation(line: 3440, column: 5, scope: !3612)
!3633 = !DILocation(line: 3440, column: 11, scope: !3612)
!3634 = !DILocation(line: 3440, column: 23, scope: !3612)
!3635 = !DILocation(line: 3441, column: 25, scope: !3612)
!3636 = !DILocation(line: 3441, column: 5, scope: !3612)
!3637 = !DILocation(line: 3441, column: 11, scope: !3612)
!3638 = !DILocation(line: 3441, column: 23, scope: !3612)
!3639 = !DILocation(line: 3442, column: 5, scope: !3612)
!3640 = !DILocation(line: 3442, column: 11, scope: !3612)
!3641 = !DILocation(line: 3442, column: 23, scope: !3612)
!3642 = !DILocation(line: 3445, column: 9, scope: !3612)
!3643 = !DILocation(line: 3445, column: 15, scope: !3612)
!3644 = !DILocation(line: 3445, column: 25, scope: !3612)
!3645 = !DILocation(line: 3447, column: 7, scope: !3612)
!3646 = !DILocation(line: 3447, column: 13, scope: !3612)
!3647 = !DILocation(line: 3447, column: 22, scope: !3612)
!3648 = !DILocation(line: 3448, column: 16, scope: !3612)
!3649 = !DILocation(line: 3449, column: 5, scope: !3612)
!3650 = !DILocation(line: 3452, column: 24, scope: !3612)
!3651 = !DILocation(line: 3452, column: 30, scope: !3612)
!3652 = !DILocation(line: 3452, column: 7, scope: !3612)
!3653 = !DILocation(line: 3452, column: 13, scope: !3612)
!3654 = !DILocation(line: 3452, column: 22, scope: !3612)
!3655 = !DILocation(line: 3453, column: 18, scope: !3612)
!3656 = !DILocation(line: 3453, column: 24, scope: !3612)
!3657 = !DILocation(line: 3453, column: 16, scope: !3612)
!3658 = !DILocation(line: 3458, column: 10, scope: !3612)
!3659 = !DILocation(line: 3458, column: 16, scope: !3612)
!3660 = !DILocation(line: 3458, column: 30, scope: !3612)
!3661 = !DILocation(line: 3458, column: 59, scope: !3612)
!3662 = !DILocation(line: 3458, column: 63, scope: !3612)
!3663 = !DILocation(line: 3458, column: 114, scope: !3612)
!3664 = !DILocation(line: 3458, column: 9, scope: !3612)
!3665 = !DILocation(line: 3460, column: 19, scope: !3612)
!3666 = !DILocation(line: 3461, column: 5, scope: !3612)
!3667 = !DILocation(line: 3465, column: 35, scope: !3612)
!3668 = !DILocation(line: 3465, column: 7, scope: !3612)
!3669 = !DILocation(line: 3468, column: 11, scope: !3612)
!3670 = !DILocation(line: 3468, column: 17, scope: !3612)
!3671 = !DILocation(line: 3468, column: 27, scope: !3612)
!3672 = !DILocation(line: 3470, column: 20, scope: !3612)
!3673 = !DILocation(line: 3470, column: 26, scope: !3612)
!3674 = !DILocation(line: 3470, column: 18, scope: !3612)
!3675 = !DILocation(line: 3471, column: 7, scope: !3612)
!3676 = !DILocation(line: 3475, column: 24, scope: !3612)
!3677 = !DILocation(line: 3475, column: 30, scope: !3612)
!3678 = !DILocation(line: 3475, column: 51, scope: !3612)
!3679 = !DILocation(line: 3475, column: 57, scope: !3612)
!3680 = !DILocation(line: 3475, column: 42, scope: !3612)
!3681 = !DILocation(line: 3475, column: 67, scope: !3612)
!3682 = !DILocation(line: 3475, column: 77, scope: !3612)
!3683 = !DILocation(line: 3475, column: 5, scope: !3612)
!3684 = !DILocation(line: 3478, column: 5, scope: !3612)
!3685 = !DILocation(line: 3483, column: 20, scope: !3612)
!3686 = !DILocation(line: 3483, column: 5, scope: !3612)
!3687 = !DILocation(line: 3485, column: 5, scope: !3612)
!3688 = !DILocation(line: 3489, column: 5, scope: !3612)
!3689 = !DILocation(line: 3491, column: 1, scope: !3612)
!3690 = distinct !DISubprogram(name: "HAL_I2C_Master_Seq_Receive_DMA", scope: !1, file: !1, line: 3505, type: !9, scopeLine: 3507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3691 = !DILocation(line: 3509, column: 12, scope: !3690)
!3692 = !DILocation(line: 3515, column: 7, scope: !3690)
!3693 = !DILocation(line: 3515, column: 13, scope: !3690)
!3694 = !DILocation(line: 3515, column: 19, scope: !3690)
!3695 = !DILocation(line: 3518, column: 5, scope: !3690)
!3696 = !DILocation(line: 3520, column: 5, scope: !3690)
!3697 = !DILocation(line: 3520, column: 11, scope: !3690)
!3698 = !DILocation(line: 3520, column: 21, scope: !3690)
!3699 = !DILocation(line: 3521, column: 5, scope: !3690)
!3700 = !DILocation(line: 3521, column: 11, scope: !3690)
!3701 = !DILocation(line: 3521, column: 21, scope: !3690)
!3702 = !DILocation(line: 3522, column: 5, scope: !3690)
!3703 = !DILocation(line: 3522, column: 11, scope: !3690)
!3704 = !DILocation(line: 3522, column: 21, scope: !3690)
!3705 = !DILocation(line: 3525, column: 25, scope: !3690)
!3706 = !DILocation(line: 3525, column: 5, scope: !3690)
!3707 = !DILocation(line: 3525, column: 11, scope: !3690)
!3708 = !DILocation(line: 3525, column: 23, scope: !3690)
!3709 = !DILocation(line: 3526, column: 25, scope: !3690)
!3710 = !DILocation(line: 3526, column: 5, scope: !3690)
!3711 = !DILocation(line: 3526, column: 11, scope: !3690)
!3712 = !DILocation(line: 3526, column: 23, scope: !3690)
!3713 = !DILocation(line: 3527, column: 25, scope: !3690)
!3714 = !DILocation(line: 3527, column: 5, scope: !3690)
!3715 = !DILocation(line: 3527, column: 11, scope: !3690)
!3716 = !DILocation(line: 3527, column: 23, scope: !3690)
!3717 = !DILocation(line: 3528, column: 5, scope: !3690)
!3718 = !DILocation(line: 3528, column: 11, scope: !3690)
!3719 = !DILocation(line: 3528, column: 23, scope: !3690)
!3720 = !DILocation(line: 3531, column: 9, scope: !3690)
!3721 = !DILocation(line: 3531, column: 15, scope: !3690)
!3722 = !DILocation(line: 3531, column: 25, scope: !3690)
!3723 = !DILocation(line: 3533, column: 7, scope: !3690)
!3724 = !DILocation(line: 3533, column: 13, scope: !3690)
!3725 = !DILocation(line: 3533, column: 22, scope: !3690)
!3726 = !DILocation(line: 3534, column: 16, scope: !3690)
!3727 = !DILocation(line: 3535, column: 5, scope: !3690)
!3728 = !DILocation(line: 3538, column: 24, scope: !3690)
!3729 = !DILocation(line: 3538, column: 30, scope: !3690)
!3730 = !DILocation(line: 3538, column: 7, scope: !3690)
!3731 = !DILocation(line: 3538, column: 13, scope: !3690)
!3732 = !DILocation(line: 3538, column: 22, scope: !3690)
!3733 = !DILocation(line: 3539, column: 18, scope: !3690)
!3734 = !DILocation(line: 3539, column: 24, scope: !3690)
!3735 = !DILocation(line: 3539, column: 16, scope: !3690)
!3736 = !DILocation(line: 3544, column: 10, scope: !3690)
!3737 = !DILocation(line: 3544, column: 16, scope: !3690)
!3738 = !DILocation(line: 3544, column: 30, scope: !3690)
!3739 = !DILocation(line: 3544, column: 59, scope: !3690)
!3740 = !DILocation(line: 3544, column: 63, scope: !3690)
!3741 = !DILocation(line: 3544, column: 114, scope: !3690)
!3742 = !DILocation(line: 3544, column: 9, scope: !3690)
!3743 = !DILocation(line: 3546, column: 19, scope: !3690)
!3744 = !DILocation(line: 3547, column: 5, scope: !3690)
!3745 = !DILocation(line: 3551, column: 35, scope: !3690)
!3746 = !DILocation(line: 3551, column: 7, scope: !3690)
!3747 = !DILocation(line: 3554, column: 11, scope: !3690)
!3748 = !DILocation(line: 3554, column: 17, scope: !3690)
!3749 = !DILocation(line: 3554, column: 27, scope: !3690)
!3750 = !DILocation(line: 3556, column: 20, scope: !3690)
!3751 = !DILocation(line: 3556, column: 26, scope: !3690)
!3752 = !DILocation(line: 3556, column: 18, scope: !3690)
!3753 = !DILocation(line: 3557, column: 7, scope: !3690)
!3754 = !DILocation(line: 3560, column: 9, scope: !3690)
!3755 = !DILocation(line: 3560, column: 15, scope: !3690)
!3756 = !DILocation(line: 3560, column: 24, scope: !3690)
!3757 = !DILocation(line: 3562, column: 11, scope: !3690)
!3758 = !DILocation(line: 3562, column: 17, scope: !3690)
!3759 = !DILocation(line: 3562, column: 24, scope: !3690)
!3760 = !DILocation(line: 3565, column: 9, scope: !3690)
!3761 = !DILocation(line: 3565, column: 15, scope: !3690)
!3762 = !DILocation(line: 3565, column: 23, scope: !3690)
!3763 = !DILocation(line: 3565, column: 40, scope: !3690)
!3764 = !DILocation(line: 3568, column: 9, scope: !3690)
!3765 = !DILocation(line: 3568, column: 15, scope: !3690)
!3766 = !DILocation(line: 3568, column: 23, scope: !3690)
!3767 = !DILocation(line: 3568, column: 41, scope: !3690)
!3768 = !DILocation(line: 3571, column: 9, scope: !3690)
!3769 = !DILocation(line: 3571, column: 15, scope: !3690)
!3770 = !DILocation(line: 3571, column: 23, scope: !3690)
!3771 = !DILocation(line: 3571, column: 44, scope: !3690)
!3772 = !DILocation(line: 3572, column: 9, scope: !3690)
!3773 = !DILocation(line: 3572, column: 15, scope: !3690)
!3774 = !DILocation(line: 3572, column: 23, scope: !3690)
!3775 = !DILocation(line: 3572, column: 41, scope: !3690)
!3776 = !DILocation(line: 3575, column: 42, scope: !3690)
!3777 = !DILocation(line: 3575, column: 48, scope: !3690)
!3778 = !DILocation(line: 3575, column: 67, scope: !3690)
!3779 = !DILocation(line: 3575, column: 73, scope: !3690)
!3780 = !DILocation(line: 3575, column: 83, scope: !3690)
!3781 = !DILocation(line: 3575, column: 56, scope: !3690)
!3782 = !DILocation(line: 3575, column: 99, scope: !3690)
!3783 = !DILocation(line: 3575, column: 89, scope: !3690)
!3784 = !DILocation(line: 3575, column: 106, scope: !3690)
!3785 = !DILocation(line: 3575, column: 112, scope: !3690)
!3786 = !DILocation(line: 3575, column: 25, scope: !3690)
!3787 = !DILocation(line: 3575, column: 23, scope: !3690)
!3788 = !DILocation(line: 3576, column: 7, scope: !3690)
!3789 = !DILocation(line: 3580, column: 9, scope: !3690)
!3790 = !DILocation(line: 3580, column: 15, scope: !3690)
!3791 = !DILocation(line: 3580, column: 25, scope: !3690)
!3792 = !DILocation(line: 3581, column: 9, scope: !3690)
!3793 = !DILocation(line: 3581, column: 15, scope: !3690)
!3794 = !DILocation(line: 3581, column: 25, scope: !3690)
!3795 = !DILocation(line: 3584, column: 9, scope: !3690)
!3796 = !DILocation(line: 3584, column: 15, scope: !3690)
!3797 = !DILocation(line: 3584, column: 25, scope: !3690)
!3798 = !DILocation(line: 3587, column: 9, scope: !3690)
!3799 = !DILocation(line: 3589, column: 9, scope: !3690)
!3800 = !DILocation(line: 3592, column: 11, scope: !3690)
!3801 = !DILocation(line: 3592, column: 25, scope: !3690)
!3802 = !DILocation(line: 3595, column: 28, scope: !3690)
!3803 = !DILocation(line: 3595, column: 34, scope: !3690)
!3804 = !DILocation(line: 3595, column: 55, scope: !3690)
!3805 = !DILocation(line: 3595, column: 61, scope: !3690)
!3806 = !DILocation(line: 3595, column: 46, scope: !3690)
!3807 = !DILocation(line: 3595, column: 71, scope: !3690)
!3808 = !DILocation(line: 3595, column: 81, scope: !3690)
!3809 = !DILocation(line: 3595, column: 9, scope: !3690)
!3810 = !DILocation(line: 3598, column: 28, scope: !3690)
!3811 = !DILocation(line: 3598, column: 34, scope: !3690)
!3812 = !DILocation(line: 3598, column: 9, scope: !3690)
!3813 = !DILocation(line: 3598, column: 15, scope: !3690)
!3814 = !DILocation(line: 3598, column: 25, scope: !3690)
!3815 = !DILocation(line: 3601, column: 9, scope: !3690)
!3816 = !DILocation(line: 3607, column: 24, scope: !3690)
!3817 = !DILocation(line: 3607, column: 9, scope: !3690)
!3818 = !DILocation(line: 3610, column: 9, scope: !3690)
!3819 = !DILocation(line: 3610, column: 15, scope: !3690)
!3820 = !DILocation(line: 3610, column: 25, scope: !3690)
!3821 = !DILocation(line: 3610, column: 29, scope: !3690)
!3822 = !DILocation(line: 3611, column: 7, scope: !3690)
!3823 = !DILocation(line: 3615, column: 9, scope: !3690)
!3824 = !DILocation(line: 3615, column: 15, scope: !3690)
!3825 = !DILocation(line: 3615, column: 25, scope: !3690)
!3826 = !DILocation(line: 3616, column: 9, scope: !3690)
!3827 = !DILocation(line: 3616, column: 15, scope: !3690)
!3828 = !DILocation(line: 3616, column: 25, scope: !3690)
!3829 = !DILocation(line: 3619, column: 9, scope: !3690)
!3830 = !DILocation(line: 3619, column: 15, scope: !3690)
!3831 = !DILocation(line: 3619, column: 25, scope: !3690)
!3832 = !DILocation(line: 3622, column: 9, scope: !3690)
!3833 = !DILocation(line: 3624, column: 9, scope: !3690)
!3834 = !DILocation(line: 3626, column: 5, scope: !3690)
!3835 = !DILocation(line: 3630, column: 7, scope: !3690)
!3836 = !DILocation(line: 3630, column: 13, scope: !3690)
!3837 = !DILocation(line: 3630, column: 21, scope: !3690)
!3838 = !DILocation(line: 3634, column: 26, scope: !3690)
!3839 = !DILocation(line: 3634, column: 32, scope: !3690)
!3840 = !DILocation(line: 3634, column: 53, scope: !3690)
!3841 = !DILocation(line: 3634, column: 59, scope: !3690)
!3842 = !DILocation(line: 3634, column: 44, scope: !3690)
!3843 = !DILocation(line: 3634, column: 7, scope: !3690)
!3844 = !DILocation(line: 3637, column: 7, scope: !3690)
!3845 = !DILocation(line: 3645, column: 22, scope: !3690)
!3846 = !DILocation(line: 3645, column: 7, scope: !3690)
!3847 = !DILocation(line: 3648, column: 5, scope: !3690)
!3848 = !DILocation(line: 3652, column: 5, scope: !3690)
!3849 = !DILocation(line: 3654, column: 1, scope: !3690)
!3850 = distinct !DISubprogram(name: "HAL_I2C_Slave_Seq_Transmit_IT", scope: !1, file: !1, line: 3666, type: !9, scopeLine: 3668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3851 = !DILocation(line: 3672, column: 18, scope: !3850)
!3852 = !DILocation(line: 3672, column: 24, scope: !3850)
!3853 = !DILocation(line: 3672, column: 8, scope: !3850)
!3854 = !DILocation(line: 3672, column: 30, scope: !3850)
!3855 = !DILocation(line: 3672, column: 64, scope: !3850)
!3856 = !DILocation(line: 3672, column: 7, scope: !3850)
!3857 = !DILocation(line: 3674, column: 10, scope: !3850)
!3858 = !DILocation(line: 3674, column: 16, scope: !3850)
!3859 = !DILocation(line: 3674, column: 25, scope: !3850)
!3860 = !DILocation(line: 3674, column: 29, scope: !3850)
!3861 = !DILocation(line: 3674, column: 34, scope: !3850)
!3862 = !DILocation(line: 3674, column: 9, scope: !3850)
!3863 = !DILocation(line: 3676, column: 7, scope: !3850)
!3864 = !DILocation(line: 3676, column: 13, scope: !3850)
!3865 = !DILocation(line: 3676, column: 23, scope: !3850)
!3866 = !DILocation(line: 3677, column: 7, scope: !3850)
!3867 = !DILocation(line: 3681, column: 21, scope: !3850)
!3868 = !DILocation(line: 3681, column: 5, scope: !3850)
!3869 = !DILocation(line: 3684, column: 5, scope: !3850)
!3870 = !DILocation(line: 3688, column: 9, scope: !3850)
!3871 = !DILocation(line: 3688, column: 15, scope: !3850)
!3872 = !DILocation(line: 3688, column: 21, scope: !3850)
!3873 = !DILocation(line: 3691, column: 23, scope: !3850)
!3874 = !DILocation(line: 3691, column: 7, scope: !3850)
!3875 = !DILocation(line: 3694, column: 12, scope: !3850)
!3876 = !DILocation(line: 3694, column: 18, scope: !3850)
!3877 = !DILocation(line: 3694, column: 28, scope: !3850)
!3878 = !DILocation(line: 3694, column: 32, scope: !3850)
!3879 = !DILocation(line: 3694, column: 51, scope: !3850)
!3880 = !DILocation(line: 3694, column: 11, scope: !3850)
!3881 = !DILocation(line: 3696, column: 9, scope: !3850)
!3882 = !DILocation(line: 3696, column: 15, scope: !3850)
!3883 = !DILocation(line: 3696, column: 25, scope: !3850)
!3884 = !DILocation(line: 3696, column: 29, scope: !3850)
!3885 = !DILocation(line: 3698, column: 13, scope: !3850)
!3886 = !DILocation(line: 3698, column: 19, scope: !3850)
!3887 = !DILocation(line: 3698, column: 26, scope: !3850)
!3888 = !DILocation(line: 3702, column: 11, scope: !3850)
!3889 = !DILocation(line: 3702, column: 17, scope: !3850)
!3890 = !DILocation(line: 3702, column: 25, scope: !3850)
!3891 = !DILocation(line: 3702, column: 43, scope: !3850)
!3892 = !DILocation(line: 3705, column: 32, scope: !3850)
!3893 = !DILocation(line: 3705, column: 38, scope: !3850)
!3894 = !DILocation(line: 3705, column: 15, scope: !3850)
!3895 = !DILocation(line: 3705, column: 46, scope: !3850)
!3896 = !DILocation(line: 3708, column: 13, scope: !3850)
!3897 = !DILocation(line: 3708, column: 19, scope: !3850)
!3898 = !DILocation(line: 3708, column: 27, scope: !3850)
!3899 = !DILocation(line: 3708, column: 45, scope: !3850)
!3900 = !DILocation(line: 3708, column: 51, scope: !3850)
!3901 = !DILocation(line: 3709, column: 11, scope: !3850)
!3902 = !DILocation(line: 3710, column: 9, scope: !3850)
!3903 = !DILocation(line: 3711, column: 7, scope: !3850)
!3904 = !DILocation(line: 3712, column: 5, scope: !3850)
!3905 = !DILocation(line: 3714, column: 5, scope: !3850)
!3906 = !DILocation(line: 3714, column: 11, scope: !3850)
!3907 = !DILocation(line: 3714, column: 21, scope: !3850)
!3908 = !DILocation(line: 3715, column: 5, scope: !3850)
!3909 = !DILocation(line: 3715, column: 11, scope: !3850)
!3910 = !DILocation(line: 3715, column: 21, scope: !3850)
!3911 = !DILocation(line: 3716, column: 5, scope: !3850)
!3912 = !DILocation(line: 3716, column: 11, scope: !3850)
!3913 = !DILocation(line: 3716, column: 21, scope: !3850)
!3914 = !DILocation(line: 3719, column: 5, scope: !3850)
!3915 = !DILocation(line: 3719, column: 11, scope: !3850)
!3916 = !DILocation(line: 3719, column: 21, scope: !3850)
!3917 = !DILocation(line: 3719, column: 25, scope: !3850)
!3918 = !DILocation(line: 3722, column: 25, scope: !3850)
!3919 = !DILocation(line: 3722, column: 5, scope: !3850)
!3920 = !DILocation(line: 3722, column: 11, scope: !3850)
!3921 = !DILocation(line: 3722, column: 23, scope: !3850)
!3922 = !DILocation(line: 3723, column: 25, scope: !3850)
!3923 = !DILocation(line: 3723, column: 5, scope: !3850)
!3924 = !DILocation(line: 3723, column: 11, scope: !3850)
!3925 = !DILocation(line: 3723, column: 23, scope: !3850)
!3926 = !DILocation(line: 3724, column: 25, scope: !3850)
!3927 = !DILocation(line: 3724, column: 31, scope: !3850)
!3928 = !DILocation(line: 3724, column: 5, scope: !3850)
!3929 = !DILocation(line: 3724, column: 11, scope: !3850)
!3930 = !DILocation(line: 3724, column: 23, scope: !3850)
!3931 = !DILocation(line: 3725, column: 25, scope: !3850)
!3932 = !DILocation(line: 3725, column: 5, scope: !3850)
!3933 = !DILocation(line: 3725, column: 11, scope: !3850)
!3934 = !DILocation(line: 3725, column: 23, scope: !3850)
!3935 = !DILocation(line: 3726, column: 5, scope: !3850)
!3936 = !DILocation(line: 3726, column: 11, scope: !3850)
!3937 = !DILocation(line: 3726, column: 23, scope: !3850)
!3938 = !DILocation(line: 3728, column: 9, scope: !3850)
!3939 = !DILocation(line: 3728, column: 27, scope: !3850)
!3940 = !DILocation(line: 3732, column: 7, scope: !3850)
!3941 = !DILocation(line: 3733, column: 5, scope: !3850)
!3942 = !DILocation(line: 3736, column: 5, scope: !3850)
!3943 = !DILocation(line: 3742, column: 20, scope: !3850)
!3944 = !DILocation(line: 3742, column: 5, scope: !3850)
!3945 = !DILocation(line: 3744, column: 5, scope: !3850)
!3946 = !DILocation(line: 3748, column: 5, scope: !3850)
!3947 = !DILocation(line: 3750, column: 1, scope: !3850)
!3948 = distinct !DISubprogram(name: "I2C_Disable_IRQ", scope: !1, file: !1, line: 6547, type: !9, scopeLine: 6548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3949 = !DILocation(line: 6549, column: 12, scope: !3948)
!3950 = !DILocation(line: 6551, column: 8, scope: !3948)
!3951 = !DILocation(line: 6551, column: 25, scope: !3948)
!3952 = !DILocation(line: 6551, column: 43, scope: !3948)
!3953 = !DILocation(line: 6551, column: 7, scope: !3948)
!3954 = !DILocation(line: 6554, column: 12, scope: !3948)
!3955 = !DILocation(line: 6556, column: 20, scope: !3948)
!3956 = !DILocation(line: 6556, column: 26, scope: !3948)
!3957 = !DILocation(line: 6556, column: 10, scope: !3948)
!3958 = !DILocation(line: 6556, column: 32, scope: !3948)
!3959 = !DILocation(line: 6556, column: 66, scope: !3948)
!3960 = !DILocation(line: 6556, column: 9, scope: !3948)
!3961 = !DILocation(line: 6559, column: 14, scope: !3948)
!3962 = !DILocation(line: 6560, column: 5, scope: !3948)
!3963 = !DILocation(line: 6561, column: 3, scope: !3948)
!3964 = !DILocation(line: 6563, column: 8, scope: !3948)
!3965 = !DILocation(line: 6563, column: 25, scope: !3948)
!3966 = !DILocation(line: 6563, column: 43, scope: !3948)
!3967 = !DILocation(line: 6563, column: 7, scope: !3948)
!3968 = !DILocation(line: 6566, column: 12, scope: !3948)
!3969 = !DILocation(line: 6568, column: 20, scope: !3948)
!3970 = !DILocation(line: 6568, column: 26, scope: !3948)
!3971 = !DILocation(line: 6568, column: 10, scope: !3948)
!3972 = !DILocation(line: 6568, column: 32, scope: !3948)
!3973 = !DILocation(line: 6568, column: 66, scope: !3948)
!3974 = !DILocation(line: 6568, column: 9, scope: !3948)
!3975 = !DILocation(line: 6571, column: 14, scope: !3948)
!3976 = !DILocation(line: 6572, column: 5, scope: !3948)
!3977 = !DILocation(line: 6573, column: 3, scope: !3948)
!3978 = !DILocation(line: 6575, column: 8, scope: !3948)
!3979 = !DILocation(line: 6575, column: 25, scope: !3948)
!3980 = !DILocation(line: 6575, column: 47, scope: !3948)
!3981 = !DILocation(line: 6575, column: 7, scope: !3948)
!3982 = !DILocation(line: 6578, column: 12, scope: !3948)
!3983 = !DILocation(line: 6579, column: 3, scope: !3948)
!3984 = !DILocation(line: 6581, column: 7, scope: !3948)
!3985 = !DILocation(line: 6581, column: 24, scope: !3948)
!3986 = !DILocation(line: 6584, column: 12, scope: !3948)
!3987 = !DILocation(line: 6585, column: 3, scope: !3948)
!3988 = !DILocation(line: 6587, column: 7, scope: !3948)
!3989 = !DILocation(line: 6587, column: 24, scope: !3948)
!3990 = !DILocation(line: 6590, column: 12, scope: !3948)
!3991 = !DILocation(line: 6591, column: 3, scope: !3948)
!3992 = !DILocation(line: 6593, column: 7, scope: !3948)
!3993 = !DILocation(line: 6593, column: 24, scope: !3948)
!3994 = !DILocation(line: 6596, column: 12, scope: !3948)
!3995 = !DILocation(line: 6597, column: 3, scope: !3948)
!3996 = !DILocation(line: 6602, column: 3, scope: !3948)
!3997 = !DILocation(line: 6603, column: 1, scope: !3948)
!3998 = distinct !DISubprogram(name: "I2C_DMAAbort", scope: !1, file: !1, line: 6193, type: !9, scopeLine: 6194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!3999 = !DILocation(line: 6195, column: 73, scope: !3998)
!4000 = !DILocation(line: 6195, column: 80, scope: !3998)
!4001 = !DILocation(line: 6195, column: 29, scope: !3998)
!4002 = !DILocation(line: 6195, column: 22, scope: !3998)
!4003 = !DILocation(line: 6198, column: 7, scope: !3998)
!4004 = !DILocation(line: 6198, column: 13, scope: !3998)
!4005 = !DILocation(line: 6198, column: 20, scope: !3998)
!4006 = !DILocation(line: 6200, column: 5, scope: !3998)
!4007 = !DILocation(line: 6200, column: 11, scope: !3998)
!4008 = !DILocation(line: 6200, column: 19, scope: !3998)
!4009 = !DILocation(line: 6200, column: 37, scope: !3998)
!4010 = !DILocation(line: 6201, column: 3, scope: !3998)
!4011 = !DILocation(line: 6202, column: 7, scope: !3998)
!4012 = !DILocation(line: 6202, column: 13, scope: !3998)
!4013 = !DILocation(line: 6202, column: 20, scope: !3998)
!4014 = !DILocation(line: 6204, column: 5, scope: !3998)
!4015 = !DILocation(line: 6204, column: 11, scope: !3998)
!4016 = !DILocation(line: 6204, column: 19, scope: !3998)
!4017 = !DILocation(line: 6204, column: 37, scope: !3998)
!4018 = !DILocation(line: 6205, column: 3, scope: !3998)
!4019 = !DILocation(line: 6207, column: 26, scope: !3998)
!4020 = !DILocation(line: 6207, column: 3, scope: !3998)
!4021 = !DILocation(line: 6208, column: 1, scope: !3998)
!4022 = distinct !DISubprogram(name: "HAL_I2C_Slave_Seq_Transmit_DMA", scope: !1, file: !1, line: 3762, type: !9, scopeLine: 3764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4023 = !DILocation(line: 3770, column: 18, scope: !4022)
!4024 = !DILocation(line: 3770, column: 24, scope: !4022)
!4025 = !DILocation(line: 3770, column: 8, scope: !4022)
!4026 = !DILocation(line: 3770, column: 30, scope: !4022)
!4027 = !DILocation(line: 3770, column: 64, scope: !4022)
!4028 = !DILocation(line: 3770, column: 7, scope: !4022)
!4029 = !DILocation(line: 3772, column: 10, scope: !4022)
!4030 = !DILocation(line: 3772, column: 16, scope: !4022)
!4031 = !DILocation(line: 3772, column: 25, scope: !4022)
!4032 = !DILocation(line: 3772, column: 29, scope: !4022)
!4033 = !DILocation(line: 3772, column: 34, scope: !4022)
!4034 = !DILocation(line: 3772, column: 9, scope: !4022)
!4035 = !DILocation(line: 3774, column: 7, scope: !4022)
!4036 = !DILocation(line: 3774, column: 13, scope: !4022)
!4037 = !DILocation(line: 3774, column: 23, scope: !4022)
!4038 = !DILocation(line: 3775, column: 7, scope: !4022)
!4039 = !DILocation(line: 3779, column: 5, scope: !4022)
!4040 = !DILocation(line: 3782, column: 21, scope: !4022)
!4041 = !DILocation(line: 3782, column: 5, scope: !4022)
!4042 = !DILocation(line: 3786, column: 9, scope: !4022)
!4043 = !DILocation(line: 3786, column: 15, scope: !4022)
!4044 = !DILocation(line: 3786, column: 21, scope: !4022)
!4045 = !DILocation(line: 3789, column: 23, scope: !4022)
!4046 = !DILocation(line: 3789, column: 7, scope: !4022)
!4047 = !DILocation(line: 3791, column: 12, scope: !4022)
!4048 = !DILocation(line: 3791, column: 18, scope: !4022)
!4049 = !DILocation(line: 3791, column: 28, scope: !4022)
!4050 = !DILocation(line: 3791, column: 32, scope: !4022)
!4051 = !DILocation(line: 3791, column: 51, scope: !4022)
!4052 = !DILocation(line: 3791, column: 11, scope: !4022)
!4053 = !DILocation(line: 3794, column: 13, scope: !4022)
!4054 = !DILocation(line: 3794, column: 19, scope: !4022)
!4055 = !DILocation(line: 3794, column: 26, scope: !4022)
!4056 = !DILocation(line: 3796, column: 11, scope: !4022)
!4057 = !DILocation(line: 3796, column: 17, scope: !4022)
!4058 = !DILocation(line: 3796, column: 27, scope: !4022)
!4059 = !DILocation(line: 3796, column: 31, scope: !4022)
!4060 = !DILocation(line: 3800, column: 11, scope: !4022)
!4061 = !DILocation(line: 3800, column: 17, scope: !4022)
!4062 = !DILocation(line: 3800, column: 25, scope: !4022)
!4063 = !DILocation(line: 3800, column: 43, scope: !4022)
!4064 = !DILocation(line: 3803, column: 32, scope: !4022)
!4065 = !DILocation(line: 3803, column: 38, scope: !4022)
!4066 = !DILocation(line: 3803, column: 15, scope: !4022)
!4067 = !DILocation(line: 3803, column: 46, scope: !4022)
!4068 = !DILocation(line: 3806, column: 13, scope: !4022)
!4069 = !DILocation(line: 3806, column: 19, scope: !4022)
!4070 = !DILocation(line: 3806, column: 27, scope: !4022)
!4071 = !DILocation(line: 3806, column: 45, scope: !4022)
!4072 = !DILocation(line: 3806, column: 51, scope: !4022)
!4073 = !DILocation(line: 3807, column: 11, scope: !4022)
!4074 = !DILocation(line: 3808, column: 9, scope: !4022)
!4075 = !DILocation(line: 3809, column: 7, scope: !4022)
!4076 = !DILocation(line: 3810, column: 5, scope: !4022)
!4077 = !DILocation(line: 3811, column: 14, scope: !4022)
!4078 = !DILocation(line: 3811, column: 20, scope: !4022)
!4079 = !DILocation(line: 3811, column: 26, scope: !4022)
!4080 = !DILocation(line: 3813, column: 12, scope: !4022)
!4081 = !DILocation(line: 3813, column: 18, scope: !4022)
!4082 = !DILocation(line: 3813, column: 28, scope: !4022)
!4083 = !DILocation(line: 3813, column: 32, scope: !4022)
!4084 = !DILocation(line: 3813, column: 51, scope: !4022)
!4085 = !DILocation(line: 3813, column: 11, scope: !4022)
!4086 = !DILocation(line: 3815, column: 9, scope: !4022)
!4087 = !DILocation(line: 3815, column: 15, scope: !4022)
!4088 = !DILocation(line: 3815, column: 25, scope: !4022)
!4089 = !DILocation(line: 3815, column: 29, scope: !4022)
!4090 = !DILocation(line: 3818, column: 13, scope: !4022)
!4091 = !DILocation(line: 3818, column: 19, scope: !4022)
!4092 = !DILocation(line: 3818, column: 26, scope: !4022)
!4093 = !DILocation(line: 3822, column: 11, scope: !4022)
!4094 = !DILocation(line: 3822, column: 17, scope: !4022)
!4095 = !DILocation(line: 3822, column: 25, scope: !4022)
!4096 = !DILocation(line: 3822, column: 43, scope: !4022)
!4097 = !DILocation(line: 3825, column: 32, scope: !4022)
!4098 = !DILocation(line: 3825, column: 38, scope: !4022)
!4099 = !DILocation(line: 3825, column: 15, scope: !4022)
!4100 = !DILocation(line: 3825, column: 46, scope: !4022)
!4101 = !DILocation(line: 3828, column: 13, scope: !4022)
!4102 = !DILocation(line: 3828, column: 19, scope: !4022)
!4103 = !DILocation(line: 3828, column: 27, scope: !4022)
!4104 = !DILocation(line: 3828, column: 45, scope: !4022)
!4105 = !DILocation(line: 3828, column: 51, scope: !4022)
!4106 = !DILocation(line: 3829, column: 11, scope: !4022)
!4107 = !DILocation(line: 3830, column: 9, scope: !4022)
!4108 = !DILocation(line: 3831, column: 7, scope: !4022)
!4109 = !DILocation(line: 3832, column: 5, scope: !4022)
!4110 = !DILocation(line: 3838, column: 5, scope: !4022)
!4111 = !DILocation(line: 3838, column: 11, scope: !4022)
!4112 = !DILocation(line: 3838, column: 21, scope: !4022)
!4113 = !DILocation(line: 3839, column: 5, scope: !4022)
!4114 = !DILocation(line: 3839, column: 11, scope: !4022)
!4115 = !DILocation(line: 3839, column: 21, scope: !4022)
!4116 = !DILocation(line: 3840, column: 5, scope: !4022)
!4117 = !DILocation(line: 3840, column: 11, scope: !4022)
!4118 = !DILocation(line: 3840, column: 21, scope: !4022)
!4119 = !DILocation(line: 3843, column: 5, scope: !4022)
!4120 = !DILocation(line: 3843, column: 11, scope: !4022)
!4121 = !DILocation(line: 3843, column: 21, scope: !4022)
!4122 = !DILocation(line: 3843, column: 25, scope: !4022)
!4123 = !DILocation(line: 3846, column: 25, scope: !4022)
!4124 = !DILocation(line: 3846, column: 5, scope: !4022)
!4125 = !DILocation(line: 3846, column: 11, scope: !4022)
!4126 = !DILocation(line: 3846, column: 23, scope: !4022)
!4127 = !DILocation(line: 3847, column: 25, scope: !4022)
!4128 = !DILocation(line: 3847, column: 5, scope: !4022)
!4129 = !DILocation(line: 3847, column: 11, scope: !4022)
!4130 = !DILocation(line: 3847, column: 23, scope: !4022)
!4131 = !DILocation(line: 3848, column: 25, scope: !4022)
!4132 = !DILocation(line: 3848, column: 31, scope: !4022)
!4133 = !DILocation(line: 3848, column: 5, scope: !4022)
!4134 = !DILocation(line: 3848, column: 11, scope: !4022)
!4135 = !DILocation(line: 3848, column: 23, scope: !4022)
!4136 = !DILocation(line: 3849, column: 25, scope: !4022)
!4137 = !DILocation(line: 3849, column: 5, scope: !4022)
!4138 = !DILocation(line: 3849, column: 11, scope: !4022)
!4139 = !DILocation(line: 3849, column: 23, scope: !4022)
!4140 = !DILocation(line: 3850, column: 5, scope: !4022)
!4141 = !DILocation(line: 3850, column: 11, scope: !4022)
!4142 = !DILocation(line: 3850, column: 23, scope: !4022)
!4143 = !DILocation(line: 3852, column: 9, scope: !4022)
!4144 = !DILocation(line: 3852, column: 15, scope: !4022)
!4145 = !DILocation(line: 3852, column: 22, scope: !4022)
!4146 = !DILocation(line: 3855, column: 7, scope: !4022)
!4147 = !DILocation(line: 3855, column: 13, scope: !4022)
!4148 = !DILocation(line: 3855, column: 21, scope: !4022)
!4149 = !DILocation(line: 3855, column: 38, scope: !4022)
!4150 = !DILocation(line: 3858, column: 7, scope: !4022)
!4151 = !DILocation(line: 3858, column: 13, scope: !4022)
!4152 = !DILocation(line: 3858, column: 21, scope: !4022)
!4153 = !DILocation(line: 3858, column: 39, scope: !4022)
!4154 = !DILocation(line: 3861, column: 7, scope: !4022)
!4155 = !DILocation(line: 3861, column: 13, scope: !4022)
!4156 = !DILocation(line: 3861, column: 21, scope: !4022)
!4157 = !DILocation(line: 3861, column: 42, scope: !4022)
!4158 = !DILocation(line: 3862, column: 7, scope: !4022)
!4159 = !DILocation(line: 3862, column: 13, scope: !4022)
!4160 = !DILocation(line: 3862, column: 21, scope: !4022)
!4161 = !DILocation(line: 3862, column: 39, scope: !4022)
!4162 = !DILocation(line: 3865, column: 40, scope: !4022)
!4163 = !DILocation(line: 3865, column: 46, scope: !4022)
!4164 = !DILocation(line: 3865, column: 64, scope: !4022)
!4165 = !DILocation(line: 3865, column: 54, scope: !4022)
!4166 = !DILocation(line: 3865, column: 82, scope: !4022)
!4167 = !DILocation(line: 3865, column: 88, scope: !4022)
!4168 = !DILocation(line: 3865, column: 98, scope: !4022)
!4169 = !DILocation(line: 3865, column: 71, scope: !4022)
!4170 = !DILocation(line: 3865, column: 104, scope: !4022)
!4171 = !DILocation(line: 3865, column: 110, scope: !4022)
!4172 = !DILocation(line: 3865, column: 23, scope: !4022)
!4173 = !DILocation(line: 3865, column: 21, scope: !4022)
!4174 = !DILocation(line: 3866, column: 5, scope: !4022)
!4175 = !DILocation(line: 3870, column: 7, scope: !4022)
!4176 = !DILocation(line: 3870, column: 13, scope: !4022)
!4177 = !DILocation(line: 3870, column: 23, scope: !4022)
!4178 = !DILocation(line: 3871, column: 7, scope: !4022)
!4179 = !DILocation(line: 3871, column: 13, scope: !4022)
!4180 = !DILocation(line: 3871, column: 23, scope: !4022)
!4181 = !DILocation(line: 3874, column: 7, scope: !4022)
!4182 = !DILocation(line: 3874, column: 13, scope: !4022)
!4183 = !DILocation(line: 3874, column: 23, scope: !4022)
!4184 = !DILocation(line: 3877, column: 7, scope: !4022)
!4185 = !DILocation(line: 3879, column: 7, scope: !4022)
!4186 = !DILocation(line: 3882, column: 9, scope: !4022)
!4187 = !DILocation(line: 3882, column: 23, scope: !4022)
!4188 = !DILocation(line: 3885, column: 26, scope: !4022)
!4189 = !DILocation(line: 3885, column: 32, scope: !4022)
!4190 = !DILocation(line: 3885, column: 7, scope: !4022)
!4191 = !DILocation(line: 3885, column: 13, scope: !4022)
!4192 = !DILocation(line: 3885, column: 23, scope: !4022)
!4193 = !DILocation(line: 3888, column: 7, scope: !4022)
!4194 = !DILocation(line: 3888, column: 13, scope: !4022)
!4195 = !DILocation(line: 3888, column: 22, scope: !4022)
!4196 = !DILocation(line: 3889, column: 5, scope: !4022)
!4197 = !DILocation(line: 3893, column: 7, scope: !4022)
!4198 = !DILocation(line: 3893, column: 13, scope: !4022)
!4199 = !DILocation(line: 3893, column: 23, scope: !4022)
!4200 = !DILocation(line: 3894, column: 7, scope: !4022)
!4201 = !DILocation(line: 3894, column: 13, scope: !4022)
!4202 = !DILocation(line: 3894, column: 23, scope: !4022)
!4203 = !DILocation(line: 3897, column: 7, scope: !4022)
!4204 = !DILocation(line: 3897, column: 13, scope: !4022)
!4205 = !DILocation(line: 3897, column: 23, scope: !4022)
!4206 = !DILocation(line: 3900, column: 7, scope: !4022)
!4207 = !DILocation(line: 3902, column: 7, scope: !4022)
!4208 = !DILocation(line: 3905, column: 9, scope: !4022)
!4209 = !DILocation(line: 3905, column: 27, scope: !4022)
!4210 = !DILocation(line: 3909, column: 7, scope: !4022)
!4211 = !DILocation(line: 3910, column: 5, scope: !4022)
!4212 = !DILocation(line: 3913, column: 5, scope: !4022)
!4213 = !DILocation(line: 3919, column: 20, scope: !4022)
!4214 = !DILocation(line: 3919, column: 5, scope: !4022)
!4215 = !DILocation(line: 3922, column: 5, scope: !4022)
!4216 = !DILocation(line: 3922, column: 11, scope: !4022)
!4217 = !DILocation(line: 3922, column: 21, scope: !4022)
!4218 = !DILocation(line: 3922, column: 25, scope: !4022)
!4219 = !DILocation(line: 3924, column: 5, scope: !4022)
!4220 = !DILocation(line: 3928, column: 5, scope: !4022)
!4221 = !DILocation(line: 3930, column: 1, scope: !4022)
!4222 = distinct !DISubprogram(name: "HAL_I2C_Slave_Seq_Receive_IT", scope: !1, file: !1, line: 3942, type: !9, scopeLine: 3944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4223 = !DILocation(line: 3948, column: 18, scope: !4222)
!4224 = !DILocation(line: 3948, column: 24, scope: !4222)
!4225 = !DILocation(line: 3948, column: 8, scope: !4222)
!4226 = !DILocation(line: 3948, column: 30, scope: !4222)
!4227 = !DILocation(line: 3948, column: 64, scope: !4222)
!4228 = !DILocation(line: 3948, column: 7, scope: !4222)
!4229 = !DILocation(line: 3950, column: 10, scope: !4222)
!4230 = !DILocation(line: 3950, column: 16, scope: !4222)
!4231 = !DILocation(line: 3950, column: 25, scope: !4222)
!4232 = !DILocation(line: 3950, column: 29, scope: !4222)
!4233 = !DILocation(line: 3950, column: 34, scope: !4222)
!4234 = !DILocation(line: 3950, column: 9, scope: !4222)
!4235 = !DILocation(line: 3952, column: 7, scope: !4222)
!4236 = !DILocation(line: 3952, column: 13, scope: !4222)
!4237 = !DILocation(line: 3952, column: 23, scope: !4222)
!4238 = !DILocation(line: 3953, column: 7, scope: !4222)
!4239 = !DILocation(line: 3957, column: 21, scope: !4222)
!4240 = !DILocation(line: 3957, column: 5, scope: !4222)
!4241 = !DILocation(line: 3960, column: 5, scope: !4222)
!4242 = !DILocation(line: 3964, column: 9, scope: !4222)
!4243 = !DILocation(line: 3964, column: 15, scope: !4222)
!4244 = !DILocation(line: 3964, column: 21, scope: !4222)
!4245 = !DILocation(line: 3967, column: 23, scope: !4222)
!4246 = !DILocation(line: 3967, column: 7, scope: !4222)
!4247 = !DILocation(line: 3969, column: 12, scope: !4222)
!4248 = !DILocation(line: 3969, column: 18, scope: !4222)
!4249 = !DILocation(line: 3969, column: 28, scope: !4222)
!4250 = !DILocation(line: 3969, column: 32, scope: !4222)
!4251 = !DILocation(line: 3969, column: 51, scope: !4222)
!4252 = !DILocation(line: 3969, column: 11, scope: !4222)
!4253 = !DILocation(line: 3971, column: 9, scope: !4222)
!4254 = !DILocation(line: 3971, column: 15, scope: !4222)
!4255 = !DILocation(line: 3971, column: 25, scope: !4222)
!4256 = !DILocation(line: 3971, column: 29, scope: !4222)
!4257 = !DILocation(line: 3974, column: 13, scope: !4222)
!4258 = !DILocation(line: 3974, column: 19, scope: !4222)
!4259 = !DILocation(line: 3974, column: 26, scope: !4222)
!4260 = !DILocation(line: 3978, column: 11, scope: !4222)
!4261 = !DILocation(line: 3978, column: 17, scope: !4222)
!4262 = !DILocation(line: 3978, column: 25, scope: !4222)
!4263 = !DILocation(line: 3978, column: 43, scope: !4222)
!4264 = !DILocation(line: 3981, column: 32, scope: !4222)
!4265 = !DILocation(line: 3981, column: 38, scope: !4222)
!4266 = !DILocation(line: 3981, column: 15, scope: !4222)
!4267 = !DILocation(line: 3981, column: 46, scope: !4222)
!4268 = !DILocation(line: 3984, column: 13, scope: !4222)
!4269 = !DILocation(line: 3984, column: 19, scope: !4222)
!4270 = !DILocation(line: 3984, column: 27, scope: !4222)
!4271 = !DILocation(line: 3984, column: 45, scope: !4222)
!4272 = !DILocation(line: 3984, column: 51, scope: !4222)
!4273 = !DILocation(line: 3985, column: 11, scope: !4222)
!4274 = !DILocation(line: 3986, column: 9, scope: !4222)
!4275 = !DILocation(line: 3987, column: 7, scope: !4222)
!4276 = !DILocation(line: 3988, column: 5, scope: !4222)
!4277 = !DILocation(line: 3990, column: 5, scope: !4222)
!4278 = !DILocation(line: 3990, column: 11, scope: !4222)
!4279 = !DILocation(line: 3990, column: 21, scope: !4222)
!4280 = !DILocation(line: 3991, column: 5, scope: !4222)
!4281 = !DILocation(line: 3991, column: 11, scope: !4222)
!4282 = !DILocation(line: 3991, column: 21, scope: !4222)
!4283 = !DILocation(line: 3992, column: 5, scope: !4222)
!4284 = !DILocation(line: 3992, column: 11, scope: !4222)
!4285 = !DILocation(line: 3992, column: 21, scope: !4222)
!4286 = !DILocation(line: 3995, column: 5, scope: !4222)
!4287 = !DILocation(line: 3995, column: 11, scope: !4222)
!4288 = !DILocation(line: 3995, column: 21, scope: !4222)
!4289 = !DILocation(line: 3995, column: 25, scope: !4222)
!4290 = !DILocation(line: 3998, column: 25, scope: !4222)
!4291 = !DILocation(line: 3998, column: 5, scope: !4222)
!4292 = !DILocation(line: 3998, column: 11, scope: !4222)
!4293 = !DILocation(line: 3998, column: 23, scope: !4222)
!4294 = !DILocation(line: 3999, column: 25, scope: !4222)
!4295 = !DILocation(line: 3999, column: 5, scope: !4222)
!4296 = !DILocation(line: 3999, column: 11, scope: !4222)
!4297 = !DILocation(line: 3999, column: 23, scope: !4222)
!4298 = !DILocation(line: 4000, column: 25, scope: !4222)
!4299 = !DILocation(line: 4000, column: 31, scope: !4222)
!4300 = !DILocation(line: 4000, column: 5, scope: !4222)
!4301 = !DILocation(line: 4000, column: 11, scope: !4222)
!4302 = !DILocation(line: 4000, column: 23, scope: !4222)
!4303 = !DILocation(line: 4001, column: 25, scope: !4222)
!4304 = !DILocation(line: 4001, column: 5, scope: !4222)
!4305 = !DILocation(line: 4001, column: 11, scope: !4222)
!4306 = !DILocation(line: 4001, column: 23, scope: !4222)
!4307 = !DILocation(line: 4002, column: 5, scope: !4222)
!4308 = !DILocation(line: 4002, column: 11, scope: !4222)
!4309 = !DILocation(line: 4002, column: 23, scope: !4222)
!4310 = !DILocation(line: 4004, column: 9, scope: !4222)
!4311 = !DILocation(line: 4004, column: 27, scope: !4222)
!4312 = !DILocation(line: 4008, column: 7, scope: !4222)
!4313 = !DILocation(line: 4009, column: 5, scope: !4222)
!4314 = !DILocation(line: 4012, column: 5, scope: !4222)
!4315 = !DILocation(line: 4018, column: 20, scope: !4222)
!4316 = !DILocation(line: 4018, column: 5, scope: !4222)
!4317 = !DILocation(line: 4020, column: 5, scope: !4222)
!4318 = !DILocation(line: 4024, column: 5, scope: !4222)
!4319 = !DILocation(line: 4026, column: 1, scope: !4222)
!4320 = distinct !DISubprogram(name: "HAL_I2C_Slave_Seq_Receive_DMA", scope: !1, file: !1, line: 4038, type: !9, scopeLine: 4040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4321 = !DILocation(line: 4046, column: 18, scope: !4320)
!4322 = !DILocation(line: 4046, column: 24, scope: !4320)
!4323 = !DILocation(line: 4046, column: 8, scope: !4320)
!4324 = !DILocation(line: 4046, column: 30, scope: !4320)
!4325 = !DILocation(line: 4046, column: 64, scope: !4320)
!4326 = !DILocation(line: 4046, column: 7, scope: !4320)
!4327 = !DILocation(line: 4048, column: 10, scope: !4320)
!4328 = !DILocation(line: 4048, column: 16, scope: !4320)
!4329 = !DILocation(line: 4048, column: 25, scope: !4320)
!4330 = !DILocation(line: 4048, column: 29, scope: !4320)
!4331 = !DILocation(line: 4048, column: 34, scope: !4320)
!4332 = !DILocation(line: 4048, column: 9, scope: !4320)
!4333 = !DILocation(line: 4050, column: 7, scope: !4320)
!4334 = !DILocation(line: 4050, column: 13, scope: !4320)
!4335 = !DILocation(line: 4050, column: 23, scope: !4320)
!4336 = !DILocation(line: 4051, column: 7, scope: !4320)
!4337 = !DILocation(line: 4055, column: 21, scope: !4320)
!4338 = !DILocation(line: 4055, column: 5, scope: !4320)
!4339 = !DILocation(line: 4058, column: 5, scope: !4320)
!4340 = !DILocation(line: 4062, column: 9, scope: !4320)
!4341 = !DILocation(line: 4062, column: 15, scope: !4320)
!4342 = !DILocation(line: 4062, column: 21, scope: !4320)
!4343 = !DILocation(line: 4065, column: 23, scope: !4320)
!4344 = !DILocation(line: 4065, column: 7, scope: !4320)
!4345 = !DILocation(line: 4067, column: 12, scope: !4320)
!4346 = !DILocation(line: 4067, column: 18, scope: !4320)
!4347 = !DILocation(line: 4067, column: 28, scope: !4320)
!4348 = !DILocation(line: 4067, column: 32, scope: !4320)
!4349 = !DILocation(line: 4067, column: 51, scope: !4320)
!4350 = !DILocation(line: 4067, column: 11, scope: !4320)
!4351 = !DILocation(line: 4070, column: 13, scope: !4320)
!4352 = !DILocation(line: 4070, column: 19, scope: !4320)
!4353 = !DILocation(line: 4070, column: 26, scope: !4320)
!4354 = !DILocation(line: 4072, column: 11, scope: !4320)
!4355 = !DILocation(line: 4072, column: 17, scope: !4320)
!4356 = !DILocation(line: 4072, column: 27, scope: !4320)
!4357 = !DILocation(line: 4072, column: 31, scope: !4320)
!4358 = !DILocation(line: 4076, column: 11, scope: !4320)
!4359 = !DILocation(line: 4076, column: 17, scope: !4320)
!4360 = !DILocation(line: 4076, column: 25, scope: !4320)
!4361 = !DILocation(line: 4076, column: 43, scope: !4320)
!4362 = !DILocation(line: 4079, column: 32, scope: !4320)
!4363 = !DILocation(line: 4079, column: 38, scope: !4320)
!4364 = !DILocation(line: 4079, column: 15, scope: !4320)
!4365 = !DILocation(line: 4079, column: 46, scope: !4320)
!4366 = !DILocation(line: 4082, column: 13, scope: !4320)
!4367 = !DILocation(line: 4082, column: 19, scope: !4320)
!4368 = !DILocation(line: 4082, column: 27, scope: !4320)
!4369 = !DILocation(line: 4082, column: 45, scope: !4320)
!4370 = !DILocation(line: 4082, column: 51, scope: !4320)
!4371 = !DILocation(line: 4083, column: 11, scope: !4320)
!4372 = !DILocation(line: 4084, column: 9, scope: !4320)
!4373 = !DILocation(line: 4085, column: 7, scope: !4320)
!4374 = !DILocation(line: 4086, column: 5, scope: !4320)
!4375 = !DILocation(line: 4087, column: 14, scope: !4320)
!4376 = !DILocation(line: 4087, column: 20, scope: !4320)
!4377 = !DILocation(line: 4087, column: 26, scope: !4320)
!4378 = !DILocation(line: 4089, column: 12, scope: !4320)
!4379 = !DILocation(line: 4089, column: 18, scope: !4320)
!4380 = !DILocation(line: 4089, column: 28, scope: !4320)
!4381 = !DILocation(line: 4089, column: 32, scope: !4320)
!4382 = !DILocation(line: 4089, column: 51, scope: !4320)
!4383 = !DILocation(line: 4089, column: 11, scope: !4320)
!4384 = !DILocation(line: 4091, column: 9, scope: !4320)
!4385 = !DILocation(line: 4091, column: 15, scope: !4320)
!4386 = !DILocation(line: 4091, column: 25, scope: !4320)
!4387 = !DILocation(line: 4091, column: 29, scope: !4320)
!4388 = !DILocation(line: 4094, column: 13, scope: !4320)
!4389 = !DILocation(line: 4094, column: 19, scope: !4320)
!4390 = !DILocation(line: 4094, column: 26, scope: !4320)
!4391 = !DILocation(line: 4098, column: 11, scope: !4320)
!4392 = !DILocation(line: 4098, column: 17, scope: !4320)
!4393 = !DILocation(line: 4098, column: 25, scope: !4320)
!4394 = !DILocation(line: 4098, column: 43, scope: !4320)
!4395 = !DILocation(line: 4101, column: 32, scope: !4320)
!4396 = !DILocation(line: 4101, column: 38, scope: !4320)
!4397 = !DILocation(line: 4101, column: 15, scope: !4320)
!4398 = !DILocation(line: 4101, column: 46, scope: !4320)
!4399 = !DILocation(line: 4104, column: 13, scope: !4320)
!4400 = !DILocation(line: 4104, column: 19, scope: !4320)
!4401 = !DILocation(line: 4104, column: 27, scope: !4320)
!4402 = !DILocation(line: 4104, column: 45, scope: !4320)
!4403 = !DILocation(line: 4104, column: 51, scope: !4320)
!4404 = !DILocation(line: 4105, column: 11, scope: !4320)
!4405 = !DILocation(line: 4106, column: 9, scope: !4320)
!4406 = !DILocation(line: 4107, column: 7, scope: !4320)
!4407 = !DILocation(line: 4108, column: 5, scope: !4320)
!4408 = !DILocation(line: 4114, column: 5, scope: !4320)
!4409 = !DILocation(line: 4114, column: 11, scope: !4320)
!4410 = !DILocation(line: 4114, column: 21, scope: !4320)
!4411 = !DILocation(line: 4115, column: 5, scope: !4320)
!4412 = !DILocation(line: 4115, column: 11, scope: !4320)
!4413 = !DILocation(line: 4115, column: 21, scope: !4320)
!4414 = !DILocation(line: 4116, column: 5, scope: !4320)
!4415 = !DILocation(line: 4116, column: 11, scope: !4320)
!4416 = !DILocation(line: 4116, column: 21, scope: !4320)
!4417 = !DILocation(line: 4119, column: 5, scope: !4320)
!4418 = !DILocation(line: 4119, column: 11, scope: !4320)
!4419 = !DILocation(line: 4119, column: 21, scope: !4320)
!4420 = !DILocation(line: 4119, column: 25, scope: !4320)
!4421 = !DILocation(line: 4122, column: 25, scope: !4320)
!4422 = !DILocation(line: 4122, column: 5, scope: !4320)
!4423 = !DILocation(line: 4122, column: 11, scope: !4320)
!4424 = !DILocation(line: 4122, column: 23, scope: !4320)
!4425 = !DILocation(line: 4123, column: 25, scope: !4320)
!4426 = !DILocation(line: 4123, column: 5, scope: !4320)
!4427 = !DILocation(line: 4123, column: 11, scope: !4320)
!4428 = !DILocation(line: 4123, column: 23, scope: !4320)
!4429 = !DILocation(line: 4124, column: 25, scope: !4320)
!4430 = !DILocation(line: 4124, column: 31, scope: !4320)
!4431 = !DILocation(line: 4124, column: 5, scope: !4320)
!4432 = !DILocation(line: 4124, column: 11, scope: !4320)
!4433 = !DILocation(line: 4124, column: 23, scope: !4320)
!4434 = !DILocation(line: 4125, column: 25, scope: !4320)
!4435 = !DILocation(line: 4125, column: 5, scope: !4320)
!4436 = !DILocation(line: 4125, column: 11, scope: !4320)
!4437 = !DILocation(line: 4125, column: 23, scope: !4320)
!4438 = !DILocation(line: 4126, column: 5, scope: !4320)
!4439 = !DILocation(line: 4126, column: 11, scope: !4320)
!4440 = !DILocation(line: 4126, column: 23, scope: !4320)
!4441 = !DILocation(line: 4128, column: 9, scope: !4320)
!4442 = !DILocation(line: 4128, column: 15, scope: !4320)
!4443 = !DILocation(line: 4128, column: 22, scope: !4320)
!4444 = !DILocation(line: 4131, column: 7, scope: !4320)
!4445 = !DILocation(line: 4131, column: 13, scope: !4320)
!4446 = !DILocation(line: 4131, column: 21, scope: !4320)
!4447 = !DILocation(line: 4131, column: 38, scope: !4320)
!4448 = !DILocation(line: 4134, column: 7, scope: !4320)
!4449 = !DILocation(line: 4134, column: 13, scope: !4320)
!4450 = !DILocation(line: 4134, column: 21, scope: !4320)
!4451 = !DILocation(line: 4134, column: 39, scope: !4320)
!4452 = !DILocation(line: 4137, column: 7, scope: !4320)
!4453 = !DILocation(line: 4137, column: 13, scope: !4320)
!4454 = !DILocation(line: 4137, column: 21, scope: !4320)
!4455 = !DILocation(line: 4137, column: 42, scope: !4320)
!4456 = !DILocation(line: 4138, column: 7, scope: !4320)
!4457 = !DILocation(line: 4138, column: 13, scope: !4320)
!4458 = !DILocation(line: 4138, column: 21, scope: !4320)
!4459 = !DILocation(line: 4138, column: 39, scope: !4320)
!4460 = !DILocation(line: 4141, column: 40, scope: !4320)
!4461 = !DILocation(line: 4141, column: 46, scope: !4320)
!4462 = !DILocation(line: 4141, column: 65, scope: !4320)
!4463 = !DILocation(line: 4141, column: 71, scope: !4320)
!4464 = !DILocation(line: 4141, column: 81, scope: !4320)
!4465 = !DILocation(line: 4141, column: 54, scope: !4320)
!4466 = !DILocation(line: 4141, column: 97, scope: !4320)
!4467 = !DILocation(line: 4141, column: 87, scope: !4320)
!4468 = !DILocation(line: 4141, column: 104, scope: !4320)
!4469 = !DILocation(line: 4141, column: 110, scope: !4320)
!4470 = !DILocation(line: 4141, column: 23, scope: !4320)
!4471 = !DILocation(line: 4141, column: 21, scope: !4320)
!4472 = !DILocation(line: 4142, column: 5, scope: !4320)
!4473 = !DILocation(line: 4146, column: 7, scope: !4320)
!4474 = !DILocation(line: 4146, column: 13, scope: !4320)
!4475 = !DILocation(line: 4146, column: 23, scope: !4320)
!4476 = !DILocation(line: 4147, column: 7, scope: !4320)
!4477 = !DILocation(line: 4147, column: 13, scope: !4320)
!4478 = !DILocation(line: 4147, column: 23, scope: !4320)
!4479 = !DILocation(line: 4150, column: 7, scope: !4320)
!4480 = !DILocation(line: 4150, column: 13, scope: !4320)
!4481 = !DILocation(line: 4150, column: 23, scope: !4320)
!4482 = !DILocation(line: 4153, column: 7, scope: !4320)
!4483 = !DILocation(line: 4155, column: 7, scope: !4320)
!4484 = !DILocation(line: 4158, column: 9, scope: !4320)
!4485 = !DILocation(line: 4158, column: 23, scope: !4320)
!4486 = !DILocation(line: 4161, column: 26, scope: !4320)
!4487 = !DILocation(line: 4161, column: 32, scope: !4320)
!4488 = !DILocation(line: 4161, column: 7, scope: !4320)
!4489 = !DILocation(line: 4161, column: 13, scope: !4320)
!4490 = !DILocation(line: 4161, column: 23, scope: !4320)
!4491 = !DILocation(line: 4164, column: 7, scope: !4320)
!4492 = !DILocation(line: 4164, column: 13, scope: !4320)
!4493 = !DILocation(line: 4164, column: 22, scope: !4320)
!4494 = !DILocation(line: 4165, column: 5, scope: !4320)
!4495 = !DILocation(line: 4169, column: 7, scope: !4320)
!4496 = !DILocation(line: 4169, column: 13, scope: !4320)
!4497 = !DILocation(line: 4169, column: 23, scope: !4320)
!4498 = !DILocation(line: 4170, column: 7, scope: !4320)
!4499 = !DILocation(line: 4170, column: 13, scope: !4320)
!4500 = !DILocation(line: 4170, column: 23, scope: !4320)
!4501 = !DILocation(line: 4173, column: 7, scope: !4320)
!4502 = !DILocation(line: 4173, column: 13, scope: !4320)
!4503 = !DILocation(line: 4173, column: 23, scope: !4320)
!4504 = !DILocation(line: 4176, column: 7, scope: !4320)
!4505 = !DILocation(line: 4178, column: 7, scope: !4320)
!4506 = !DILocation(line: 4181, column: 9, scope: !4320)
!4507 = !DILocation(line: 4181, column: 27, scope: !4320)
!4508 = !DILocation(line: 4185, column: 7, scope: !4320)
!4509 = !DILocation(line: 4186, column: 5, scope: !4320)
!4510 = !DILocation(line: 4189, column: 5, scope: !4320)
!4511 = !DILocation(line: 4195, column: 20, scope: !4320)
!4512 = !DILocation(line: 4195, column: 5, scope: !4320)
!4513 = !DILocation(line: 4198, column: 5, scope: !4320)
!4514 = !DILocation(line: 4198, column: 11, scope: !4320)
!4515 = !DILocation(line: 4198, column: 21, scope: !4320)
!4516 = !DILocation(line: 4198, column: 25, scope: !4320)
!4517 = !DILocation(line: 4200, column: 5, scope: !4320)
!4518 = !DILocation(line: 4204, column: 5, scope: !4320)
!4519 = !DILocation(line: 4206, column: 1, scope: !4320)
!4520 = distinct !DISubprogram(name: "HAL_I2C_EnableListen_IT", scope: !1, file: !1, line: 4214, type: !9, scopeLine: 4215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4521 = !DILocation(line: 4216, column: 7, scope: !4520)
!4522 = !DILocation(line: 4216, column: 13, scope: !4520)
!4523 = !DILocation(line: 4216, column: 19, scope: !4520)
!4524 = !DILocation(line: 4218, column: 5, scope: !4520)
!4525 = !DILocation(line: 4218, column: 11, scope: !4520)
!4526 = !DILocation(line: 4218, column: 17, scope: !4520)
!4527 = !DILocation(line: 4219, column: 5, scope: !4520)
!4528 = !DILocation(line: 4219, column: 11, scope: !4520)
!4529 = !DILocation(line: 4219, column: 19, scope: !4520)
!4530 = !DILocation(line: 4222, column: 20, scope: !4520)
!4531 = !DILocation(line: 4222, column: 5, scope: !4520)
!4532 = !DILocation(line: 4224, column: 5, scope: !4520)
!4533 = !DILocation(line: 4228, column: 5, scope: !4520)
!4534 = !DILocation(line: 4230, column: 1, scope: !4520)
!4535 = distinct !DISubprogram(name: "HAL_I2C_DisableListen_IT", scope: !1, file: !1, line: 4238, type: !9, scopeLine: 4239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4536 = !DILocation(line: 4244, column: 7, scope: !4535)
!4537 = !DILocation(line: 4244, column: 13, scope: !4535)
!4538 = !DILocation(line: 4244, column: 19, scope: !4535)
!4539 = !DILocation(line: 4246, column: 22, scope: !4535)
!4540 = !DILocation(line: 4246, column: 28, scope: !4535)
!4541 = !DILocation(line: 4246, column: 11, scope: !4535)
!4542 = !DILocation(line: 4246, column: 35, scope: !4535)
!4543 = !DILocation(line: 4246, column: 9, scope: !4535)
!4544 = !DILocation(line: 4247, column: 27, scope: !4535)
!4545 = !DILocation(line: 4247, column: 44, scope: !4535)
!4546 = !DILocation(line: 4247, column: 50, scope: !4535)
!4547 = !DILocation(line: 4247, column: 33, scope: !4535)
!4548 = !DILocation(line: 4247, column: 31, scope: !4535)
!4549 = !DILocation(line: 4247, column: 5, scope: !4535)
!4550 = !DILocation(line: 4247, column: 11, scope: !4535)
!4551 = !DILocation(line: 4247, column: 25, scope: !4535)
!4552 = !DILocation(line: 4248, column: 5, scope: !4535)
!4553 = !DILocation(line: 4248, column: 11, scope: !4535)
!4554 = !DILocation(line: 4248, column: 17, scope: !4535)
!4555 = !DILocation(line: 4249, column: 5, scope: !4535)
!4556 = !DILocation(line: 4249, column: 11, scope: !4535)
!4557 = !DILocation(line: 4249, column: 16, scope: !4535)
!4558 = !DILocation(line: 4250, column: 5, scope: !4535)
!4559 = !DILocation(line: 4250, column: 11, scope: !4535)
!4560 = !DILocation(line: 4250, column: 19, scope: !4535)
!4561 = !DILocation(line: 4253, column: 21, scope: !4535)
!4562 = !DILocation(line: 4253, column: 5, scope: !4535)
!4563 = !DILocation(line: 4255, column: 5, scope: !4535)
!4564 = !DILocation(line: 4259, column: 5, scope: !4535)
!4565 = !DILocation(line: 4261, column: 1, scope: !4535)
!4566 = distinct !DISubprogram(name: "HAL_I2C_Master_Abort_IT", scope: !1, file: !1, line: 4271, type: !9, scopeLine: 4272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4567 = !DILocation(line: 4273, column: 7, scope: !4566)
!4568 = !DILocation(line: 4273, column: 13, scope: !4566)
!4569 = !DILocation(line: 4273, column: 18, scope: !4566)
!4570 = !DILocation(line: 4276, column: 5, scope: !4566)
!4571 = !DILocation(line: 4279, column: 9, scope: !4566)
!4572 = !DILocation(line: 4279, column: 15, scope: !4566)
!4573 = !DILocation(line: 4279, column: 21, scope: !4566)
!4574 = !DILocation(line: 4281, column: 23, scope: !4566)
!4575 = !DILocation(line: 4281, column: 7, scope: !4566)
!4576 = !DILocation(line: 4282, column: 7, scope: !4566)
!4577 = !DILocation(line: 4282, column: 13, scope: !4566)
!4578 = !DILocation(line: 4282, column: 27, scope: !4566)
!4579 = !DILocation(line: 4283, column: 5, scope: !4566)
!4580 = !DILocation(line: 4284, column: 14, scope: !4566)
!4581 = !DILocation(line: 4284, column: 20, scope: !4566)
!4582 = !DILocation(line: 4284, column: 26, scope: !4566)
!4583 = !DILocation(line: 4286, column: 23, scope: !4566)
!4584 = !DILocation(line: 4286, column: 7, scope: !4566)
!4585 = !DILocation(line: 4287, column: 7, scope: !4566)
!4586 = !DILocation(line: 4287, column: 13, scope: !4566)
!4587 = !DILocation(line: 4287, column: 27, scope: !4566)
!4588 = !DILocation(line: 4288, column: 5, scope: !4566)
!4589 = !DILocation(line: 4295, column: 5, scope: !4566)
!4590 = !DILocation(line: 4295, column: 11, scope: !4566)
!4591 = !DILocation(line: 4295, column: 17, scope: !4566)
!4592 = !DILocation(line: 4299, column: 24, scope: !4566)
!4593 = !DILocation(line: 4299, column: 30, scope: !4566)
!4594 = !DILocation(line: 4299, column: 5, scope: !4566)
!4595 = !DILocation(line: 4302, column: 5, scope: !4566)
!4596 = !DILocation(line: 4307, column: 20, scope: !4566)
!4597 = !DILocation(line: 4307, column: 5, scope: !4566)
!4598 = !DILocation(line: 4309, column: 5, scope: !4566)
!4599 = !DILocation(line: 4315, column: 5, scope: !4566)
!4600 = !DILocation(line: 4317, column: 1, scope: !4566)
!4601 = distinct !DISubprogram(name: "HAL_I2C_EV_IRQHandler", scope: !1, file: !1, line: 4333, type: !9, scopeLine: 4334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4602 = !DILocation(line: 4336, column: 24, scope: !4601)
!4603 = !DILocation(line: 4336, column: 12, scope: !4601)
!4604 = !DILocation(line: 4337, column: 24, scope: !4601)
!4605 = !DILocation(line: 4337, column: 12, scope: !4601)
!4606 = !DILocation(line: 4340, column: 7, scope: !4601)
!4607 = !DILocation(line: 4340, column: 13, scope: !4601)
!4608 = !DILocation(line: 4340, column: 21, scope: !4601)
!4609 = !DILocation(line: 4342, column: 5, scope: !4601)
!4610 = !DILocation(line: 4342, column: 11, scope: !4601)
!4611 = !DILocation(line: 4342, column: 19, scope: !4601)
!4612 = !DILocation(line: 4342, column: 25, scope: !4601)
!4613 = !DILocation(line: 4342, column: 34, scope: !4601)
!4614 = !DILocation(line: 4343, column: 3, scope: !4601)
!4615 = !DILocation(line: 4344, column: 1, scope: !4601)
!4616 = distinct !DISubprogram(name: "HAL_I2C_ER_IRQHandler", scope: !1, file: !1, line: 4352, type: !9, scopeLine: 4353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4617 = !DILocation(line: 4354, column: 24, scope: !4616)
!4618 = !DILocation(line: 4354, column: 12, scope: !4616)
!4619 = !DILocation(line: 4355, column: 24, scope: !4616)
!4620 = !DILocation(line: 4355, column: 12, scope: !4616)
!4621 = !DILocation(line: 4359, column: 8, scope: !4616)
!4622 = !DILocation(line: 4359, column: 47, scope: !4616)
!4623 = !DILocation(line: 4359, column: 57, scope: !4616)
!4624 = !DILocation(line: 4359, column: 61, scope: !4616)
!4625 = !DILocation(line: 4359, column: 105, scope: !4616)
!4626 = !DILocation(line: 4359, column: 7, scope: !4616)
!4627 = !DILocation(line: 4361, column: 5, scope: !4616)
!4628 = !DILocation(line: 4361, column: 11, scope: !4616)
!4629 = !DILocation(line: 4361, column: 21, scope: !4616)
!4630 = !DILocation(line: 4364, column: 5, scope: !4616)
!4631 = !DILocation(line: 4365, column: 3, scope: !4616)
!4632 = !DILocation(line: 4368, column: 8, scope: !4616)
!4633 = !DILocation(line: 4368, column: 46, scope: !4616)
!4634 = !DILocation(line: 4368, column: 56, scope: !4616)
!4635 = !DILocation(line: 4368, column: 60, scope: !4616)
!4636 = !DILocation(line: 4368, column: 104, scope: !4616)
!4637 = !DILocation(line: 4368, column: 7, scope: !4616)
!4638 = !DILocation(line: 4370, column: 5, scope: !4616)
!4639 = !DILocation(line: 4370, column: 11, scope: !4616)
!4640 = !DILocation(line: 4370, column: 21, scope: !4616)
!4641 = !DILocation(line: 4373, column: 5, scope: !4616)
!4642 = !DILocation(line: 4374, column: 3, scope: !4616)
!4643 = !DILocation(line: 4377, column: 8, scope: !4616)
!4644 = !DILocation(line: 4377, column: 47, scope: !4616)
!4645 = !DILocation(line: 4377, column: 57, scope: !4616)
!4646 = !DILocation(line: 4377, column: 61, scope: !4616)
!4647 = !DILocation(line: 4377, column: 105, scope: !4616)
!4648 = !DILocation(line: 4377, column: 7, scope: !4616)
!4649 = !DILocation(line: 4379, column: 5, scope: !4616)
!4650 = !DILocation(line: 4379, column: 11, scope: !4616)
!4651 = !DILocation(line: 4379, column: 21, scope: !4616)
!4652 = !DILocation(line: 4382, column: 5, scope: !4616)
!4653 = !DILocation(line: 4383, column: 3, scope: !4616)
!4654 = !DILocation(line: 4386, column: 14, scope: !4616)
!4655 = !DILocation(line: 4386, column: 20, scope: !4616)
!4656 = !DILocation(line: 4386, column: 12, scope: !4616)
!4657 = !DILocation(line: 4389, column: 8, scope: !4616)
!4658 = !DILocation(line: 4389, column: 17, scope: !4616)
!4659 = !DILocation(line: 4389, column: 82, scope: !4616)
!4660 = !DILocation(line: 4389, column: 7, scope: !4616)
!4661 = !DILocation(line: 4391, column: 17, scope: !4616)
!4662 = !DILocation(line: 4391, column: 23, scope: !4616)
!4663 = !DILocation(line: 4391, column: 5, scope: !4616)
!4664 = !DILocation(line: 4392, column: 3, scope: !4616)
!4665 = !DILocation(line: 4393, column: 1, scope: !4616)
!4666 = distinct !DISubprogram(name: "I2C_ITError", scope: !1, file: !1, line: 5855, type: !9, scopeLine: 5856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4667 = !DILocation(line: 5857, column: 35, scope: !4666)
!4668 = !DILocation(line: 5857, column: 41, scope: !4666)
!4669 = !DILocation(line: 5857, column: 24, scope: !4666)
!4670 = !DILocation(line: 5861, column: 3, scope: !4666)
!4671 = !DILocation(line: 5861, column: 9, scope: !4666)
!4672 = !DILocation(line: 5861, column: 23, scope: !4666)
!4673 = !DILocation(line: 5862, column: 3, scope: !4666)
!4674 = !DILocation(line: 5862, column: 9, scope: !4666)
!4675 = !DILocation(line: 5862, column: 23, scope: !4666)
!4676 = !DILocation(line: 5863, column: 3, scope: !4666)
!4677 = !DILocation(line: 5863, column: 9, scope: !4666)
!4678 = !DILocation(line: 5863, column: 23, scope: !4666)
!4679 = !DILocation(line: 5866, column: 22, scope: !4666)
!4680 = !DILocation(line: 5866, column: 3, scope: !4666)
!4681 = !DILocation(line: 5866, column: 9, scope: !4666)
!4682 = !DILocation(line: 5866, column: 19, scope: !4666)
!4683 = !DILocation(line: 5869, column: 8, scope: !4666)
!4684 = !DILocation(line: 5869, column: 17, scope: !4666)
!4685 = !DILocation(line: 5869, column: 50, scope: !4666)
!4686 = !DILocation(line: 5870, column: 8, scope: !4666)
!4687 = !DILocation(line: 5870, column: 17, scope: !4666)
!4688 = !DILocation(line: 5870, column: 50, scope: !4666)
!4689 = !DILocation(line: 5871, column: 8, scope: !4666)
!4690 = !DILocation(line: 5871, column: 17, scope: !4666)
!4691 = !DILocation(line: 5869, column: 7, scope: !4666)
!4692 = !DILocation(line: 5874, column: 21, scope: !4666)
!4693 = !DILocation(line: 5874, column: 5, scope: !4666)
!4694 = !DILocation(line: 5877, column: 5, scope: !4666)
!4695 = !DILocation(line: 5877, column: 11, scope: !4666)
!4696 = !DILocation(line: 5877, column: 25, scope: !4666)
!4697 = !DILocation(line: 5878, column: 5, scope: !4666)
!4698 = !DILocation(line: 5878, column: 11, scope: !4666)
!4699 = !DILocation(line: 5878, column: 25, scope: !4666)
!4700 = !DILocation(line: 5879, column: 3, scope: !4666)
!4701 = !DILocation(line: 5883, column: 21, scope: !4666)
!4702 = !DILocation(line: 5883, column: 5, scope: !4666)
!4703 = !DILocation(line: 5887, column: 9, scope: !4666)
!4704 = !DILocation(line: 5887, column: 15, scope: !4666)
!4705 = !DILocation(line: 5887, column: 21, scope: !4666)
!4706 = !DILocation(line: 5890, column: 7, scope: !4666)
!4707 = !DILocation(line: 5890, column: 13, scope: !4666)
!4708 = !DILocation(line: 5890, column: 27, scope: !4666)
!4709 = !DILocation(line: 5891, column: 5, scope: !4666)
!4710 = !DILocation(line: 5892, column: 5, scope: !4666)
!4711 = !DILocation(line: 5892, column: 11, scope: !4666)
!4712 = !DILocation(line: 5892, column: 25, scope: !4666)
!4713 = !DILocation(line: 5896, column: 22, scope: !4666)
!4714 = !DILocation(line: 5896, column: 28, scope: !4666)
!4715 = !DILocation(line: 5896, column: 20, scope: !4666)
!4716 = !DILocation(line: 5897, column: 8, scope: !4666)
!4717 = !DILocation(line: 5897, column: 14, scope: !4666)
!4718 = !DILocation(line: 5897, column: 21, scope: !4666)
!4719 = !DILocation(line: 5897, column: 30, scope: !4666)
!4720 = !DILocation(line: 5897, column: 35, scope: !4666)
!4721 = !DILocation(line: 5897, column: 52, scope: !4666)
!4722 = !DILocation(line: 5897, column: 81, scope: !4666)
!4723 = !DILocation(line: 5898, column: 35, scope: !4666)
!4724 = !DILocation(line: 5898, column: 52, scope: !4666)
!4725 = !DILocation(line: 5897, column: 7, scope: !4666)
!4726 = !DILocation(line: 5900, column: 10, scope: !4666)
!4727 = !DILocation(line: 5900, column: 16, scope: !4666)
!4728 = !DILocation(line: 5900, column: 26, scope: !4666)
!4729 = !DILocation(line: 5900, column: 30, scope: !4666)
!4730 = !DILocation(line: 5900, column: 49, scope: !4666)
!4731 = !DILocation(line: 5900, column: 9, scope: !4666)
!4732 = !DILocation(line: 5902, column: 7, scope: !4666)
!4733 = !DILocation(line: 5902, column: 13, scope: !4666)
!4734 = !DILocation(line: 5902, column: 23, scope: !4666)
!4735 = !DILocation(line: 5902, column: 27, scope: !4666)
!4736 = !DILocation(line: 5903, column: 5, scope: !4666)
!4737 = !DILocation(line: 5905, column: 26, scope: !4666)
!4738 = !DILocation(line: 5905, column: 32, scope: !4666)
!4739 = !DILocation(line: 5905, column: 9, scope: !4666)
!4740 = !DILocation(line: 5905, column: 40, scope: !4666)
!4741 = !DILocation(line: 5909, column: 7, scope: !4666)
!4742 = !DILocation(line: 5909, column: 13, scope: !4666)
!4743 = !DILocation(line: 5909, column: 21, scope: !4666)
!4744 = !DILocation(line: 5909, column: 39, scope: !4666)
!4745 = !DILocation(line: 5912, column: 7, scope: !4666)
!4746 = !DILocation(line: 5915, column: 28, scope: !4666)
!4747 = !DILocation(line: 5915, column: 34, scope: !4666)
!4748 = !DILocation(line: 5915, column: 11, scope: !4666)
!4749 = !DILocation(line: 5915, column: 42, scope: !4666)
!4750 = !DILocation(line: 5918, column: 9, scope: !4666)
!4751 = !DILocation(line: 5918, column: 15, scope: !4666)
!4752 = !DILocation(line: 5918, column: 23, scope: !4666)
!4753 = !DILocation(line: 5918, column: 41, scope: !4666)
!4754 = !DILocation(line: 5918, column: 47, scope: !4666)
!4755 = !DILocation(line: 5919, column: 7, scope: !4666)
!4756 = !DILocation(line: 5920, column: 5, scope: !4666)
!4757 = !DILocation(line: 5923, column: 30, scope: !4666)
!4758 = !DILocation(line: 5923, column: 7, scope: !4666)
!4759 = !DILocation(line: 5925, column: 3, scope: !4666)
!4760 = !DILocation(line: 5927, column: 13, scope: !4666)
!4761 = !DILocation(line: 5927, column: 19, scope: !4666)
!4762 = !DILocation(line: 5927, column: 26, scope: !4666)
!4763 = !DILocation(line: 5927, column: 35, scope: !4666)
!4764 = !DILocation(line: 5927, column: 40, scope: !4666)
!4765 = !DILocation(line: 5927, column: 57, scope: !4666)
!4766 = !DILocation(line: 5927, column: 86, scope: !4666)
!4767 = !DILocation(line: 5928, column: 40, scope: !4666)
!4768 = !DILocation(line: 5928, column: 57, scope: !4666)
!4769 = !DILocation(line: 5927, column: 12, scope: !4666)
!4770 = !DILocation(line: 5930, column: 10, scope: !4666)
!4771 = !DILocation(line: 5930, column: 16, scope: !4666)
!4772 = !DILocation(line: 5930, column: 26, scope: !4666)
!4773 = !DILocation(line: 5930, column: 30, scope: !4666)
!4774 = !DILocation(line: 5930, column: 49, scope: !4666)
!4775 = !DILocation(line: 5930, column: 9, scope: !4666)
!4776 = !DILocation(line: 5932, column: 7, scope: !4666)
!4777 = !DILocation(line: 5932, column: 13, scope: !4666)
!4778 = !DILocation(line: 5932, column: 23, scope: !4666)
!4779 = !DILocation(line: 5932, column: 27, scope: !4666)
!4780 = !DILocation(line: 5933, column: 5, scope: !4666)
!4781 = !DILocation(line: 5935, column: 26, scope: !4666)
!4782 = !DILocation(line: 5935, column: 32, scope: !4666)
!4783 = !DILocation(line: 5935, column: 9, scope: !4666)
!4784 = !DILocation(line: 5935, column: 40, scope: !4666)
!4785 = !DILocation(line: 5939, column: 7, scope: !4666)
!4786 = !DILocation(line: 5939, column: 13, scope: !4666)
!4787 = !DILocation(line: 5939, column: 21, scope: !4666)
!4788 = !DILocation(line: 5939, column: 39, scope: !4666)
!4789 = !DILocation(line: 5942, column: 7, scope: !4666)
!4790 = !DILocation(line: 5945, column: 28, scope: !4666)
!4791 = !DILocation(line: 5945, column: 34, scope: !4666)
!4792 = !DILocation(line: 5945, column: 11, scope: !4666)
!4793 = !DILocation(line: 5945, column: 42, scope: !4666)
!4794 = !DILocation(line: 5948, column: 9, scope: !4666)
!4795 = !DILocation(line: 5948, column: 15, scope: !4666)
!4796 = !DILocation(line: 5948, column: 23, scope: !4666)
!4797 = !DILocation(line: 5948, column: 41, scope: !4666)
!4798 = !DILocation(line: 5948, column: 47, scope: !4666)
!4799 = !DILocation(line: 5949, column: 7, scope: !4666)
!4800 = !DILocation(line: 5950, column: 5, scope: !4666)
!4801 = !DILocation(line: 5953, column: 30, scope: !4666)
!4802 = !DILocation(line: 5953, column: 7, scope: !4666)
!4803 = !DILocation(line: 5955, column: 3, scope: !4666)
!4804 = !DILocation(line: 5958, column: 28, scope: !4666)
!4805 = !DILocation(line: 5958, column: 5, scope: !4666)
!4806 = !DILocation(line: 5960, column: 1, scope: !4666)
!4807 = distinct !DISubprogram(name: "HAL_I2C_MasterTxCpltCallback", scope: !1, file: !1, line: 4401, type: !9, scopeLine: 4402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4808 = !DILocation(line: 4404, column: 3, scope: !4807)
!4809 = !DILocation(line: 4409, column: 1, scope: !4807)
!4810 = distinct !DISubprogram(name: "HAL_I2C_MasterRxCpltCallback", scope: !1, file: !1, line: 4417, type: !9, scopeLine: 4418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4811 = !DILocation(line: 4420, column: 3, scope: !4810)
!4812 = !DILocation(line: 4425, column: 1, scope: !4810)
!4813 = distinct !DISubprogram(name: "HAL_I2C_SlaveTxCpltCallback", scope: !1, file: !1, line: 4432, type: !9, scopeLine: 4433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4814 = !DILocation(line: 4435, column: 3, scope: !4813)
!4815 = !DILocation(line: 4440, column: 1, scope: !4813)
!4816 = distinct !DISubprogram(name: "HAL_I2C_SlaveRxCpltCallback", scope: !1, file: !1, line: 4448, type: !9, scopeLine: 4449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4817 = !DILocation(line: 4451, column: 3, scope: !4816)
!4818 = !DILocation(line: 4456, column: 1, scope: !4816)
!4819 = distinct !DISubprogram(name: "HAL_I2C_AddrCallback", scope: !1, file: !1, line: 4466, type: !9, scopeLine: 4467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4820 = !DILocation(line: 4469, column: 3, scope: !4819)
!4821 = !DILocation(line: 4470, column: 3, scope: !4819)
!4822 = !DILocation(line: 4471, column: 3, scope: !4819)
!4823 = !DILocation(line: 4476, column: 1, scope: !4819)
!4824 = distinct !DISubprogram(name: "HAL_I2C_ListenCpltCallback", scope: !1, file: !1, line: 4484, type: !9, scopeLine: 4485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4825 = !DILocation(line: 4487, column: 3, scope: !4824)
!4826 = !DILocation(line: 4492, column: 1, scope: !4824)
!4827 = distinct !DISubprogram(name: "HAL_I2C_MemTxCpltCallback", scope: !1, file: !1, line: 4500, type: !9, scopeLine: 4501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4828 = !DILocation(line: 4503, column: 3, scope: !4827)
!4829 = !DILocation(line: 4508, column: 1, scope: !4827)
!4830 = distinct !DISubprogram(name: "HAL_I2C_MemRxCpltCallback", scope: !1, file: !1, line: 4516, type: !9, scopeLine: 4517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4831 = !DILocation(line: 4519, column: 3, scope: !4830)
!4832 = !DILocation(line: 4524, column: 1, scope: !4830)
!4833 = distinct !DISubprogram(name: "HAL_I2C_ErrorCallback", scope: !1, file: !1, line: 4532, type: !9, scopeLine: 4533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4834 = !DILocation(line: 4535, column: 3, scope: !4833)
!4835 = !DILocation(line: 4540, column: 1, scope: !4833)
!4836 = distinct !DISubprogram(name: "HAL_I2C_AbortCpltCallback", scope: !1, file: !1, line: 4548, type: !9, scopeLine: 4549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4837 = !DILocation(line: 4551, column: 3, scope: !4836)
!4838 = !DILocation(line: 4556, column: 1, scope: !4836)
!4839 = distinct !DISubprogram(name: "HAL_I2C_GetState", scope: !1, file: !1, line: 4583, type: !9, scopeLine: 4584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4840 = !DILocation(line: 4586, column: 10, scope: !4839)
!4841 = !DILocation(line: 4586, column: 16, scope: !4839)
!4842 = !DILocation(line: 4586, column: 3, scope: !4839)
!4843 = distinct !DISubprogram(name: "HAL_I2C_GetMode", scope: !1, file: !1, line: 4595, type: !9, scopeLine: 4596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4844 = !DILocation(line: 4597, column: 10, scope: !4843)
!4845 = !DILocation(line: 4597, column: 16, scope: !4843)
!4846 = !DILocation(line: 4597, column: 3, scope: !4843)
!4847 = distinct !DISubprogram(name: "HAL_I2C_GetError", scope: !1, file: !1, line: 4606, type: !9, scopeLine: 4607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4848 = !DILocation(line: 4608, column: 10, scope: !4847)
!4849 = !DILocation(line: 4608, column: 16, scope: !4847)
!4850 = !DILocation(line: 4608, column: 3, scope: !4847)
!4851 = distinct !DISubprogram(name: "I2C_Flush_TXDR", scope: !1, file: !1, line: 6005, type: !9, scopeLine: 6006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4852 = !DILocation(line: 6009, column: 7, scope: !4851)
!4853 = !DILocation(line: 6009, column: 47, scope: !4851)
!4854 = !DILocation(line: 6011, column: 5, scope: !4851)
!4855 = !DILocation(line: 6011, column: 11, scope: !4851)
!4856 = !DILocation(line: 6011, column: 21, scope: !4851)
!4857 = !DILocation(line: 6011, column: 26, scope: !4851)
!4858 = !DILocation(line: 6012, column: 3, scope: !4851)
!4859 = !DILocation(line: 6015, column: 7, scope: !4851)
!4860 = !DILocation(line: 6015, column: 46, scope: !4851)
!4861 = !DILocation(line: 6017, column: 5, scope: !4851)
!4862 = !DILocation(line: 6018, column: 3, scope: !4851)
!4863 = !DILocation(line: 6019, column: 1, scope: !4851)
!4864 = distinct !DISubprogram(name: "I2C_ITMasterSeqCplt", scope: !1, file: !1, line: 5375, type: !9, scopeLine: 5376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4865 = !DILocation(line: 5378, column: 3, scope: !4864)
!4866 = !DILocation(line: 5378, column: 9, scope: !4864)
!4867 = !DILocation(line: 5378, column: 14, scope: !4864)
!4868 = !DILocation(line: 5382, column: 7, scope: !4864)
!4869 = !DILocation(line: 5382, column: 13, scope: !4864)
!4870 = !DILocation(line: 5382, column: 19, scope: !4864)
!4871 = !DILocation(line: 5384, column: 5, scope: !4864)
!4872 = !DILocation(line: 5384, column: 11, scope: !4864)
!4873 = !DILocation(line: 5384, column: 25, scope: !4864)
!4874 = !DILocation(line: 5385, column: 5, scope: !4864)
!4875 = !DILocation(line: 5385, column: 11, scope: !4864)
!4876 = !DILocation(line: 5385, column: 25, scope: !4864)
!4877 = !DILocation(line: 5386, column: 5, scope: !4864)
!4878 = !DILocation(line: 5386, column: 11, scope: !4864)
!4879 = !DILocation(line: 5386, column: 25, scope: !4864)
!4880 = !DILocation(line: 5389, column: 21, scope: !4864)
!4881 = !DILocation(line: 5389, column: 5, scope: !4864)
!4882 = !DILocation(line: 5392, column: 5, scope: !4864)
!4883 = !DILocation(line: 5398, column: 34, scope: !4864)
!4884 = !DILocation(line: 5398, column: 5, scope: !4864)
!4885 = !DILocation(line: 5400, column: 3, scope: !4864)
!4886 = !DILocation(line: 5404, column: 5, scope: !4864)
!4887 = !DILocation(line: 5404, column: 11, scope: !4864)
!4888 = !DILocation(line: 5404, column: 25, scope: !4864)
!4889 = !DILocation(line: 5405, column: 5, scope: !4864)
!4890 = !DILocation(line: 5405, column: 11, scope: !4864)
!4891 = !DILocation(line: 5405, column: 25, scope: !4864)
!4892 = !DILocation(line: 5406, column: 5, scope: !4864)
!4893 = !DILocation(line: 5406, column: 11, scope: !4864)
!4894 = !DILocation(line: 5406, column: 25, scope: !4864)
!4895 = !DILocation(line: 5409, column: 21, scope: !4864)
!4896 = !DILocation(line: 5409, column: 5, scope: !4864)
!4897 = !DILocation(line: 5412, column: 5, scope: !4864)
!4898 = !DILocation(line: 5418, column: 34, scope: !4864)
!4899 = !DILocation(line: 5418, column: 5, scope: !4864)
!4900 = !DILocation(line: 5421, column: 1, scope: !4864)
!4901 = distinct !DISubprogram(name: "I2C_ITMasterCplt", scope: !1, file: !1, line: 5502, type: !9, scopeLine: 5503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!4902 = !DILocation(line: 5505, column: 25, scope: !4901)
!4903 = !DILocation(line: 5505, column: 12, scope: !4901)
!4904 = !DILocation(line: 5509, column: 3, scope: !4901)
!4905 = !DILocation(line: 5512, column: 7, scope: !4901)
!4906 = !DILocation(line: 5512, column: 13, scope: !4901)
!4907 = !DILocation(line: 5512, column: 19, scope: !4901)
!4908 = !DILocation(line: 5514, column: 21, scope: !4901)
!4909 = !DILocation(line: 5514, column: 5, scope: !4901)
!4910 = !DILocation(line: 5515, column: 5, scope: !4901)
!4911 = !DILocation(line: 5515, column: 11, scope: !4901)
!4912 = !DILocation(line: 5515, column: 25, scope: !4901)
!4913 = !DILocation(line: 5516, column: 3, scope: !4901)
!4914 = !DILocation(line: 5517, column: 12, scope: !4901)
!4915 = !DILocation(line: 5517, column: 18, scope: !4901)
!4916 = !DILocation(line: 5517, column: 24, scope: !4901)
!4917 = !DILocation(line: 5519, column: 21, scope: !4901)
!4918 = !DILocation(line: 5519, column: 5, scope: !4901)
!4919 = !DILocation(line: 5520, column: 5, scope: !4901)
!4920 = !DILocation(line: 5520, column: 11, scope: !4901)
!4921 = !DILocation(line: 5520, column: 25, scope: !4901)
!4922 = !DILocation(line: 5521, column: 3, scope: !4901)
!4923 = !DILocation(line: 5528, column: 3, scope: !4901)
!4924 = !DILocation(line: 5531, column: 3, scope: !4901)
!4925 = !DILocation(line: 5531, column: 9, scope: !4901)
!4926 = !DILocation(line: 5531, column: 23, scope: !4901)
!4927 = !DILocation(line: 5532, column: 3, scope: !4901)
!4928 = !DILocation(line: 5532, column: 9, scope: !4901)
!4929 = !DILocation(line: 5532, column: 23, scope: !4901)
!4930 = !DILocation(line: 5534, column: 7, scope: !4901)
!4931 = !DILocation(line: 5534, column: 47, scope: !4901)
!4932 = !DILocation(line: 5537, column: 5, scope: !4901)
!4933 = !DILocation(line: 5540, column: 5, scope: !4901)
!4934 = !DILocation(line: 5540, column: 11, scope: !4901)
!4935 = !DILocation(line: 5540, column: 21, scope: !4901)
!4936 = !DILocation(line: 5541, column: 3, scope: !4901)
!4937 = !DILocation(line: 5544, column: 8, scope: !4901)
!4938 = !DILocation(line: 5544, column: 14, scope: !4901)
!4939 = !DILocation(line: 5544, column: 20, scope: !4901)
!4940 = !DILocation(line: 5544, column: 44, scope: !4901)
!4941 = !DILocation(line: 5544, column: 48, scope: !4901)
!4942 = !DILocation(line: 5544, column: 90, scope: !4901)
!4943 = !DILocation(line: 5544, column: 7, scope: !4901)
!4944 = !DILocation(line: 5547, column: 23, scope: !4901)
!4945 = !DILocation(line: 5547, column: 29, scope: !4901)
!4946 = !DILocation(line: 5547, column: 39, scope: !4901)
!4947 = !DILocation(line: 5547, column: 14, scope: !4901)
!4948 = !DILocation(line: 5547, column: 12, scope: !4901)
!4949 = !DILocation(line: 5548, column: 5, scope: !4901)
!4950 = !DILocation(line: 5549, column: 3, scope: !4901)
!4951 = !DILocation(line: 5552, column: 18, scope: !4901)
!4952 = !DILocation(line: 5552, column: 3, scope: !4901)
!4953 = !DILocation(line: 5555, column: 14, scope: !4901)
!4954 = !DILocation(line: 5555, column: 20, scope: !4901)
!4955 = !DILocation(line: 5555, column: 12, scope: !4901)
!4956 = !DILocation(line: 5558, column: 8, scope: !4901)
!4957 = !DILocation(line: 5558, column: 14, scope: !4901)
!4958 = !DILocation(line: 5558, column: 20, scope: !4901)
!4959 = !DILocation(line: 5558, column: 44, scope: !4901)
!4960 = !DILocation(line: 5558, column: 48, scope: !4901)
!4961 = !DILocation(line: 5558, column: 57, scope: !4901)
!4962 = !DILocation(line: 5558, column: 7, scope: !4901)
!4963 = !DILocation(line: 5561, column: 17, scope: !4901)
!4964 = !DILocation(line: 5561, column: 23, scope: !4901)
!4965 = !DILocation(line: 5561, column: 29, scope: !4901)
!4966 = !DILocation(line: 5561, column: 5, scope: !4901)
!4967 = !DILocation(line: 5562, column: 3, scope: !4901)
!4968 = !DILocation(line: 5564, column: 12, scope: !4901)
!4969 = !DILocation(line: 5564, column: 18, scope: !4901)
!4970 = !DILocation(line: 5564, column: 24, scope: !4901)
!4971 = !DILocation(line: 5566, column: 5, scope: !4901)
!4972 = !DILocation(line: 5566, column: 11, scope: !4901)
!4973 = !DILocation(line: 5566, column: 17, scope: !4901)
!4974 = !DILocation(line: 5567, column: 5, scope: !4901)
!4975 = !DILocation(line: 5567, column: 11, scope: !4901)
!4976 = !DILocation(line: 5567, column: 25, scope: !4901)
!4977 = !DILocation(line: 5569, column: 9, scope: !4901)
!4978 = !DILocation(line: 5569, column: 15, scope: !4901)
!4979 = !DILocation(line: 5569, column: 20, scope: !4901)
!4980 = !DILocation(line: 5571, column: 7, scope: !4901)
!4981 = !DILocation(line: 5571, column: 13, scope: !4901)
!4982 = !DILocation(line: 5571, column: 18, scope: !4901)
!4983 = !DILocation(line: 5574, column: 7, scope: !4901)
!4984 = !DILocation(line: 5580, column: 33, scope: !4901)
!4985 = !DILocation(line: 5580, column: 7, scope: !4901)
!4986 = !DILocation(line: 5582, column: 5, scope: !4901)
!4987 = !DILocation(line: 5585, column: 7, scope: !4901)
!4988 = !DILocation(line: 5585, column: 13, scope: !4901)
!4989 = !DILocation(line: 5585, column: 18, scope: !4901)
!4990 = !DILocation(line: 5588, column: 7, scope: !4901)
!4991 = !DILocation(line: 5594, column: 36, scope: !4901)
!4992 = !DILocation(line: 5594, column: 7, scope: !4901)
!4993 = !DILocation(line: 5597, column: 3, scope: !4901)
!4994 = !DILocation(line: 5599, column: 12, scope: !4901)
!4995 = !DILocation(line: 5599, column: 18, scope: !4901)
!4996 = !DILocation(line: 5599, column: 24, scope: !4901)
!4997 = !DILocation(line: 5601, column: 5, scope: !4901)
!4998 = !DILocation(line: 5601, column: 11, scope: !4901)
!4999 = !DILocation(line: 5601, column: 17, scope: !4901)
!5000 = !DILocation(line: 5602, column: 5, scope: !4901)
!5001 = !DILocation(line: 5602, column: 11, scope: !4901)
!5002 = !DILocation(line: 5602, column: 25, scope: !4901)
!5003 = !DILocation(line: 5604, column: 9, scope: !4901)
!5004 = !DILocation(line: 5604, column: 15, scope: !4901)
!5005 = !DILocation(line: 5604, column: 20, scope: !4901)
!5006 = !DILocation(line: 5606, column: 7, scope: !4901)
!5007 = !DILocation(line: 5606, column: 13, scope: !4901)
!5008 = !DILocation(line: 5606, column: 18, scope: !4901)
!5009 = !DILocation(line: 5609, column: 7, scope: !4901)
!5010 = !DILocation(line: 5615, column: 33, scope: !4901)
!5011 = !DILocation(line: 5615, column: 7, scope: !4901)
!5012 = !DILocation(line: 5617, column: 5, scope: !4901)
!5013 = !DILocation(line: 5620, column: 7, scope: !4901)
!5014 = !DILocation(line: 5620, column: 13, scope: !4901)
!5015 = !DILocation(line: 5620, column: 18, scope: !4901)
!5016 = !DILocation(line: 5623, column: 7, scope: !4901)
!5017 = !DILocation(line: 5629, column: 36, scope: !4901)
!5018 = !DILocation(line: 5629, column: 7, scope: !4901)
!5019 = !DILocation(line: 5632, column: 3, scope: !4901)
!5020 = !DILocation(line: 5637, column: 1, scope: !4901)
!5021 = distinct !DISubprogram(name: "I2C_ITSlaveCplt", scope: !1, file: !1, line: 5645, type: !9, scopeLine: 5646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5022 = !DILocation(line: 5647, column: 26, scope: !5021)
!5023 = !DILocation(line: 5647, column: 12, scope: !5021)
!5024 = !DILocation(line: 5648, column: 25, scope: !5021)
!5025 = !DILocation(line: 5648, column: 12, scope: !5021)
!5026 = !DILocation(line: 5649, column: 35, scope: !5021)
!5027 = !DILocation(line: 5649, column: 41, scope: !5021)
!5028 = !DILocation(line: 5649, column: 24, scope: !5021)
!5029 = !DILocation(line: 5652, column: 3, scope: !5021)
!5030 = !DILocation(line: 5655, column: 8, scope: !5021)
!5031 = !DILocation(line: 5655, column: 17, scope: !5021)
!5032 = !DILocation(line: 5655, column: 43, scope: !5021)
!5033 = !DILocation(line: 5655, column: 47, scope: !5021)
!5034 = !DILocation(line: 5655, column: 56, scope: !5021)
!5035 = !DILocation(line: 5655, column: 7, scope: !5021)
!5036 = !DILocation(line: 5657, column: 21, scope: !5021)
!5037 = !DILocation(line: 5657, column: 5, scope: !5021)
!5038 = !DILocation(line: 5658, column: 5, scope: !5021)
!5039 = !DILocation(line: 5658, column: 11, scope: !5021)
!5040 = !DILocation(line: 5658, column: 25, scope: !5021)
!5041 = !DILocation(line: 5659, column: 3, scope: !5021)
!5042 = !DILocation(line: 5660, column: 13, scope: !5021)
!5043 = !DILocation(line: 5660, column: 22, scope: !5021)
!5044 = !DILocation(line: 5660, column: 48, scope: !5021)
!5045 = !DILocation(line: 5660, column: 52, scope: !5021)
!5046 = !DILocation(line: 5660, column: 61, scope: !5021)
!5047 = !DILocation(line: 5660, column: 12, scope: !5021)
!5048 = !DILocation(line: 5662, column: 21, scope: !5021)
!5049 = !DILocation(line: 5662, column: 5, scope: !5021)
!5050 = !DILocation(line: 5663, column: 5, scope: !5021)
!5051 = !DILocation(line: 5663, column: 11, scope: !5021)
!5052 = !DILocation(line: 5663, column: 25, scope: !5021)
!5053 = !DILocation(line: 5664, column: 3, scope: !5021)
!5054 = !DILocation(line: 5671, column: 3, scope: !5021)
!5055 = !DILocation(line: 5671, column: 9, scope: !5021)
!5056 = !DILocation(line: 5671, column: 19, scope: !5021)
!5057 = !DILocation(line: 5671, column: 23, scope: !5021)
!5058 = !DILocation(line: 5674, column: 3, scope: !5021)
!5059 = !DILocation(line: 5677, column: 18, scope: !5021)
!5060 = !DILocation(line: 5677, column: 3, scope: !5021)
!5061 = !DILocation(line: 5680, column: 7, scope: !5021)
!5062 = !DILocation(line: 5680, column: 57, scope: !5021)
!5063 = !DILocation(line: 5683, column: 5, scope: !5021)
!5064 = !DILocation(line: 5683, column: 11, scope: !5021)
!5065 = !DILocation(line: 5683, column: 21, scope: !5021)
!5066 = !DILocation(line: 5683, column: 25, scope: !5021)
!5067 = !DILocation(line: 5685, column: 9, scope: !5021)
!5068 = !DILocation(line: 5685, column: 15, scope: !5021)
!5069 = !DILocation(line: 5685, column: 22, scope: !5021)
!5070 = !DILocation(line: 5687, column: 35, scope: !5021)
!5071 = !DILocation(line: 5687, column: 25, scope: !5021)
!5072 = !DILocation(line: 5687, column: 7, scope: !5021)
!5073 = !DILocation(line: 5687, column: 13, scope: !5021)
!5074 = !DILocation(line: 5687, column: 23, scope: !5021)
!5075 = !DILocation(line: 5688, column: 5, scope: !5021)
!5076 = !DILocation(line: 5689, column: 3, scope: !5021)
!5077 = !DILocation(line: 5690, column: 12, scope: !5021)
!5078 = !DILocation(line: 5690, column: 62, scope: !5021)
!5079 = !DILocation(line: 5693, column: 5, scope: !5021)
!5080 = !DILocation(line: 5693, column: 11, scope: !5021)
!5081 = !DILocation(line: 5693, column: 21, scope: !5021)
!5082 = !DILocation(line: 5693, column: 25, scope: !5021)
!5083 = !DILocation(line: 5695, column: 9, scope: !5021)
!5084 = !DILocation(line: 5695, column: 15, scope: !5021)
!5085 = !DILocation(line: 5695, column: 22, scope: !5021)
!5086 = !DILocation(line: 5697, column: 35, scope: !5021)
!5087 = !DILocation(line: 5697, column: 25, scope: !5021)
!5088 = !DILocation(line: 5697, column: 7, scope: !5021)
!5089 = !DILocation(line: 5697, column: 13, scope: !5021)
!5090 = !DILocation(line: 5697, column: 23, scope: !5021)
!5091 = !DILocation(line: 5698, column: 5, scope: !5021)
!5092 = !DILocation(line: 5699, column: 3, scope: !5021)
!5093 = !DILocation(line: 5706, column: 7, scope: !5021)
!5094 = !DILocation(line: 5706, column: 49, scope: !5021)
!5095 = !DILocation(line: 5709, column: 16, scope: !5021)
!5096 = !DILocation(line: 5712, column: 32, scope: !5021)
!5097 = !DILocation(line: 5712, column: 38, scope: !5021)
!5098 = !DILocation(line: 5712, column: 48, scope: !5021)
!5099 = !DILocation(line: 5712, column: 23, scope: !5021)
!5100 = !DILocation(line: 5712, column: 6, scope: !5021)
!5101 = !DILocation(line: 5712, column: 12, scope: !5021)
!5102 = !DILocation(line: 5712, column: 21, scope: !5021)
!5103 = !DILocation(line: 5715, column: 5, scope: !5021)
!5104 = !DILocation(line: 5715, column: 11, scope: !5021)
!5105 = !DILocation(line: 5715, column: 19, scope: !5021)
!5106 = !DILocation(line: 5717, column: 10, scope: !5021)
!5107 = !DILocation(line: 5717, column: 16, scope: !5021)
!5108 = !DILocation(line: 5717, column: 25, scope: !5021)
!5109 = !DILocation(line: 5717, column: 9, scope: !5021)
!5110 = !DILocation(line: 5719, column: 7, scope: !5021)
!5111 = !DILocation(line: 5719, column: 13, scope: !5021)
!5112 = !DILocation(line: 5719, column: 21, scope: !5021)
!5113 = !DILocation(line: 5720, column: 7, scope: !5021)
!5114 = !DILocation(line: 5720, column: 13, scope: !5021)
!5115 = !DILocation(line: 5720, column: 22, scope: !5021)
!5116 = !DILocation(line: 5721, column: 5, scope: !5021)
!5117 = !DILocation(line: 5722, column: 3, scope: !5021)
!5118 = !DILocation(line: 5725, column: 7, scope: !5021)
!5119 = !DILocation(line: 5725, column: 13, scope: !5021)
!5120 = !DILocation(line: 5725, column: 23, scope: !5021)
!5121 = !DILocation(line: 5728, column: 5, scope: !5021)
!5122 = !DILocation(line: 5728, column: 11, scope: !5021)
!5123 = !DILocation(line: 5728, column: 21, scope: !5021)
!5124 = !DILocation(line: 5729, column: 3, scope: !5021)
!5125 = !DILocation(line: 5731, column: 3, scope: !5021)
!5126 = !DILocation(line: 5731, column: 9, scope: !5021)
!5127 = !DILocation(line: 5731, column: 14, scope: !5021)
!5128 = !DILocation(line: 5732, column: 3, scope: !5021)
!5129 = !DILocation(line: 5732, column: 9, scope: !5021)
!5130 = !DILocation(line: 5732, column: 17, scope: !5021)
!5131 = !DILocation(line: 5734, column: 7, scope: !5021)
!5132 = !DILocation(line: 5734, column: 13, scope: !5021)
!5133 = !DILocation(line: 5734, column: 23, scope: !5021)
!5134 = !DILocation(line: 5737, column: 17, scope: !5021)
!5135 = !DILocation(line: 5737, column: 23, scope: !5021)
!5136 = !DILocation(line: 5737, column: 29, scope: !5021)
!5137 = !DILocation(line: 5737, column: 5, scope: !5021)
!5138 = !DILocation(line: 5740, column: 9, scope: !5021)
!5139 = !DILocation(line: 5740, column: 15, scope: !5021)
!5140 = !DILocation(line: 5740, column: 21, scope: !5021)
!5141 = !DILocation(line: 5743, column: 24, scope: !5021)
!5142 = !DILocation(line: 5743, column: 30, scope: !5021)
!5143 = !DILocation(line: 5743, column: 7, scope: !5021)
!5144 = !DILocation(line: 5744, column: 5, scope: !5021)
!5145 = !DILocation(line: 5745, column: 3, scope: !5021)
!5146 = !DILocation(line: 5746, column: 12, scope: !5021)
!5147 = !DILocation(line: 5746, column: 18, scope: !5021)
!5148 = !DILocation(line: 5746, column: 30, scope: !5021)
!5149 = !DILocation(line: 5749, column: 24, scope: !5021)
!5150 = !DILocation(line: 5749, column: 5, scope: !5021)
!5151 = !DILocation(line: 5751, column: 5, scope: !5021)
!5152 = !DILocation(line: 5751, column: 11, scope: !5021)
!5153 = !DILocation(line: 5751, column: 23, scope: !5021)
!5154 = !DILocation(line: 5752, column: 5, scope: !5021)
!5155 = !DILocation(line: 5752, column: 11, scope: !5021)
!5156 = !DILocation(line: 5752, column: 17, scope: !5021)
!5157 = !DILocation(line: 5753, column: 5, scope: !5021)
!5158 = !DILocation(line: 5753, column: 11, scope: !5021)
!5159 = !DILocation(line: 5753, column: 25, scope: !5021)
!5160 = !DILocation(line: 5756, column: 5, scope: !5021)
!5161 = !DILocation(line: 5762, column: 32, scope: !5021)
!5162 = !DILocation(line: 5762, column: 5, scope: !5021)
!5163 = !DILocation(line: 5764, column: 3, scope: !5021)
!5164 = !DILocation(line: 5766, column: 12, scope: !5021)
!5165 = !DILocation(line: 5766, column: 18, scope: !5021)
!5166 = !DILocation(line: 5766, column: 24, scope: !5021)
!5167 = !DILocation(line: 5768, column: 5, scope: !5021)
!5168 = !DILocation(line: 5768, column: 11, scope: !5021)
!5169 = !DILocation(line: 5768, column: 17, scope: !5021)
!5170 = !DILocation(line: 5769, column: 5, scope: !5021)
!5171 = !DILocation(line: 5769, column: 11, scope: !5021)
!5172 = !DILocation(line: 5769, column: 25, scope: !5021)
!5173 = !DILocation(line: 5772, column: 5, scope: !5021)
!5174 = !DILocation(line: 5778, column: 33, scope: !5021)
!5175 = !DILocation(line: 5778, column: 5, scope: !5021)
!5176 = !DILocation(line: 5780, column: 3, scope: !5021)
!5177 = !DILocation(line: 5783, column: 5, scope: !5021)
!5178 = !DILocation(line: 5783, column: 11, scope: !5021)
!5179 = !DILocation(line: 5783, column: 17, scope: !5021)
!5180 = !DILocation(line: 5784, column: 5, scope: !5021)
!5181 = !DILocation(line: 5784, column: 11, scope: !5021)
!5182 = !DILocation(line: 5784, column: 25, scope: !5021)
!5183 = !DILocation(line: 5787, column: 5, scope: !5021)
!5184 = !DILocation(line: 5793, column: 33, scope: !5021)
!5185 = !DILocation(line: 5793, column: 5, scope: !5021)
!5186 = !DILocation(line: 5796, column: 1, scope: !5021)
!5187 = distinct !DISubprogram(name: "I2C_ITListenCplt", scope: !1, file: !1, line: 5804, type: !9, scopeLine: 5805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5188 = !DILocation(line: 5807, column: 3, scope: !5187)
!5189 = !DILocation(line: 5807, column: 9, scope: !5187)
!5190 = !DILocation(line: 5807, column: 21, scope: !5187)
!5191 = !DILocation(line: 5808, column: 3, scope: !5187)
!5192 = !DILocation(line: 5808, column: 9, scope: !5187)
!5193 = !DILocation(line: 5808, column: 23, scope: !5187)
!5194 = !DILocation(line: 5809, column: 3, scope: !5187)
!5195 = !DILocation(line: 5809, column: 9, scope: !5187)
!5196 = !DILocation(line: 5809, column: 15, scope: !5187)
!5197 = !DILocation(line: 5810, column: 3, scope: !5187)
!5198 = !DILocation(line: 5810, column: 9, scope: !5187)
!5199 = !DILocation(line: 5810, column: 14, scope: !5187)
!5200 = !DILocation(line: 5811, column: 3, scope: !5187)
!5201 = !DILocation(line: 5811, column: 9, scope: !5187)
!5202 = !DILocation(line: 5811, column: 17, scope: !5187)
!5203 = !DILocation(line: 5814, column: 7, scope: !5187)
!5204 = !DILocation(line: 5814, column: 46, scope: !5187)
!5205 = !DILocation(line: 5817, column: 32, scope: !5187)
!5206 = !DILocation(line: 5817, column: 38, scope: !5187)
!5207 = !DILocation(line: 5817, column: 48, scope: !5187)
!5208 = !DILocation(line: 5817, column: 23, scope: !5187)
!5209 = !DILocation(line: 5817, column: 6, scope: !5187)
!5210 = !DILocation(line: 5817, column: 12, scope: !5187)
!5211 = !DILocation(line: 5817, column: 21, scope: !5187)
!5212 = !DILocation(line: 5820, column: 5, scope: !5187)
!5213 = !DILocation(line: 5820, column: 11, scope: !5187)
!5214 = !DILocation(line: 5820, column: 19, scope: !5187)
!5215 = !DILocation(line: 5822, column: 10, scope: !5187)
!5216 = !DILocation(line: 5822, column: 16, scope: !5187)
!5217 = !DILocation(line: 5822, column: 25, scope: !5187)
!5218 = !DILocation(line: 5822, column: 9, scope: !5187)
!5219 = !DILocation(line: 5824, column: 7, scope: !5187)
!5220 = !DILocation(line: 5824, column: 13, scope: !5187)
!5221 = !DILocation(line: 5824, column: 21, scope: !5187)
!5222 = !DILocation(line: 5825, column: 7, scope: !5187)
!5223 = !DILocation(line: 5825, column: 13, scope: !5187)
!5224 = !DILocation(line: 5825, column: 22, scope: !5187)
!5225 = !DILocation(line: 5828, column: 7, scope: !5187)
!5226 = !DILocation(line: 5828, column: 13, scope: !5187)
!5227 = !DILocation(line: 5828, column: 23, scope: !5187)
!5228 = !DILocation(line: 5829, column: 5, scope: !5187)
!5229 = !DILocation(line: 5830, column: 3, scope: !5187)
!5230 = !DILocation(line: 5833, column: 19, scope: !5187)
!5231 = !DILocation(line: 5833, column: 3, scope: !5187)
!5232 = !DILocation(line: 5836, column: 3, scope: !5187)
!5233 = !DILocation(line: 5839, column: 3, scope: !5187)
!5234 = !DILocation(line: 5845, column: 30, scope: !5187)
!5235 = !DILocation(line: 5845, column: 3, scope: !5187)
!5236 = !DILocation(line: 5847, column: 1, scope: !5187)
!5237 = distinct !DISubprogram(name: "I2C_ITSlaveSeqCplt", scope: !1, file: !1, line: 5428, type: !9, scopeLine: 5429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5238 = !DILocation(line: 5430, column: 26, scope: !5237)
!5239 = !DILocation(line: 5430, column: 12, scope: !5237)
!5240 = !DILocation(line: 5433, column: 3, scope: !5237)
!5241 = !DILocation(line: 5433, column: 9, scope: !5237)
!5242 = !DILocation(line: 5433, column: 14, scope: !5237)
!5243 = !DILocation(line: 5436, column: 7, scope: !5237)
!5244 = !DILocation(line: 5436, column: 57, scope: !5237)
!5245 = !DILocation(line: 5439, column: 5, scope: !5237)
!5246 = !DILocation(line: 5439, column: 11, scope: !5237)
!5247 = !DILocation(line: 5439, column: 21, scope: !5237)
!5248 = !DILocation(line: 5439, column: 25, scope: !5237)
!5249 = !DILocation(line: 5440, column: 3, scope: !5237)
!5250 = !DILocation(line: 5441, column: 12, scope: !5237)
!5251 = !DILocation(line: 5441, column: 62, scope: !5237)
!5252 = !DILocation(line: 5444, column: 5, scope: !5237)
!5253 = !DILocation(line: 5444, column: 11, scope: !5237)
!5254 = !DILocation(line: 5444, column: 21, scope: !5237)
!5255 = !DILocation(line: 5444, column: 25, scope: !5237)
!5256 = !DILocation(line: 5445, column: 3, scope: !5237)
!5257 = !DILocation(line: 5451, column: 7, scope: !5237)
!5258 = !DILocation(line: 5451, column: 13, scope: !5237)
!5259 = !DILocation(line: 5451, column: 19, scope: !5237)
!5260 = !DILocation(line: 5454, column: 5, scope: !5237)
!5261 = !DILocation(line: 5454, column: 11, scope: !5237)
!5262 = !DILocation(line: 5454, column: 25, scope: !5237)
!5263 = !DILocation(line: 5455, column: 5, scope: !5237)
!5264 = !DILocation(line: 5455, column: 11, scope: !5237)
!5265 = !DILocation(line: 5455, column: 25, scope: !5237)
!5266 = !DILocation(line: 5458, column: 21, scope: !5237)
!5267 = !DILocation(line: 5458, column: 5, scope: !5237)
!5268 = !DILocation(line: 5461, column: 5, scope: !5237)
!5269 = !DILocation(line: 5467, column: 33, scope: !5237)
!5270 = !DILocation(line: 5467, column: 5, scope: !5237)
!5271 = !DILocation(line: 5469, column: 3, scope: !5237)
!5272 = !DILocation(line: 5471, column: 12, scope: !5237)
!5273 = !DILocation(line: 5471, column: 18, scope: !5237)
!5274 = !DILocation(line: 5471, column: 24, scope: !5237)
!5275 = !DILocation(line: 5474, column: 5, scope: !5237)
!5276 = !DILocation(line: 5474, column: 11, scope: !5237)
!5277 = !DILocation(line: 5474, column: 25, scope: !5237)
!5278 = !DILocation(line: 5475, column: 5, scope: !5237)
!5279 = !DILocation(line: 5475, column: 11, scope: !5237)
!5280 = !DILocation(line: 5475, column: 25, scope: !5237)
!5281 = !DILocation(line: 5478, column: 21, scope: !5237)
!5282 = !DILocation(line: 5478, column: 5, scope: !5237)
!5283 = !DILocation(line: 5481, column: 5, scope: !5237)
!5284 = !DILocation(line: 5487, column: 33, scope: !5237)
!5285 = !DILocation(line: 5487, column: 5, scope: !5237)
!5286 = !DILocation(line: 5489, column: 3, scope: !5237)
!5287 = !DILocation(line: 5494, column: 1, scope: !5237)
!5288 = distinct !DISubprogram(name: "I2C_ITAddrCplt", scope: !1, file: !1, line: 5280, type: !9, scopeLine: 5281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5289 = !DILocation(line: 5288, column: 3, scope: !5288)
!5290 = !DILocation(line: 5291, column: 18, scope: !5288)
!5291 = !DILocation(line: 5291, column: 24, scope: !5288)
!5292 = !DILocation(line: 5291, column: 8, scope: !5288)
!5293 = !DILocation(line: 5291, column: 30, scope: !5288)
!5294 = !DILocation(line: 5291, column: 64, scope: !5288)
!5295 = !DILocation(line: 5291, column: 7, scope: !5288)
!5296 = !DILocation(line: 5293, column: 25, scope: !5288)
!5297 = !DILocation(line: 5293, column: 23, scope: !5288)
!5298 = !DILocation(line: 5294, column: 25, scope: !5288)
!5299 = !DILocation(line: 5294, column: 23, scope: !5288)
!5300 = !DILocation(line: 5295, column: 25, scope: !5288)
!5301 = !DILocation(line: 5295, column: 23, scope: !5288)
!5302 = !DILocation(line: 5296, column: 25, scope: !5288)
!5303 = !DILocation(line: 5296, column: 23, scope: !5288)
!5304 = !DILocation(line: 5299, column: 9, scope: !5288)
!5305 = !DILocation(line: 5299, column: 15, scope: !5288)
!5306 = !DILocation(line: 5299, column: 20, scope: !5288)
!5307 = !DILocation(line: 5299, column: 35, scope: !5288)
!5308 = !DILocation(line: 5301, column: 12, scope: !5288)
!5309 = !DILocation(line: 5301, column: 26, scope: !5288)
!5310 = !DILocation(line: 5301, column: 48, scope: !5288)
!5311 = !DILocation(line: 5301, column: 60, scope: !5288)
!5312 = !DILocation(line: 5301, column: 80, scope: !5288)
!5313 = !DILocation(line: 5301, column: 43, scope: !5288)
!5314 = !DILocation(line: 5301, column: 11, scope: !5288)
!5315 = !DILocation(line: 5303, column: 25, scope: !5288)
!5316 = !DILocation(line: 5303, column: 23, scope: !5288)
!5317 = !DILocation(line: 5304, column: 9, scope: !5288)
!5318 = !DILocation(line: 5304, column: 15, scope: !5288)
!5319 = !DILocation(line: 5304, column: 29, scope: !5288)
!5320 = !DILocation(line: 5305, column: 13, scope: !5288)
!5321 = !DILocation(line: 5305, column: 19, scope: !5288)
!5322 = !DILocation(line: 5305, column: 34, scope: !5288)
!5323 = !DILocation(line: 5308, column: 11, scope: !5288)
!5324 = !DILocation(line: 5308, column: 17, scope: !5288)
!5325 = !DILocation(line: 5308, column: 32, scope: !5288)
!5326 = !DILocation(line: 5311, column: 11, scope: !5288)
!5327 = !DILocation(line: 5314, column: 11, scope: !5288)
!5328 = !DILocation(line: 5320, column: 32, scope: !5288)
!5329 = !DILocation(line: 5320, column: 38, scope: !5288)
!5330 = !DILocation(line: 5320, column: 57, scope: !5288)
!5331 = !DILocation(line: 5320, column: 11, scope: !5288)
!5332 = !DILocation(line: 5322, column: 9, scope: !5288)
!5333 = !DILocation(line: 5323, column: 7, scope: !5288)
!5334 = !DILocation(line: 5326, column: 25, scope: !5288)
!5335 = !DILocation(line: 5326, column: 23, scope: !5288)
!5336 = !DILocation(line: 5329, column: 25, scope: !5288)
!5337 = !DILocation(line: 5329, column: 9, scope: !5288)
!5338 = !DILocation(line: 5332, column: 9, scope: !5288)
!5339 = !DILocation(line: 5338, column: 30, scope: !5288)
!5340 = !DILocation(line: 5338, column: 36, scope: !5288)
!5341 = !DILocation(line: 5338, column: 55, scope: !5288)
!5342 = !DILocation(line: 5338, column: 9, scope: !5288)
!5343 = !DILocation(line: 5341, column: 5, scope: !5288)
!5344 = !DILocation(line: 5346, column: 23, scope: !5288)
!5345 = !DILocation(line: 5346, column: 7, scope: !5288)
!5346 = !DILocation(line: 5349, column: 7, scope: !5288)
!5347 = !DILocation(line: 5355, column: 28, scope: !5288)
!5348 = !DILocation(line: 5355, column: 34, scope: !5288)
!5349 = !DILocation(line: 5355, column: 53, scope: !5288)
!5350 = !DILocation(line: 5355, column: 7, scope: !5288)
!5351 = !DILocation(line: 5358, column: 3, scope: !5288)
!5352 = !DILocation(line: 5363, column: 5, scope: !5288)
!5353 = !DILocation(line: 5366, column: 5, scope: !5288)
!5354 = !DILocation(line: 5368, column: 1, scope: !5288)
!5355 = distinct !DISubprogram(name: "I2C_TreatErrorCallback", scope: !1, file: !1, line: 5967, type: !9, scopeLine: 5968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5356 = !DILocation(line: 5969, column: 7, scope: !5355)
!5357 = !DILocation(line: 5969, column: 13, scope: !5355)
!5358 = !DILocation(line: 5969, column: 19, scope: !5355)
!5359 = !DILocation(line: 5971, column: 5, scope: !5355)
!5360 = !DILocation(line: 5971, column: 11, scope: !5355)
!5361 = !DILocation(line: 5971, column: 17, scope: !5355)
!5362 = !DILocation(line: 5972, column: 5, scope: !5355)
!5363 = !DILocation(line: 5972, column: 11, scope: !5355)
!5364 = !DILocation(line: 5972, column: 25, scope: !5355)
!5365 = !DILocation(line: 5975, column: 5, scope: !5355)
!5366 = !DILocation(line: 5981, column: 31, scope: !5355)
!5367 = !DILocation(line: 5981, column: 5, scope: !5355)
!5368 = !DILocation(line: 5983, column: 3, scope: !5355)
!5369 = !DILocation(line: 5986, column: 5, scope: !5355)
!5370 = !DILocation(line: 5986, column: 11, scope: !5355)
!5371 = !DILocation(line: 5986, column: 25, scope: !5355)
!5372 = !DILocation(line: 5989, column: 5, scope: !5355)
!5373 = !DILocation(line: 5995, column: 27, scope: !5355)
!5374 = !DILocation(line: 5995, column: 5, scope: !5355)
!5375 = !DILocation(line: 5998, column: 1, scope: !5355)
!5376 = distinct !DISubprogram(name: "I2C_IsAcknowledgeFailed", scope: !1, file: !1, line: 6385, type: !9, scopeLine: 6386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2)
!5377 = !DILocation(line: 6387, column: 7, scope: !5376)
!5378 = !DILocation(line: 6387, column: 45, scope: !5376)
!5379 = !DILocation(line: 6391, column: 5, scope: !5376)
!5380 = !DILocation(line: 6391, column: 12, scope: !5376)
!5381 = !DILocation(line: 6391, column: 53, scope: !5376)
!5382 = !DILocation(line: 6394, column: 11, scope: !5376)
!5383 = !DILocation(line: 6394, column: 19, scope: !5376)
!5384 = !DILocation(line: 6396, column: 15, scope: !5376)
!5385 = !DILocation(line: 6396, column: 31, scope: !5376)
!5386 = !DILocation(line: 6396, column: 29, scope: !5376)
!5387 = !DILocation(line: 6396, column: 44, scope: !5376)
!5388 = !DILocation(line: 6396, column: 42, scope: !5376)
!5389 = !DILocation(line: 6396, column: 53, scope: !5376)
!5390 = !DILocation(line: 6396, column: 57, scope: !5376)
!5391 = !DILocation(line: 6396, column: 65, scope: !5376)
!5392 = !DILocation(line: 6396, column: 13, scope: !5376)
!5393 = !DILocation(line: 6398, column: 11, scope: !5376)
!5394 = !DILocation(line: 6398, column: 17, scope: !5376)
!5395 = !DILocation(line: 6398, column: 27, scope: !5376)
!5396 = !DILocation(line: 6399, column: 11, scope: !5376)
!5397 = !DILocation(line: 6399, column: 17, scope: !5376)
!5398 = !DILocation(line: 6399, column: 23, scope: !5376)
!5399 = !DILocation(line: 6400, column: 11, scope: !5376)
!5400 = !DILocation(line: 6400, column: 17, scope: !5376)
!5401 = !DILocation(line: 6400, column: 22, scope: !5376)
!5402 = !DILocation(line: 6403, column: 11, scope: !5376)
!5403 = !DILocation(line: 6405, column: 11, scope: !5376)
!5404 = !DILocation(line: 6407, column: 7, scope: !5376)
!5405 = distinct !{!5405, !5379, !5406}
!5406 = !DILocation(line: 6408, column: 5, scope: !5376)
!5407 = !DILocation(line: 6411, column: 5, scope: !5376)
!5408 = !DILocation(line: 6414, column: 5, scope: !5376)
!5409 = !DILocation(line: 6417, column: 20, scope: !5376)
!5410 = !DILocation(line: 6417, column: 5, scope: !5376)
!5411 = !DILocation(line: 6420, column: 5, scope: !5376)
!5412 = !DILocation(line: 6422, column: 5, scope: !5376)
!5413 = !DILocation(line: 6422, column: 11, scope: !5376)
!5414 = !DILocation(line: 6422, column: 21, scope: !5376)
!5415 = !DILocation(line: 6423, column: 5, scope: !5376)
!5416 = !DILocation(line: 6423, column: 11, scope: !5376)
!5417 = !DILocation(line: 6423, column: 17, scope: !5376)
!5418 = !DILocation(line: 6424, column: 5, scope: !5376)
!5419 = !DILocation(line: 6424, column: 11, scope: !5376)
!5420 = !DILocation(line: 6424, column: 16, scope: !5376)
!5421 = !DILocation(line: 6427, column: 5, scope: !5376)
!5422 = !DILocation(line: 6429, column: 5, scope: !5376)
!5423 = !DILocation(line: 6431, column: 3, scope: !5376)
!5424 = !DILocation(line: 6432, column: 1, scope: !5376)
