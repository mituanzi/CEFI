../Middlewares/Third_Party/mbedTLS/library/platform_util.c:71:33: warning: unused variable 'memset_func' [-Wunused-const-variable]
static void * (* const volatile memset_func)( void *, int, size_t ) = memset;
                                ^
1 warning generated.
./Core/Src/main.c:85:3: warning: implicit declaration of function 'BSP_LED_Off' is invalid in C99 [-Wimplicit-function-declaration]
  BSP_LED_Off(LED_GREEN_Pin);
  ^
./Core/Src/main.c:89:3: warning: implicit declaration of function 'BSP_LED_On' is invalid in C99 [-Wimplicit-function-declaration]
  BSP_LED_On(LED_GREEN_Pin);
  ^
./Core/Src/main.c:97:13: warning: unused variable 'recv_buff' [-Wunused-variable]
    uint8_t recv_buff[2] = {0};
            ^
./Core/Src/main.c:145:3: warning: implicit declaration of function 'main_logic' is invalid in C99 [-Wimplicit-function-declaration]
  main_logic();
  ^
./Core/Src/main.c:238:3: warning: implicit declaration of function 'BSP_LED_Init' is invalid in C99 [-Wimplicit-function-declaration]
  BSP_LED_Init(LED_GREEN_Pin);
  ^
./Core/Src/main.c:245:3: warning: implicit declaration of function 'mbedtls_sha256' is invalid in C99 [-Wimplicit-function-declaration]
  mbedtls_sha256((unsigned char*)pin,PINBUFFSIZE,key,0);
  ^
./Core/Src/config.c:9:15: warning: incompatible pointer types assigning to 'unsigned int *' from 'unsigned char *' [-Wincompatible-pointer-types]
    global_ebp=&memory[500]; // before 500, remapped for global variables
              ^~~~~~~~~~~~~
./Core/Src/config.c:10:15: warning: incompatible pointer types assigning to 'unsigned int *' from 'unsigned char *' [-Wincompatible-pointer-types]
    global_esp=&memory[504];
              ^~~~~~~~~~~~~
./Core/Src/main.c:253:3: warning: implicit declaration of function 'sprintf' is invalid in C99 [-Wimplicit-function-declaration]
  sprintf(OutBuf, "start: %u\r\n", start);
  ^
./Core/Src/main.c:262:11: warning: passing 'char [1]' to parameter of type 'unsigned char *' converts between pointers to integer types with different sign [-Wpointer-sign]
    print("",sizeof(""));
          ^~
./Core/Src/main.c:109:34: note: passing argument to parameter 'str' here
static void print(unsigned char* str, int len) {
                                 ^
./Core/Src/main.c:263:11: warning: passing 'char [16]' to parameter of type 'unsigned char *' converts between pointers to integer types with different sign [-Wpointer-sign]
    print(locked,sizeof(locked));
          ^~~~~~
./Core/Src/main.c:109:34: note: passing argument to parameter 'str' here
static void print(unsigned char* str, int len) {
                                 ^
./Core/Src/main.c:267:15: warning: passing 'char [13]' to parameter of type 'unsigned char *' converts between pointers to integer types with different sign [-Wpointer-sign]
        print(enter,sizeof(enter));
              ^~~~~
./Core/Src/main.c:109:34: note: passing argument to parameter 'str' here
static void print(unsigned char* str, int len) {
                                 ^
./Core/Src/config.c:31:14: warning: incompatible integer to pointer conversion initializing 'uint32_t *' (aka 'unsigned int *') with an expression of type 'unsigned int' [-Wint-conversion]
  uint32_t * comp1 = 0xE0001030;
             ^       ~~~~~~~~~~
./Core/Src/config.c:32:10: warning: incompatible pointer to integer conversion assigning to 'uint32_t' (aka 'unsigned int') from 'unsigned char *' [-Wint-conversion]
  *comp1 = &memory[2048];
         ^ ~~~~~~~~~~~~~
./Core/Src/config.c:36:13: warning: incompatible integer to pointer conversion initializing 'uint32_t *' (aka 'unsigned int *') with an expression of type 'unsigned int' [-Wint-conversion]
./Core/Src/main.c:299:19: warning: passing 'char [11]' to parameter of type 'unsigned char *' converts between pointers to integer types with different sign [-Wpointer-sign]
  uint32_t *comp0 =  0xE0001020;
            ^        ~~~~~~~~~~
            print(unlocked,sizeof(unlocked));
                  ^~~~~~~~
./Core/Src/main.c:109:34: note: passing argument to parameter 'str' here
static void print(unsigned char* str, int len) {
                                 ^
./Core/Src/main.c:310:13: warning: passing 'char [16]' to parameter of type 'unsigned char *' converts between pointers to integer types with different sign [-Wpointer-sign]
      print(incorrect,sizeof(incorrect));
            ^~~~~~~~~
./Core/Src/main.c:109:34: note: passing argument to parameter 'str' here
static void print(unsigned char* str, int len) {
                                 ^
./Core/Src/main.c:318:15: warning: passing 'char [13]' to parameter of type 'unsigned char *' converts between pointers to integer types with different sign [-Wpointer-sign]
        print(waiting,sizeof(waiting));
              ^~~~~~~
./Core/Src/main.c:109:34: note: passing argument to parameter 'str' here
static void print(unsigned char* str, int len) {
                                 ^
./Core/Src/main.c:323:17: warning: passing 'char [17]' to parameter of type 'unsigned char *' converts between pointers to integer types with different sign [-Wpointer-sign]
          print(lockout,sizeof(lockout));
                ^~~~~~~
./Core/Src/main.c:109:34: note: passing argument to parameter 'str' here
static void print(unsigned char* str, int len) {
                                 ^
./Core/Src/main.c:357:8: warning: incompatible pointer types initializing 'int *' with an expression of type 'unsigned char *' [-Wincompatible-pointer-types]
  int *count_addr = &bitmap[8000];
       ^            ~~~~~~~~~~~~~
./Core/Src/main.c:358:8: warning: incompatible pointer types initializing 'int *' with an expression of type 'unsigned char *' [-Wincompatible-pointer-types]
  int *array = &bitmap[8004];
       ^       ~~~~~~~~~~~~~
5 warnings generated.
./Core/Src/main.c:384:8: warning: incompatible integer to pointer conversion initializing 'int *' with an expression of type 'int' [-Wint-conversion]
  int *start_addr = 0x200180FC;
       ^            ~~~~~~~~~~
./Core/Src/main.c:385:8: warning: incompatible integer to pointer conversion initializing 'int *' with an expression of type 'int' [-Wint-conversion]
  int *end_addr = 0x20030000;
       ^          ~~~~~~~~~~
./Core/Src/main.c:197:7: warning: unused variable 'len' [-Wunused-variable]
  int len;
      ^
./Core/Src/main.c:250:8: warning: unused variable 'output' [-Wunused-variable]
  char output[128];
       ^
./Core/Src/main.c:410:1: warning: non-void function does not return a value [-Wreturn-type]
}
^
./Core/Src/main.c:80:13: warning: unused function 'Program_Init' [-Wunused-function]
static void Program_Init(void);
            ^
22 warnings generated.
=============================================================
Before if URAIAnalysis in doFinalization
Args: /home/iotse/pan/workspace/uRAI/llvm_build/build/bin/opt -debug -load LLVMNova.so -nova bin/pinlock_NonSecure.elf.0.5.precodegen.bc -o bin/pinlock_NonSecure.ll 
InitializeGS : 
[call inst]:   call void @init() #5, !dbg !243
[called func]: init
Function: init
[call inst]:   call void @config_memory() #5, !dbg !243
[called func]: config_memory
Function: config_memory
HandlePtoGEPOperator op: @bitmap = internal global [10000 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @memory = internal global [2048 x i8] zeroinitializer, align 1
[call inst]:   call void @config_dwt() #5, !dbg !244
[called func]: config_dwt
Function: config_dwt
[call inst]:   call void @tagFunction(i32 0) #5, !dbg !243
[called func]: tagFunction
Function: tagFunction
发生函数调用 var变量名：i32 %id
发生函数调用 argit变量名：i32 0
arg =: i32 0
[call inst]:   call void @SensitiveFunction() #5, !dbg !245
[called func]: SensitiveFunction
Function: SensitiveFunction
HandlePtoGEPOperator op: %struct.CoreDebug_Type* inttoptr (i32 -536810000 to %struct.CoreDebug_Type*)
HandlePtoGEPOperator op: %struct.DWT_Type* inttoptr (i32 -536866816 to %struct.DWT_Type*)
HandlePtoGEPOperator op: %struct.DWT_Type* inttoptr (i32 -536866816 to %struct.DWT_Type*)
[call inst]:   %call = call i32 @main_logic() #5, !dbg !244
[called func]: main_logic
Function: main_logic
[call inst]:   call void @__start_measurement() #5, !dbg !243
[called func]: __start_measurement
Function: __start_measurement

void ()*
call inst:   call void asm sideeffect "nop\0A", ""() #5, !dbg !243, !srcloc !244
error in Function mygetCalledFunction
  call void asm sideeffect "nop\0A", ""() #5, !dbg !243, !srcloc !244
f==nullptr
llvm.var.annotation: arg0: unlock_count1 
HandleCall: function:   call void @llvm.var.annotation(i8* %unlock_count1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i32 198), !dbg !244
[call inst]:   %call = call zeroext i8 @HAL_Init() #5, !dbg !247
[called func]: HAL_Init
Function: HAL_Init
[call inst]:   call void @HAL_NVIC_SetPriorityGrouping(i32 4) #5, !dbg !243
[called func]: HAL_NVIC_SetPriorityGrouping
Function: HAL_NVIC_SetPriorityGrouping
发生函数调用 var变量名：i32 %PriorityGroup
发生函数调用 argit变量名：i32 4
arg =: i32 4
[call inst]:   call void @__NVIC_SetPriorityGrouping(i32 %0) #5, !dbg !243
[called func]: __NVIC_SetPriorityGrouping
Function: __NVIC_SetPriorityGrouping
发生函数调用 var变量名：i32 %PriorityGroup
发生函数调用 argit变量名：  %0 = load i32, i32* %PriorityGroup.addr, align 4, !dbg !242
arg =:   %0 = load i32, i32* %PriorityGroup.addr, align 4, !dbg !242
Found argit __NVIC_SetPriorityGrouping   %0 = load i32, i32* %PriorityGroup.addr, align 4, !dbg !242
parameter sensitity is null 1
Found parameter __NVIC_SetPriorityGrouping i32 %PriorityGroup
In arguments handlers!
HandlePtoGEPOperator op: %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*)
[call inst]:   call void @SystemCoreClockUpdate() #5, !dbg !244
[called func]: SystemCoreClockUpdate
Function: SystemCoreClockUpdate
[call inst]:   %call = call i32 @SECURE_SystemCoreClockUpdate() #5, !dbg !243
[called func]: SECURE_SystemCoreClockUpdate
[call inst]:   %call = call zeroext i8 @HAL_InitTick(i32 0) #5, !dbg !245
[called func]: HAL_InitTick
Function: HAL_InitTick
发生函数调用 var变量名：i32 %TickPriority
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %0 = load i8, i8* @uwTickFreq, align 1, !dbg !243
ZExtInst op:   %2 = load i8, i8* @uwTickFreq, align 1, !dbg !247
[call inst]:   %call = call i32 @HAL_SYSTICK_Config(i32 %div3) #5, !dbg !251
[called func]: HAL_SYSTICK_Config
Function: HAL_SYSTICK_Config
发生函数调用 var变量名：i32 %TicksNumb
发生函数调用 argit变量名：  %div3 = udiv i32 %1, %div, !dbg !250
arg =:   %div3 = udiv i32 %1, %div, !dbg !250
[call inst]:   %call = call i32 @SysTick_Config(i32 %0) #5, !dbg !243
[called func]: SysTick_Config
Function: SysTick_Config
发生函数调用 var变量名：i32 %ticks
发生函数调用 argit变量名：  %0 = load i32, i32* %TicksNumb.addr, align 4, !dbg !242
arg =:   %0 = load i32, i32* %TicksNumb.addr, align 4, !dbg !242
Found argit SysTick_Config   %0 = load i32, i32* %TicksNumb.addr, align 4, !dbg !242
parameter sensitity is null 1
Found parameter SysTick_Config i32 %ticks
In arguments handlers!
HandlePtoGEPOperator op: %struct.SysTick_Type.0* inttoptr (i32 -536813552 to %struct.SysTick_Type.0*)
[call inst]:   call void @__NVIC_SetPriority(i8 signext -1, i32 7) #5, !dbg !251
[called func]: __NVIC_SetPriority
Function: __NVIC_SetPriority
发生函数调用 var变量名：i8 %IRQn
发生函数调用 argit变量名：i8 -1
arg =: i8 -1
发生函数调用 var变量名：i32 %priority
发生函数调用 argit变量名：i32 7
arg =: i32 7
truncInst op:   %and5 = and i32 %shl4, 255, !dbg !257
HandlePtoGEPOperator op: [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 6)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 6)
truncInst op:   %and = and i32 %shl, 255, !dbg !248
HandlePtoGEPOperator op: [496 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 12)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: [496 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 12)
HandlePtoGEPOperator op: %struct.SysTick_Type.0* inttoptr (i32 -536813552 to %struct.SysTick_Type.0*)
HandlePtoGEPOperator op: %struct.SysTick_Type.0* inttoptr (i32 -536813552 to %struct.SysTick_Type.0*)
[call inst]:   call void @HAL_NVIC_SetPriority(i8 signext -1, i32 %4, i32 0) #5, !dbg !256
[called func]: HAL_NVIC_SetPriority
Function: HAL_NVIC_SetPriority
发生函数调用 var变量名：i8 %IRQn
发生函数调用 argit变量名：i8 -1
arg =: i8 -1
发生函数调用 var变量名：i32 %PreemptPriority
发生函数调用 argit变量名：  %4 = load i32, i32* %TickPriority.addr, align 4, !dbg !255
arg =:   %4 = load i32, i32* %TickPriority.addr, align 4, !dbg !255
Found argit HAL_NVIC_SetPriority   %4 = load i32, i32* %TickPriority.addr, align 4, !dbg !255
parameter sensitity is null 1
Found parameter HAL_NVIC_SetPriority i32 %PreemptPriority
In arguments handlers!
发生函数调用 var变量名：i32 %SubPriority
发生函数调用 argit变量名：i32 0
arg =: i32 0
[call inst]:   %call = call i32 @__NVIC_GetPriorityGrouping() #5, !dbg !242
[called func]: __NVIC_GetPriorityGrouping
Function: __NVIC_GetPriorityGrouping
[call inst]:   %call1 = call i32 @NVIC_EncodePriority(i32 %1, i32 %2, i32 %3) #5, !dbg !248
[called func]: NVIC_EncodePriority
Function: NVIC_EncodePriority
发生函数调用 var变量名：i32 %PriorityGroup
发生函数调用 argit变量名：  %1 = load i32, i32* %prioritygroup, align 4, !dbg !245
arg =:   %1 = load i32, i32* %prioritygroup, align 4, !dbg !245
Found argit NVIC_EncodePriority   %1 = load i32, i32* %prioritygroup, align 4, !dbg !245
parameter sensitity is null 1
Found parameter NVIC_EncodePriority i32 %PriorityGroup
In arguments handlers!
发生函数调用 var变量名：i32 %PreemptPriority
发生函数调用 argit变量名：  %2 = load i32, i32* %PreemptPriority.addr, align 4, !dbg !246
arg =:   %2 = load i32, i32* %PreemptPriority.addr, align 4, !dbg !246
Found argit NVIC_EncodePriority   %2 = load i32, i32* %PreemptPriority.addr, align 4, !dbg !246
parameter sensitity is null 2
Found parameter NVIC_EncodePriority i32 %PreemptPriority
In arguments handlers!
发生函数调用 var变量名：i32 %SubPriority
发生函数调用 argit变量名：  %3 = load i32, i32* %SubPriority.addr, align 4, !dbg !247
arg =:   %3 = load i32, i32* %SubPriority.addr, align 4, !dbg !247
Found argit NVIC_EncodePriority   %3 = load i32, i32* %SubPriority.addr, align 4, !dbg !247
parameter sensitity is null 1
Found parameter NVIC_EncodePriority i32 %SubPriority
In arguments handlers!
[call inst]:   call void @__NVIC_SetPriority(i8 signext %0, i32 %call1) #5, !dbg !249
[called func]: __NVIC_SetPriority
Function: __NVIC_SetPriority
发生函数调用 var变量名：i8 %IRQn
发生函数调用 argit变量名：  %0 = load i8, i8* %IRQn.addr, align 1, !dbg !244
arg =:   %0 = load i8, i8* %IRQn.addr, align 1, !dbg !244
Found argit __NVIC_SetPriority   %0 = load i8, i8* %IRQn.addr, align 1, !dbg !244
parameter sensitity is null 1
Found parameter __NVIC_SetPriority i8 %IRQn
In arguments handlers!
发生函数调用 var变量名：i32 %priority
发生函数调用 argit变量名：  %call1 = call i32 @NVIC_EncodePriority(i32 %1, i32 %2, i32 %3) #5, !dbg !248
arg =:   %call1 = call i32 @NVIC_EncodePriority(i32 %1, i32 %2, i32 %3) #5, !dbg !248
truncInst op:   %and5 = and i32 %shl4, 255, !dbg !257
HandlePtoGEPOperator op: [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 6)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 6)
truncInst op:   %and = and i32 %shl, 255, !dbg !248
HandlePtoGEPOperator op: [496 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 12)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: [496 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 12)
ZExtInst op:   %call = call zeroext i8 @HAL_InitTick(i32 0) #5, !dbg !245
[call inst]:   call void @HAL_MspInit() #5, !dbg !249
[called func]: HAL_MspInit
Function: HAL_MspInit
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   call void @MX_GPIO_Init() #5, !dbg !248
[called func]: MX_GPIO_Init
Function: MX_GPIO_Init
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   call void @MX_USART1_UART_Init() #5, !dbg !249
[called func]: MX_USART1_UART_Init
Function: MX_USART1_UART_Init
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
HandlePtoGEPOperator op: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
[call inst]:   %call = call zeroext i8 @HAL_UART_Init(%struct.__UART_HandleTypeDef* @huart1) #5, !dbg !254
[called func]: HAL_UART_Init
Function: HAL_UART_Init
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：@huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
arg =: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
Found argit HAL_UART_Init @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
parameter sensitity is null 1
Found parameter HAL_UART_Init %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
HandlePtoGEPOperator op:   %5 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !253
[Fname] HAL_UART_MspInit
[call inst]:   call void bitcast (void (%struct.__UART_HandleTypeDef.169*)* @HAL_UART_MspInit to void (%struct.__UART_HandleTypeDef*)*)(%struct.__UART_HandleTypeDef* %6) #5, !dbg !257
[called func]: HAL_UART_MspInit
Function: HAL_UART_MspInit
发生函数调用 var变量名：%struct.__UART_HandleTypeDef.169* %huart
发生函数调用 argit变量名：  %6 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !256
arg =:   %6 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !256
Found argit HAL_UART_MspInit   %6 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !256
parameter sensitity is null 2
Found parameter HAL_UART_MspInit %struct.__UART_HandleTypeDef.169* %huart
In arguments handlers!
[call inst]:   call void @llvm.memset.p0i8.i32(i8* align 4 %0, i8 0, i32 20, i1 false), !dbg !243
[called func]: llvm.memset.p0i8.i32
[call inst]:   call void @llvm.memset.p0i8.i32(i8* align 4 %1, i8 0, i32 148, i1 false), !dbg !244
[called func]: llvm.memset.p0i8.i32
HandlePtoGEPOperator op:   %PeriphClkInit = alloca %struct.RCC_PeriphCLKInitTypeDef, align 4
HandlePtoGEPOperator op:   %PeriphClkInit = alloca %struct.RCC_PeriphCLKInitTypeDef, align 4
[call inst]:   %call = call zeroext i8 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* %PeriphClkInit) #5, !dbg !252
[called func]: HAL_RCCEx_PeriphCLKConfig
Function: HAL_RCCEx_PeriphCLKConfig
发生函数调用 var变量名：%struct.RCC_PeriphCLKInitTypeDef* %PeriphClkInit
发生函数调用 argit变量名：  %PeriphClkInit = alloca %struct.RCC_PeriphCLKInitTypeDef, align 4
arg =:   %PeriphClkInit = alloca %struct.RCC_PeriphCLKInitTypeDef, align 4
Found argit HAL_RCCEx_PeriphCLKConfig   %PeriphClkInit = alloca %struct.RCC_PeriphCLKInitTypeDef, align 4
parameter sensitity is null 1
Found parameter HAL_RCCEx_PeriphCLKConfig %struct.RCC_PeriphCLKInitTypeDef* %PeriphClkInit
In arguments handlers!
[call inst]:   %call3 = call zeroext i8 @RCCEx_PLLSAI2_Config(%struct.DMA_Channel_TypeDef* %PLLSAI2, i32 0) #5, !dbg !261
[called func]: RCCEx_PLLSAI2_Config
Function: RCCEx_PLLSAI2_Config
发生函数调用 var变量名：%struct.DMA_Channel_TypeDef* %pPllSai2
发生函数调用 argit变量名：  %PLLSAI2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %6, i32 0, i32 2, !dbg !260
arg =:   %PLLSAI2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %6, i32 0, i32 2, !dbg !260
Found argit RCCEx_PLLSAI2_Config   %PLLSAI2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %6, i32 0, i32 2, !dbg !260
parameter sensitity is null 2
Found parameter RCCEx_PLLSAI2_Config %struct.DMA_Channel_TypeDef* %pPllSai2
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call = call i32 @HAL_GetTick() #5, !dbg !263
[called func]: HAL_GetTick
Function: HAL_GetTick
[call inst]:   %call18 = call i32 @HAL_GetTick() #5, !dbg !268
[called func]: HAL_GetTick
Function: HAL_GetTick
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call40 = call i32 @HAL_GetTick() #5, !dbg !284
[called func]: HAL_GetTick
Function: HAL_GetTick
[call inst]:   %call46 = call i32 @HAL_GetTick() #5, !dbg !289
[called func]: HAL_GetTick
Function: HAL_GetTick
ZExtInst op:   %23 = load i8, i8* %status, align 1, !dbg !298
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call = call zeroext i8 @RCCEx_PLLSAI1_Config(%struct.RCC_PLLSAI1InitTypeDef* %PLLSAI1, i32 0) #5, !dbg !256
[called func]: RCCEx_PLLSAI1_Config
Function: RCCEx_PLLSAI1_Config
发生函数调用 var变量名：%struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
发生函数调用 argit变量名：  %PLLSAI1 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %5, i32 0, i32 1, !dbg !255
arg =:   %PLLSAI1 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %5, i32 0, i32 1, !dbg !255
Found argit RCCEx_PLLSAI1_Config   %PLLSAI1 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %5, i32 0, i32 1, !dbg !255
parameter sensitity is null 2
Found parameter RCCEx_PLLSAI1_Config %struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call = call i32 @HAL_GetTick() #5, !dbg !263
[called func]: HAL_GetTick
Function: HAL_GetTick
[call inst]:   %call18 = call i32 @HAL_GetTick() #5, !dbg !268
[called func]: HAL_GetTick
Function: HAL_GetTick
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call72 = call i32 @HAL_GetTick() #5, !dbg !289
[called func]: HAL_GetTick
Function: HAL_GetTick
[call inst]:   %call78 = call i32 @HAL_GetTick() #5, !dbg !294
[called func]: HAL_GetTick
Function: HAL_GetTick
ZExtInst op:   %42 = load i8, i8* %status, align 1, !dbg !303
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %7 = load i8, i8* %ret, align 1, !dbg !267
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call24 = call zeroext i8 @RCCEx_PLLSAI2_Config(%struct.DMA_Channel_TypeDef* %PLLSAI223, i32 0) #5, !dbg !291
[called func]: RCCEx_PLLSAI2_Config
Function: RCCEx_PLLSAI2_Config
发生函数调用 var变量名：%struct.DMA_Channel_TypeDef* %pPllSai2
发生函数调用 argit变量名：  %PLLSAI223 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %18, i32 0, i32 2, !dbg !290
arg =:   %PLLSAI223 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %18, i32 0, i32 2, !dbg !290
Found argit RCCEx_PLLSAI2_Config   %PLLSAI223 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %18, i32 0, i32 2, !dbg !290
parameter sensitity not null 2
parameter sensitity not null 4
Found parameter RCCEx_PLLSAI2_Config %struct.DMA_Channel_TypeDef* %pPllSai2
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %23 = load i8, i8* %status, align 1, !dbg !298
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call21 = call zeroext i8 @RCCEx_PLLSAI1_Config(%struct.RCC_PLLSAI1InitTypeDef* %PLLSAI120, i32 0) #5, !dbg !286
[called func]: RCCEx_PLLSAI1_Config
Function: RCCEx_PLLSAI1_Config
发生函数调用 var变量名：%struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
发生函数调用 argit变量名：  %PLLSAI120 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %17, i32 0, i32 1, !dbg !285
arg =:   %PLLSAI120 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %17, i32 0, i32 1, !dbg !285
Found argit RCCEx_PLLSAI1_Config   %PLLSAI120 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %17, i32 0, i32 1, !dbg !285
parameter sensitity not null 2
parameter sensitity not null 4
Found parameter RCCEx_PLLSAI1_Config %struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %42 = load i8, i8* %status, align 1, !dbg !303
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %19 = load i8, i8* %ret, align 1, !dbg !297
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.PWR_TypeDef.38* inttoptr (i32 1073770496 to %struct.PWR_TypeDef.38*)
[call inst]:   %call51 = call i32 @HAL_GetTick() #5, !dbg !315
[called func]: HAL_GetTick
Function: HAL_GetTick
[call inst]:   %call55 = call i32 @HAL_GetTick() #5, !dbg !321
[called func]: HAL_GetTick
Function: HAL_GetTick
ZExtInst op:   %33 = load i8, i8* %ret, align 1, !dbg !330
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call78 = call i32 @HAL_GetTick() #5, !dbg !350
[called func]: HAL_GetTick
Function: HAL_GetTick
[call inst]:   %call84 = call i32 @HAL_GetTick() #5, !dbg !355
[called func]: HAL_GetTick
Function: HAL_GetTick
ZExtInst op:   %46 = load i8, i8* %ret, align 1, !dbg !365
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %52 = load i8, i8* %pwrclkchanged, align 1, !dbg !374
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call192 = call zeroext i8 @RCCEx_PLLSAI1_Config(%struct.RCC_PLLSAI1InitTypeDef* %PLLSAI1191, i32 0) #5, !dbg !455
[called func]: RCCEx_PLLSAI1_Config
Function: RCCEx_PLLSAI1_Config
发生函数调用 var变量名：%struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
发生函数调用 argit变量名：  %PLLSAI1191 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %104, i32 0, i32 1, !dbg !454
arg =:   %PLLSAI1191 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %104, i32 0, i32 1, !dbg !454
Found argit RCCEx_PLLSAI1_Config   %PLLSAI1191 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %104, i32 0, i32 1, !dbg !454
parameter sensitity not null 4
parameter sensitity not null 6
Found parameter RCCEx_PLLSAI1_Config %struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %42 = load i8, i8* %status, align 1, !dbg !303
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %105 = load i8, i8* %ret, align 1, !dbg !460
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call255 = call zeroext i8 @RCCEx_PLLSAI1_Config(%struct.RCC_PLLSAI1InitTypeDef* %PLLSAI1254, i32 1) #5, !dbg !511
[called func]: RCCEx_PLLSAI1_Config
Function: RCCEx_PLLSAI1_Config
发生函数调用 var变量名：%struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
发生函数调用 argit变量名：  %PLLSAI1254 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %140, i32 0, i32 1, !dbg !510
arg =:   %PLLSAI1254 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %140, i32 0, i32 1, !dbg !510
Found argit RCCEx_PLLSAI1_Config   %PLLSAI1254 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %140, i32 0, i32 1, !dbg !510
parameter sensitity not null 6
parameter sensitity not null 8
Found parameter RCCEx_PLLSAI1_Config %struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 1
arg =: i32 1
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %42 = load i8, i8* %status, align 1, !dbg !303
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %141 = load i8, i8* %ret, align 1, !dbg !513
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call286 = call zeroext i8 @RCCEx_PLLSAI1_Config(%struct.RCC_PLLSAI1InitTypeDef* %PLLSAI1285, i32 1) #5, !dbg !531
[called func]: RCCEx_PLLSAI1_Config
Function: RCCEx_PLLSAI1_Config
发生函数调用 var变量名：%struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
发生函数调用 argit变量名：  %PLLSAI1285 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %154, i32 0, i32 1, !dbg !530
arg =:   %PLLSAI1285 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %154, i32 0, i32 1, !dbg !530
Found argit RCCEx_PLLSAI1_Config   %PLLSAI1285 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %154, i32 0, i32 1, !dbg !530
parameter sensitity not null 8
parameter sensitity not null 10
Found parameter RCCEx_PLLSAI1_Config %struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 1
arg =: i32 1
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %42 = load i8, i8* %status, align 1, !dbg !303
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %155 = load i8, i8* %ret, align 1, !dbg !533
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call327 = call zeroext i8 @RCCEx_PLLSAI1_Config(%struct.RCC_PLLSAI1InitTypeDef* %PLLSAI1326, i32 1) #5, !dbg !566
[called func]: RCCEx_PLLSAI1_Config
Function: RCCEx_PLLSAI1_Config
发生函数调用 var变量名：%struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
发生函数调用 argit变量名：  %PLLSAI1326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %173, i32 0, i32 1, !dbg !565
arg =:   %PLLSAI1326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %173, i32 0, i32 1, !dbg !565
Found argit RCCEx_PLLSAI1_Config   %PLLSAI1326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %173, i32 0, i32 1, !dbg !565
parameter sensitity not null 10
parameter sensitity not null 12
Found parameter RCCEx_PLLSAI1_Config %struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 1
arg =: i32 1
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %42 = load i8, i8* %status, align 1, !dbg !303
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %174 = load i8, i8* %ret, align 1, !dbg !568
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   %call349 = call zeroext i8 @RCCEx_PLLSAI1_Config(%struct.RCC_PLLSAI1InitTypeDef* %PLLSAI1348, i32 2) #5, !dbg !586
[called func]: RCCEx_PLLSAI1_Config
Function: RCCEx_PLLSAI1_Config
发生函数调用 var变量名：%struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
发生函数调用 argit变量名：  %PLLSAI1348 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %183, i32 0, i32 1, !dbg !585
arg =:   %PLLSAI1348 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %183, i32 0, i32 1, !dbg !585
Found argit RCCEx_PLLSAI1_Config   %PLLSAI1348 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %183, i32 0, i32 1, !dbg !585
parameter sensitity not null 12
parameter sensitity not null 14
Found parameter RCCEx_PLLSAI1_Config %struct.RCC_PLLSAI1InitTypeDef* %pPllSai1
In arguments handlers!
发生函数调用 var变量名：i32 %Divider
发生函数调用 argit变量名：i32 2
arg =: i32 2
ZExtInst op:   %5 = load i8, i8* %status, align 1, !dbg !260
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %9 = load i8, i8* %status, align 1, !dbg !277
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %42 = load i8, i8* %status, align 1, !dbg !303
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %184 = load i8, i8* %ret, align 1, !dbg !588
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %call = call zeroext i8 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* %PeriphClkInit) #5, !dbg !252
[call inst]:   call void @Error_Handler() #5, !dbg !254
[called func]: Error_Handler
Function: Error_Handler
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op:   %GPIO_InitStruct = alloca %struct.DMA_Channel_TypeDef, align 4
HandlePtoGEPOperator op:   %GPIO_InitStruct = alloca %struct.DMA_Channel_TypeDef, align 4
HandlePtoGEPOperator op:   %GPIO_InitStruct = alloca %struct.DMA_Channel_TypeDef, align 4
HandlePtoGEPOperator op:   %GPIO_InitStruct = alloca %struct.DMA_Channel_TypeDef, align 4
HandlePtoGEPOperator op:   %GPIO_InitStruct = alloca %struct.DMA_Channel_TypeDef, align 4
[call inst]:   call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* inttoptr (i32 1107427328 to %struct.GPIO_TypeDef*), %struct.DMA_Channel_TypeDef* %GPIO_InitStruct) #5, !dbg !268
[called func]: HAL_GPIO_Init
Function: HAL_GPIO_Init
发生函数调用 var变量名：%struct.GPIO_TypeDef* %GPIOx
发生函数调用 argit变量名：%struct.GPIO_TypeDef* inttoptr (i32 1107427328 to %struct.GPIO_TypeDef*)
arg: i32 1107427328
arg =: i32 1107427328
发生函数调用 var变量名：%struct.DMA_Channel_TypeDef* %GPIO_Init
发生函数调用 argit变量名：  %GPIO_InitStruct = alloca %struct.DMA_Channel_TypeDef, align 4
arg =:   %GPIO_InitStruct = alloca %struct.DMA_Channel_TypeDef, align 4
Found argit HAL_GPIO_Init   %GPIO_InitStruct = alloca %struct.DMA_Channel_TypeDef, align 4
parameter sensitity is null 1
Found parameter HAL_GPIO_Init %struct.DMA_Channel_TypeDef* %GPIO_Init
In arguments handlers!
HandlePtoGEPOperator op:   %24 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !288
parentop:   %24 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !288
HandlePtoGEPOperator op:   %24 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !288
HandlePtoGEPOperator op:   %34 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !306
parentop:   %34 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !306
HandlePtoGEPOperator op:   %34 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !306
HandlePtoGEPOperator op:   %44 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !325
parentop:   %44 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !325
HandlePtoGEPOperator op:   %44 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !325
HandlePtoGEPOperator op:   %AFR51 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %59, i32 0, i32 8, !dbg !356
parentop:   %AFR51 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %59, i32 0, i32 8, !dbg !356
HandlePtoGEPOperator op:   %AFR51 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %59, i32 0, i32 8, !dbg !356
HandlePtoGEPOperator op:   %70 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !377
parentop:   %70 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !377
HandlePtoGEPOperator op:   %70 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !377
HandlePtoGEPOperator op: [4 x i32]* getelementptr inbounds (%struct.EXTI_TypeDef.13, %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*), i32 0, i32 16)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: [4 x i32]* getelementptr inbounds (%struct.EXTI_TypeDef.13, %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*), i32 0, i32 16)
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
ZExtInst op:   %cmp92 = icmp eq %struct.GPIO_TypeDef* %83, inttoptr (i32 1107433472 to %struct.GPIO_TypeDef*), !dbg !395
[call inst]:   call void @HAL_NVIC_SetPriority(i8 signext 61, i32 0, i32 0) #5, !dbg !269
[called func]: HAL_NVIC_SetPriority
Function: HAL_NVIC_SetPriority
发生函数调用 var变量名：i8 %IRQn
发生函数调用 argit变量名：i8 61
arg =: i8 61
发生函数调用 var变量名：i32 %PreemptPriority
发生函数调用 argit变量名：i32 0
arg =: i32 0
发生函数调用 var变量名：i32 %SubPriority
发生函数调用 argit变量名：i32 0
arg =: i32 0
[call inst]:   call void @HAL_NVIC_EnableIRQ(i8 signext 61) #5, !dbg !270
[called func]: HAL_NVIC_EnableIRQ
Function: HAL_NVIC_EnableIRQ
发生函数调用 var变量名：i8 %IRQn
发生函数调用 argit变量名：i8 61
arg =: i8 61
[call inst]:   call void @__NVIC_EnableIRQ(i8 signext %0) #5, !dbg !243
[called func]: __NVIC_EnableIRQ
Function: __NVIC_EnableIRQ
发生函数调用 var变量名：i8 %IRQn
发生函数调用 argit变量名：  %0 = load i8, i8* %IRQn.addr, align 1, !dbg !242
arg =:   %0 = load i8, i8* %IRQn.addr, align 1, !dbg !242
Found argit __NVIC_EnableIRQ   %0 = load i8, i8* %IRQn.addr, align 1, !dbg !242
parameter sensitity is null 1
Found parameter __NVIC_EnableIRQ i8 %IRQn
In arguments handlers!

void ()*
call inst:   call void asm sideeffect "", "~{memory}"() #5, !dbg !246, !srcloc !247
error in Function mygetCalledFunction
  call void asm sideeffect "", "~{memory}"() #5, !dbg !246, !srcloc !247
f==nullptr
HandlePtoGEPOperator op: [16 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0)

void ()*
call inst:   call void asm sideeffect "", "~{memory}"() #5, !dbg !257, !srcloc !258
error in Function mygetCalledFunction
  call void asm sideeffect "", "~{memory}"() #5, !dbg !257, !srcloc !258
f==nullptr
HandlePtoGEPOperator op:   %7 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !259
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %9 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance, align 4, !dbg !262
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
[call inst]:   %call = call zeroext i8 @UART_SetConfig(%struct.__UART_HandleTypeDef* %11) #5, !dbg !264
[called func]: UART_SetConfig
Function: UART_SetConfig
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：  %11 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !263
arg =:   %11 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !263
Found argit UART_SetConfig   %11 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !263
parameter sensitity is null 2
Found parameter UART_SetConfig %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance9, align 4, !dbg !264
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance15, align 4, !dbg !265
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance27, align 4, !dbg !277
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance33, align 4, !dbg !278
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
ZExtInst op:   %111 = load i8, i8* %clocksource, align 1, !dbg !392
[call inst]:   %call223 = call i32 @HAL_RCC_GetSysClockFreq() #5, !dbg !402
[called func]: HAL_RCC_GetSysClockFreq
Function: HAL_RCC_GetSysClockFreq
[call inst]:   %call220 = call i32 @HAL_RCC_GetPCLK2Freq() #5, !dbg !397
[called func]: HAL_RCC_GetPCLK2Freq
Function: HAL_RCC_GetPCLK2Freq
[call inst]:   %call = call i32 @HAL_RCC_GetHCLKFreq() #5, !dbg !242
[called func]: HAL_RCC_GetHCLKFreq
Function: HAL_RCC_GetHCLKFreq
[call inst]:   %call = call i32 @HAL_RCC_GetSysClockFreq() #5, !dbg !242
[called func]: HAL_RCC_GetSysClockFreq
Function: HAL_RCC_GetSysClockFreq
ZExtInst op:   %1 = load i8, i8* %arrayidx, align 1, !dbg !246
ZExtInst op:   %1 = load i8, i8* %arrayidx, align 1, !dbg !246
[call inst]:   %call218 = call i32 @HAL_RCC_GetPCLK1Freq() #5, !dbg !394
[called func]: HAL_RCC_GetPCLK1Freq
Function: HAL_RCC_GetPCLK1Freq
[call inst]:   %call = call i32 @HAL_RCC_GetHCLKFreq() #5, !dbg !242
[called func]: HAL_RCC_GetHCLKFreq
Function: HAL_RCC_GetHCLKFreq
ZExtInst op:   %1 = load i8, i8* %arrayidx, align 1, !dbg !246
ZExtInst op:   %1 = load i8, i8* %arrayidx, align 1, !dbg !246
ZExtInst op:   %116 = load i16, i16* %arrayidx232, align 2, !dbg !412
truncInst op:   %div241 = udiv i32 %add238, %120, !dbg !412
ZExtInst op:   %conv242 = trunc i32 %div241 to i16, !dbg !413
UpdatePtoStore:ots or vts is NULLPrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %125 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance250, align 4, !dbg !423
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %125 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance250, align 4, !dbg !423
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
ZExtInst op:   %93 = load i8, i8* %clocksource, align 1, !dbg !345
[call inst]:   %call173 = call i32 @HAL_RCC_GetSysClockFreq() #5, !dbg !355
[called func]: HAL_RCC_GetSysClockFreq
Function: HAL_RCC_GetSysClockFreq
[call inst]:   %call170 = call i32 @HAL_RCC_GetPCLK2Freq() #5, !dbg !350
[called func]: HAL_RCC_GetPCLK2Freq
Function: HAL_RCC_GetPCLK2Freq
ZExtInst op:   %1 = load i8, i8* %arrayidx, align 1, !dbg !246
[call inst]:   %call168 = call i32 @HAL_RCC_GetPCLK1Freq() #5, !dbg !347
[called func]: HAL_RCC_GetPCLK1Freq
Function: HAL_RCC_GetPCLK1Freq
ZExtInst op:   %1 = load i8, i8* %arrayidx, align 1, !dbg !246
ZExtInst op:   %98 = load i16, i16* %arrayidx182, align 2, !dbg !365
truncInst op:   %div192 = udiv i32 %add189, %102, !dbg !365
ZExtInst op:   %conv193 = trunc i32 %div192 to i16, !dbg !366
UpdatePtoStore:ots or vts is NULLtruncInst op:   %and201 = and i32 %105, 65520, !dbg !375
UpdatePtoStore:ots or vts is NULLtruncInst op:   %shr = lshr i32 %and203, 1, !dbg !380
ZExtInst op:   %conv204 = trunc i32 %shr to i16, !dbg !381
ZExtInst op:   %107 = load i16, i16* %brrtemp, align 2, !dbg !382
truncInst op:   %or207 = or i32 %conv206, %conv205, !dbg !382
UpdatePtoStore:ots or vts is NULLZExtInst op:   %108 = load i16, i16* %brrtemp, align 2, !dbg !383
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %110 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance210, align 4, !dbg !385
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %110 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance210, align 4, !dbg !385
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
ZExtInst op:   %66 = load i8, i8* %clocksource, align 1, !dbg !281
[call inst]:   %call112 = call i32 @HAL_RCC_GetSysClockFreq() #5, !dbg !291
[called func]: HAL_RCC_GetSysClockFreq
Function: HAL_RCC_GetSysClockFreq
[call inst]:   %call109 = call i32 @HAL_RCC_GetPCLK2Freq() #5, !dbg !286
[called func]: HAL_RCC_GetPCLK2Freq
Function: HAL_RCC_GetPCLK2Freq
ZExtInst op:   %1 = load i8, i8* %arrayidx, align 1, !dbg !246
[call inst]:   %call = call i32 @HAL_RCC_GetPCLK1Freq() #5, !dbg !283
[called func]: HAL_RCC_GetPCLK1Freq
Function: HAL_RCC_GetPCLK1Freq
ZExtInst op:   %1 = load i8, i8* %arrayidx, align 1, !dbg !246
ZExtInst op:   %71 = load i16, i16* %arrayidx, align 2, !dbg !305
ZExtInst op:   %78 = load i32, i32* %pclk, align 4, !dbg !324
ZExtInst op:   %81 = load i16, i16* %arrayidx135, align 2, !dbg !324
ZExtInst op:   %83 = load i32, i32* %BaudRate140, align 4, !dbg !324
truncInst op:   %div142 = udiv i64 %conv141, 2, !dbg !324
ZExtInst op:   %conv143 = trunc i64 %div142 to i32, !dbg !324
ZExtInst op:   %85 = load i32, i32* %BaudRate146, align 4, !dbg !324
truncInst op:   %div148 = udiv i64 %add, %conv147, !dbg !324
UpdatePtoStore:ots or vts is NULLPrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %90 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance155, align 4, !dbg !334
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %90 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance155, align 4, !dbg !334
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %126 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !429
HandlePtoGEPOperator op:   %127 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !432
HandlePtoGEPOperator op:   %128 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !435
HandlePtoGEPOperator op:   %129 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !438
ZExtInst op:   %call = call zeroext i8 @UART_SetConfig(%struct.__UART_HandleTypeDef* %11) #5, !dbg !264
[call inst]:   call void @UART_AdvFeatureConfig(%struct.__UART_HandleTypeDef* %14) #5, !dbg !272
[called func]: UART_AdvFeatureConfig
Function: UART_AdvFeatureConfig
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：  %14 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !271
arg =:   %14 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !271
Found argit UART_AdvFeatureConfig   %14 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !271
parameter sensitity is null 2
Found parameter UART_AdvFeatureConfig %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance3, align 4, !dbg !243
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance15, align 4, !dbg !246
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance28, align 4, !dbg !249
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %35 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance41, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %44 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance53, align 4, !dbg !255
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %53 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance66, align 4, !dbg !258
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %62 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance79, align 4, !dbg !261
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %71 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance90, align 4, !dbg !266
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %80 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance104, align 4, !dbg !270
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance16, align 4, !dbg !274
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %19 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance18, align 4, !dbg !275
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance20, align 4, !dbg !276
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
[call inst]:   %call22 = call zeroext i8 @UART_CheckIdleState(%struct.__UART_HandleTypeDef* %24) #5, !dbg !278
[called func]: UART_CheckIdleState
Function: UART_CheckIdleState
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：  %24 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !277
arg =:   %24 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !277
Found argit UART_CheckIdleState   %24 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !277
parameter sensitity is null 2
Found parameter UART_CheckIdleState %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
HandlePtoGEPOperator op:   %0 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !242
[call inst]:   %call = call i32 @HAL_GetTick() #5, !dbg !245
[called func]: HAL_GetTick
Function: HAL_GetTick
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
[call inst]:   %call1 = call zeroext i8 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* %4, i32 2097152, i8 zeroext 0, i32 %5, i32 33554431) #5, !dbg !255
[called func]: UART_WaitOnFlagUntilTimeout
Function: UART_WaitOnFlagUntilTimeout
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：  %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !253
arg =:   %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !253
Found argit UART_WaitOnFlagUntilTimeout   %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !253
parameter sensitity is null 3
Found parameter UART_WaitOnFlagUntilTimeout %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
发生函数调用 var变量名：i32 %Flag
发生函数调用 argit变量名：i32 2097152
arg =: i32 2097152
发生函数调用 var变量名：i8 %Status
发生函数调用 argit变量名：i8 0
arg =: i8 0
发生函数调用 var变量名：i32 %Tickstart
发生函数调用 argit变量名：  %5 = load i32, i32* %tickstart, align 4, !dbg !254
arg =:   %5 = load i32, i32* %tickstart, align 4, !dbg !254
Found argit UART_WaitOnFlagUntilTimeout   %5 = load i32, i32* %tickstart, align 4, !dbg !254
parameter sensitity is null 2
Found parameter UART_WaitOnFlagUntilTimeout i32 %Tickstart
In arguments handlers!
发生函数调用 var变量名：i32 %Timeout
发生函数调用 argit变量名：i32 33554431
arg =: i32 33554431
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
ZExtInst op:   %cmp = icmp eq i32 %and, %4, !dbg !243
ZExtInst op:   %6 = load i8, i8* %Status.addr, align 1, !dbg !244
[call inst]:   %call = call i32 @HAL_GetTick() #5, !dbg !248
[called func]: HAL_GetTick
Function: HAL_GetTick
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
ZExtInst op:   %cmp23 = icmp eq i32 %and22, 2048, !dbg !269
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %27 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance28, align 4, !dbg !271
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %29 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance29, align 4, !dbg !272
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance32, align 4, !dbg !273
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %34 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !274
HandlePtoGEPOperator op:   %35 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !277
HandlePtoGEPOperator op:   %36 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !280
HandlePtoGEPOperator op:   %37 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !283
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance10, align 4, !dbg !257
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance12, align 4, !dbg !258
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %17 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !259
HandlePtoGEPOperator op:   %18 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !262
HandlePtoGEPOperator op:   %19 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !265
ZExtInst op:   %call1 = call zeroext i8 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* %4, i32 2097152, i8 zeroext 0, i32 %5, i32 33554431) #5, !dbg !255
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
[call inst]:   %call12 = call zeroext i8 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* %9, i32 4194304, i8 zeroext 0, i32 %10, i32 33554431) #5, !dbg !267
[called func]: UART_WaitOnFlagUntilTimeout
Function: UART_WaitOnFlagUntilTimeout
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：  %9 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !265
arg =:   %9 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !265
Found argit UART_WaitOnFlagUntilTimeout   %9 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !265
parameter sensitity not null 3
parameter sensitity not null 6
Found parameter UART_WaitOnFlagUntilTimeout %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
发生函数调用 var变量名：i32 %Flag
发生函数调用 argit变量名：i32 4194304
arg =: i32 4194304
发生函数调用 var变量名：i8 %Status
发生函数调用 argit变量名：i8 0
arg =: i8 0
发生函数调用 var变量名：i32 %Tickstart
发生函数调用 argit变量名：  %10 = load i32, i32* %tickstart, align 4, !dbg !266
arg =:   %10 = load i32, i32* %tickstart, align 4, !dbg !266
Found argit UART_WaitOnFlagUntilTimeout   %10 = load i32, i32* %tickstart, align 4, !dbg !266
parameter sensitity not null 2
parameter sensitity not null 4
Found parameter UART_WaitOnFlagUntilTimeout i32 %Tickstart
In arguments handlers!
发生函数调用 var变量名：i32 %Timeout
发生函数调用 argit变量名：i32 33554431
arg =: i32 33554431
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
ZExtInst op:   %cmp = icmp eq i32 %and, %4, !dbg !243
ZExtInst op:   %6 = load i8, i8* %Status.addr, align 1, !dbg !244
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
ZExtInst op:   %cmp23 = icmp eq i32 %and22, 2048, !dbg !269
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %27 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance28, align 4, !dbg !271
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %29 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance29, align 4, !dbg !272
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance32, align 4, !dbg !273
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %34 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !274
HandlePtoGEPOperator op:   %35 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !277
HandlePtoGEPOperator op:   %36 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !280
HandlePtoGEPOperator op:   %37 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !283
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance10, align 4, !dbg !257
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance12, align 4, !dbg !258
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %17 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !259
HandlePtoGEPOperator op:   %18 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !262
HandlePtoGEPOperator op:   %19 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !265
ZExtInst op:   %call12 = call zeroext i8 @UART_WaitOnFlagUntilTimeout(%struct.__UART_HandleTypeDef* %9, i32 4194304, i8 zeroext 0, i32 %10, i32 33554431) #5, !dbg !267
HandlePtoGEPOperator op:   %11 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !271
HandlePtoGEPOperator op:   %12 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !274
HandlePtoGEPOperator op:   %13 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !277
HandlePtoGEPOperator op:   %14 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !280
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Init(%struct.__UART_HandleTypeDef* @huart1) #5, !dbg !254
[call inst]:   call void @Error_Handler() #5, !dbg !256
[called func]: Error_Handler
Function: Error_Handler
[call inst]:   %call2 = call zeroext i8 @HAL_UARTEx_SetTxFifoThreshold(%struct.__UART_HandleTypeDef* @huart1, i32 0) #5, !dbg !258
[called func]: HAL_UARTEx_SetTxFifoThreshold
Function: HAL_UARTEx_SetTxFifoThreshold
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：@huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
arg =: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
Found argit HAL_UARTEx_SetTxFifoThreshold @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
parameter sensitity is null 1
Found parameter HAL_UARTEx_SetTxFifoThreshold %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
发生函数调用 var变量名：i32 %Threshold
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %1 = load i8, i8* %Lock, align 4, !dbg !242
HandlePtoGEPOperator op:   %2 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !242
HandlePtoGEPOperator op:   %3 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !243
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance3, align 4, !dbg !248
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance7, align 4, !dbg !249
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
[call inst]:   call void @UARTEx_SetNbDataToProcess(%struct.__UART_HandleTypeDef* %16) #5, !dbg !251
[called func]: UARTEx_SetNbDataToProcess
Function: UARTEx_SetNbDataToProcess
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：  %16 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
arg =:   %16 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
Found argit UARTEx_SetNbDataToProcess   %16 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
parameter sensitity is null 2
Found parameter UARTEx_SetNbDataToProcess %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
函数llvm.memcpy.p0i8.p0i8.i32被调用~~~~
testing2
  %0 = bitcast [8 x i8]* %numerator to i8*, !dbg !242
i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__const.UARTEx_SetNbDataToProcess.numerator, i32 0, i32 0)
srcptr: i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__const.UARTEx_SetNbDataToProcess.numerator, i32 0, i32 0)
dstptr:   %0 = bitcast [8 x i8]* %numerator to i8*, !dbg !242
函数llvm.memcpy.p0i8.p0i8.i32被调用~~~~
testing2
  %1 = bitcast [8 x i8]* %denominator to i8*, !dbg !243
i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__const.UARTEx_SetNbDataToProcess.denominator, i32 0, i32 0)
srcptr: i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__const.UARTEx_SetNbDataToProcess.denominator, i32 0, i32 0)
dstptr:   %1 = bitcast [8 x i8]* %denominator to i8*, !dbg !243
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
truncInst op:   %shr = lshr i32 %and, 25, !dbg !257
UpdatePtoStore:ots or vts is NULLPrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
truncInst op:   %shr4 = lshr i32 %and3, 29, !dbg !261
UpdatePtoStore:ots or vts is NULLZExtInst op:   %12 = load i8, i8* %tx_fifo_depth, align 1, !dbg !264
ZExtInst op:   %conv6 = zext i8 %12 to i16, !dbg !265
ZExtInst op:   %13 = load i8, i8* %tx_fifo_threshold, align 1, !dbg !266
ZExtInst op:   %14 = load i8, i8* %arrayidx, align 1, !dbg !267
ZExtInst op:   %15 = load i8, i8* %tx_fifo_threshold, align 1, !dbg !269
ZExtInst op:   %16 = load i8, i8* %arrayidx10, align 1, !dbg !270
ZExtInst op:   %conv11 = zext i8 %16 to i16, !dbg !271
truncInst op:   %div = sdiv i32 %mul, %conv12, !dbg !272
HandlePtoGEPOperator op:   %17 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !274
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %17 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !274
ZExtInst op:   %18 = load i8, i8* %rx_fifo_depth, align 1, !dbg !277
ZExtInst op:   %conv15 = zext i8 %18 to i16, !dbg !278
ZExtInst op:   %19 = load i8, i8* %rx_fifo_threshold, align 1, !dbg !279
ZExtInst op:   %20 = load i8, i8* %arrayidx18, align 1, !dbg !280
ZExtInst op:   %21 = load i8, i8* %rx_fifo_threshold, align 1, !dbg !282
ZExtInst op:   %22 = load i8, i8* %arrayidx22, align 1, !dbg !283
ZExtInst op:   %conv23 = zext i8 %22 to i16, !dbg !284
truncInst op:   %div25 = sdiv i32 %mul20, %conv24, !dbg !285
HandlePtoGEPOperator op:   %23 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !287
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %23 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !287
HandlePtoGEPOperator op:   %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !247
HandlePtoGEPOperator op:   %5 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %19 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance9, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %19 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance9, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %20 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !253
HandlePtoGEPOperator op:   %21 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !256
ZExtInst op:   %call2 = call zeroext i8 @HAL_UARTEx_SetTxFifoThreshold(%struct.__UART_HandleTypeDef* @huart1, i32 0) #5, !dbg !258
[call inst]:   call void @Error_Handler() #5, !dbg !260
[called func]: Error_Handler
Function: Error_Handler
[call inst]:   %call8 = call zeroext i8 @HAL_UARTEx_SetRxFifoThreshold(%struct.__UART_HandleTypeDef* @huart1, i32 0) #5, !dbg !262
[called func]: HAL_UARTEx_SetRxFifoThreshold
Function: HAL_UARTEx_SetRxFifoThreshold
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：@huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
arg =: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
Found argit HAL_UARTEx_SetRxFifoThreshold @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
parameter sensitity is null 1
Found parameter HAL_UARTEx_SetRxFifoThreshold %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
发生函数调用 var变量名：i32 %Threshold
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %1 = load i8, i8* %Lock, align 4, !dbg !242
HandlePtoGEPOperator op:   %2 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !242
HandlePtoGEPOperator op:   %3 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !243
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance3, align 4, !dbg !248
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance7, align 4, !dbg !249
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
[call inst]:   call void @UARTEx_SetNbDataToProcess(%struct.__UART_HandleTypeDef* %16) #5, !dbg !251
[called func]: UARTEx_SetNbDataToProcess
Function: UARTEx_SetNbDataToProcess
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：  %16 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
arg =:   %16 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
Found argit UARTEx_SetNbDataToProcess   %16 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
parameter sensitity not null 2
parameter sensitity not null 4
Found parameter UARTEx_SetNbDataToProcess %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
truncInst op:   %shr = lshr i32 %and, 25, !dbg !257
UpdatePtoStore:ots or vts is NULLPrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
truncInst op:   %shr4 = lshr i32 %and3, 29, !dbg !261
UpdatePtoStore:ots or vts is NULLZExtInst op:   %12 = load i8, i8* %tx_fifo_depth, align 1, !dbg !264
ZExtInst op:   %conv6 = zext i8 %12 to i16, !dbg !265
ZExtInst op:   %13 = load i8, i8* %tx_fifo_threshold, align 1, !dbg !266
ZExtInst op:   %14 = load i8, i8* %arrayidx, align 1, !dbg !267
ZExtInst op:   %15 = load i8, i8* %tx_fifo_threshold, align 1, !dbg !269
ZExtInst op:   %16 = load i8, i8* %arrayidx10, align 1, !dbg !270
ZExtInst op:   %conv11 = zext i8 %16 to i16, !dbg !271
truncInst op:   %div = sdiv i32 %mul, %conv12, !dbg !272
HandlePtoGEPOperator op:   %17 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !274
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %17 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !274
ZExtInst op:   %18 = load i8, i8* %rx_fifo_depth, align 1, !dbg !277
ZExtInst op:   %conv15 = zext i8 %18 to i16, !dbg !278
ZExtInst op:   %19 = load i8, i8* %rx_fifo_threshold, align 1, !dbg !279
ZExtInst op:   %20 = load i8, i8* %arrayidx18, align 1, !dbg !280
ZExtInst op:   %21 = load i8, i8* %rx_fifo_threshold, align 1, !dbg !282
ZExtInst op:   %22 = load i8, i8* %arrayidx22, align 1, !dbg !283
ZExtInst op:   %conv23 = zext i8 %22 to i16, !dbg !284
truncInst op:   %div25 = sdiv i32 %mul20, %conv24, !dbg !285
HandlePtoGEPOperator op:   %23 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !287
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %23 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !287
HandlePtoGEPOperator op:   %4 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !247
HandlePtoGEPOperator op:   %5 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %19 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance9, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %19 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance9, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %20 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !253
HandlePtoGEPOperator op:   %21 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !256
ZExtInst op:   %call8 = call zeroext i8 @HAL_UARTEx_SetRxFifoThreshold(%struct.__UART_HandleTypeDef* @huart1, i32 0) #5, !dbg !262
[call inst]:   call void @Error_Handler() #5, !dbg !264
[called func]: Error_Handler
Function: Error_Handler
[call inst]:   %call14 = call zeroext i8 @HAL_UARTEx_DisableFifoMode(%struct.__UART_HandleTypeDef* @huart1) #5, !dbg !266
[called func]: HAL_UARTEx_DisableFifoMode
Function: HAL_UARTEx_DisableFifoMode
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：@huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
arg =: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
Found argit HAL_UARTEx_DisableFifoMode @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
parameter sensitity is null 1
Found parameter HAL_UARTEx_DisableFifoMode %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
ZExtInst op:   %1 = load i8, i8* %Lock, align 4, !dbg !242
HandlePtoGEPOperator op:   %2 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !242
HandlePtoGEPOperator op:   %3 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !243
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance3, align 4, !dbg !248
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %11 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !250
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance6, align 4, !dbg !253
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance6, align 4, !dbg !253
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %15 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !254
HandlePtoGEPOperator op:   %16 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !257
ZExtInst op:   %call14 = call zeroext i8 @HAL_UARTEx_DisableFifoMode(%struct.__UART_HandleTypeDef* @huart1) #5, !dbg !266
[call inst]:   call void @Error_Handler() #5, !dbg !268
[called func]: Error_Handler
Function: Error_Handler
[call inst]:   call void @MX_MBEDTLS_Init() #5, !dbg !250
[called func]: MX_MBEDTLS_Init
Function: MX_MBEDTLS_Init
[Fname] BSP_LED_Init
[call inst]:   %call2 = call i32 bitcast (i32 (i8)* @BSP_LED_Init to i32 (i32)*)(i32 4096) #5, !dbg !251
[called func]: BSP_LED_Init
Function: BSP_LED_Init
发生函数调用 var变量名：i8 %Led
发生函数调用 argit变量名：i32 4096
arg =: i32 4096
ZExtInst op:   %0 = load i8, i8* %Led.addr, align 1, !dbg !244
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
[call inst]:   call void @HAL_PWREx_EnableVddIO2() #5, !dbg !249
[called func]: HAL_PWREx_EnableVddIO2
Function: HAL_PWREx_EnableVddIO2
HandlePtoGEPOperator op: %struct.PWR_TypeDef.38* inttoptr (i32 1073770496 to %struct.PWR_TypeDef.38*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
HandlePtoGEPOperator op: %struct.RCC_TypeDef.43* inttoptr (i32 1073876992 to %struct.RCC_TypeDef.43*)
ZExtInst op:   %10 = load i8, i8* %Led.addr, align 1, !dbg !251
ZExtInst op:   %11 = load i16, i16* %arrayidx, align 2, !dbg !252
HandlePtoGEPOperator op:   %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
parentop:   %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
HandlePtoGEPOperator op:   %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
HandlePtoGEPOperator op:   %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
HandlePtoGEPOperator op:   %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
HandlePtoGEPOperator op:   %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
ZExtInst op:   %12 = load i8, i8* %Led.addr, align 1, !dbg !261
[call inst]:   call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* %13, %struct.DMA_Channel_TypeDef* %GPIO_Init) #5, !dbg !263
[called func]: HAL_GPIO_Init
Function: HAL_GPIO_Init
发生函数调用 var变量名：%struct.GPIO_TypeDef* %GPIOx
发生函数调用 argit变量名：  %13 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx14, align 4, !dbg !262
arg =:   %13 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx14, align 4, !dbg !262
Found argit HAL_GPIO_Init   %13 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx14, align 4, !dbg !262
parameter sensitity is null 1
Found parameter HAL_GPIO_Init %struct.GPIO_TypeDef* %GPIOx
In arguments handlers!
发生函数调用 var变量名：%struct.DMA_Channel_TypeDef* %GPIO_Init
发生函数调用 argit变量名：  %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
arg =:   %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
Found argit HAL_GPIO_Init   %GPIO_Init = alloca %struct.DMA_Channel_TypeDef, align 4
parameter sensitity not null 1
parameter sensitity not null 2
Found parameter HAL_GPIO_Init %struct.DMA_Channel_TypeDef* %GPIO_Init
In arguments handlers!
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %24 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !288
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %24 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !288
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %34 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !306
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %34 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !306
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %44 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !325
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %44 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !325
PrintAliasObject: aliasMap is NULL
taintMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %AFR51 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %59, i32 0, i32 8, !dbg !356
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %AFR51 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %59, i32 0, i32 8, !dbg !356
taintMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %70 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !377
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %70 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !377
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op: [4 x i32]* getelementptr inbounds (%struct.EXTI_TypeDef.13, %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*), i32 0, i32 16)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: [4 x i32]* getelementptr inbounds (%struct.EXTI_TypeDef.13, %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*), i32 0, i32 16)
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
UpdatePtoStore: gs->pMap->find(op) can't find it!
HandlePtoGEPOperator op: %struct.EXTI_TypeDef.13* inttoptr (i32 1073935360 to %struct.EXTI_TypeDef.13*)
ZExtInst op:   %cmp92 = icmp eq %struct.GPIO_TypeDef* %83, inttoptr (i32 1107433472 to %struct.GPIO_TypeDef*), !dbg !395
ZExtInst op:   %14 = load i8, i8* %Led.addr, align 1, !dbg !264
ZExtInst op:   %16 = load i8, i8* %Led.addr, align 1, !dbg !266
[call inst]:   call void @HAL_GPIO_WritePin(%struct.GPIO_TypeDef* %15, i16 zeroext %17, i8 zeroext 1) #5, !dbg !268
[called func]: HAL_GPIO_WritePin
Function: HAL_GPIO_WritePin
发生函数调用 var变量名：%struct.GPIO_TypeDef* %GPIOx
发生函数调用 argit变量名：  %15 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx16, align 4, !dbg !265
arg =:   %15 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx16, align 4, !dbg !265
Found argit HAL_GPIO_WritePin   %15 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx16, align 4, !dbg !265
parameter sensitity is null 1
Found parameter HAL_GPIO_WritePin %struct.GPIO_TypeDef* %GPIOx
In arguments handlers!
发生函数调用 var变量名：i16 %GPIO_Pin
发生函数调用 argit变量名：  %17 = load i16, i16* %arrayidx18, align 2, !dbg !267
arg =:   %17 = load i16, i16* %arrayidx18, align 2, !dbg !267
Found argit HAL_GPIO_WritePin   %17 = load i16, i16* %arrayidx18, align 2, !dbg !267
parameter sensitity is null 1
Found parameter HAL_GPIO_WritePin i16 %GPIO_Pin
In arguments handlers!
发生函数调用 var变量名：i8 %PinState
发生函数调用 argit变量名：i8 1
arg =: i8 1
ZExtInst op:   %0 = load i8, i8* %PinState.addr, align 1, !dbg !242
ZExtInst op:   %3 = load i16, i16* %GPIO_Pin.addr, align 2, !dbg !250
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %4 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %4 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
taintMap is NULL
ZExtInst op:   %1 = load i16, i16* %GPIO_Pin.addr, align 2, !dbg !244
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %2 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !246
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %2 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !246
PrintAliasObject: aliasMap is NULL
taintMap is NULL
f->getName()mbedtls_sha256
[Fname] mbedtls_sha256
[call inst]:   %call3 = call i32 bitcast (void (i8*, i32, i8*, i32)* @mbedtls_sha256 to i32 (i8*, i32, i8*, i32)*)(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @pin, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @key, i32 0, i32 0), i32 0) #5, !dbg !252
[called func]: mbedtls_sha256
Function: mbedtls_sha256
发生函数调用 var变量名：i8* %input
发生函数调用 argit变量名：i8* getelementptr inbounds ([6 x i8], [6 x i8]* @pin, i32 0, i32 0)
arg: @pin = internal global [6 x i8] c"19955\00", align 1
arg =: @pin = internal global [6 x i8] c"19955\00", align 1
Found argit mbedtls_sha256 @pin = internal global [6 x i8] c"19955\00", align 1
parameter sensitity is null 1
Found parameter mbedtls_sha256 i8* %input

黑盒输入 
In arguments handlers!
发生函数调用 var变量名：i32 %ilen
发生函数调用 argit变量名：i32 5
arg =: i32 5
发生函数调用 var变量名：i8* %output
发生函数调用 argit变量名：i8* getelementptr inbounds ([32 x i8], [32 x i8]* @key, i32 0, i32 0)
arg: @key = internal global [32 x i8] zeroinitializer, align 1
arg =: @key = internal global [32 x i8] zeroinitializer, align 1
Found argit mbedtls_sha256 @key = internal global [32 x i8] zeroinitializer, align 1
parameter sensitity is null 1
Found parameter mbedtls_sha256 i8* %output

黑盒输入 
In arguments handlers!
发生函数调用 var变量名：i32 %is224
发生函数调用 argit变量名：i32 0
arg =: i32 0
[call inst]:   %call = call i32 @mbedtls_sha256_ret(i8* %0, i32 %1, i8* %2, i32 %3) #5, !dbg !246
[called func]: mbedtls_sha256_ret
Function: mbedtls_sha256_ret
发生函数调用 var变量名：i8* %input
发生函数调用 argit变量名：  %0 = load i8*, i8** %input.addr, align 4, !dbg !242
arg =:   %0 = load i8*, i8** %input.addr, align 4, !dbg !242
Found argit mbedtls_sha256_ret   %0 = load i8*, i8** %input.addr, align 4, !dbg !242
parameter sensitity is null 2
Found parameter mbedtls_sha256_ret i8* %input
In arguments handlers!
发生函数调用 var变量名：i32 %ilen
发生函数调用 argit变量名：  %1 = load i32, i32* %ilen.addr, align 4, !dbg !243
arg =:   %1 = load i32, i32* %ilen.addr, align 4, !dbg !243
Found argit mbedtls_sha256_ret   %1 = load i32, i32* %ilen.addr, align 4, !dbg !243
parameter sensitity is null 1
Found parameter mbedtls_sha256_ret i32 %ilen
In arguments handlers!
发生函数调用 var变量名：i8* %output
发生函数调用 argit变量名：  %2 = load i8*, i8** %output.addr, align 4, !dbg !244
arg =:   %2 = load i8*, i8** %output.addr, align 4, !dbg !244
Found argit mbedtls_sha256_ret   %2 = load i8*, i8** %output.addr, align 4, !dbg !244
parameter sensitity is null 2
Found parameter mbedtls_sha256_ret i8* %output
In arguments handlers!
发生函数调用 var变量名：i32 %is224
发生函数调用 argit变量名：  %3 = load i32, i32* %is224.addr, align 4, !dbg !245
arg =:   %3 = load i32, i32* %is224.addr, align 4, !dbg !245
Found argit mbedtls_sha256_ret   %3 = load i32, i32* %is224.addr, align 4, !dbg !245
parameter sensitity is null 1
Found parameter mbedtls_sha256_ret i32 %is224
In arguments handlers!
[call inst]:   call void @mbedtls_sha256_init(%struct.mbedtls_sha256_context.128* %ctx) #5, !dbg !245
[called func]: mbedtls_sha256_init
Function: mbedtls_sha256_init
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
arg =:   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
Found argit mbedtls_sha256_init   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
parameter sensitity is null 1
Found parameter mbedtls_sha256_init %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
[call inst]:   %call = call i8* @memset(i8* %1, i32 0, i32 108) #5, !dbg !244
[called func]: memset
[call inst]:   %call = call i32 @mbedtls_sha256_starts_ret(%struct.mbedtls_sha256_context.128* %ctx, i32 %0) #5, !dbg !247
[called func]: mbedtls_sha256_starts_ret
Function: mbedtls_sha256_starts_ret
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
arg =:   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
Found argit mbedtls_sha256_starts_ret   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
parameter sensitity is null 1
Found parameter mbedtls_sha256_starts_ret %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
发生函数调用 var变量名：i32 %is224
发生函数调用 argit变量名：  %0 = load i32, i32* %is224.addr, align 4, !dbg !246
arg =:   %0 = load i32, i32* %is224.addr, align 4, !dbg !246
Found argit mbedtls_sha256_starts_ret   %0 = load i32, i32* %is224.addr, align 4, !dbg !246
parameter sensitity is null 2
Found parameter mbedtls_sha256_starts_ret i32 %is224
In arguments handlers!
HandlePtoGEPOperator op:   %total = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %0, i32 0, i32 0, !dbg !245
HandlePtoGEPOperator op:   %total3 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %1, i32 0, i32 0, !dbg !248
HandlePtoGEPOperator op:   %state20 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %11, i32 0, i32 1, !dbg !278
HandlePtoGEPOperator op:   %state22 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %12, i32 0, i32 1, !dbg !281
HandlePtoGEPOperator op:   %state24 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %13, i32 0, i32 1, !dbg !284
HandlePtoGEPOperator op:   %state26 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %14, i32 0, i32 1, !dbg !287
HandlePtoGEPOperator op:   %state28 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %15, i32 0, i32 1, !dbg !290
HandlePtoGEPOperator op:   %state30 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %16, i32 0, i32 1, !dbg !293
HandlePtoGEPOperator op:   %state32 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %17, i32 0, i32 1, !dbg !296
HandlePtoGEPOperator op:   %state34 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %18, i32 0, i32 1, !dbg !299
HandlePtoGEPOperator op:   %state = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %3, i32 0, i32 1, !dbg !253
HandlePtoGEPOperator op:   %state6 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %4, i32 0, i32 1, !dbg !256
HandlePtoGEPOperator op:   %state8 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %5, i32 0, i32 1, !dbg !259
HandlePtoGEPOperator op:   %state10 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %6, i32 0, i32 1, !dbg !262
HandlePtoGEPOperator op:   %state12 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %7, i32 0, i32 1, !dbg !265
HandlePtoGEPOperator op:   %state14 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %8, i32 0, i32 1, !dbg !268
HandlePtoGEPOperator op:   %state16 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %9, i32 0, i32 1, !dbg !271
HandlePtoGEPOperator op:   %state18 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %10, i32 0, i32 1, !dbg !274
HandlePtoGEPOperator op:   %20 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !302
parentop:   %20 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !302
HandlePtoGEPOperator op:   %20 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !302
[call inst]:   %call5 = call i32 @mbedtls_sha256_update_ret(%struct.mbedtls_sha256_context.128* %ctx, i8* %1, i32 %2) #5, !dbg !254
[called func]: mbedtls_sha256_update_ret
Function: mbedtls_sha256_update_ret
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
arg =:   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
Found argit mbedtls_sha256_update_ret   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
parameter sensitity is null 1
Found parameter mbedtls_sha256_update_ret %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
发生函数调用 var变量名：i8* %input
发生函数调用 argit变量名：  %1 = load i8*, i8** %input.addr, align 4, !dbg !252
arg =:   %1 = load i8*, i8** %input.addr, align 4, !dbg !252
Found argit mbedtls_sha256_update_ret   %1 = load i8*, i8** %input.addr, align 4, !dbg !252
parameter sensitity is null 3
Found parameter mbedtls_sha256_update_ret i8* %input
In arguments handlers!
发生函数调用 var变量名：i32 %ilen
发生函数调用 argit变量名：  %2 = load i32, i32* %ilen.addr, align 4, !dbg !253
arg =:   %2 = load i32, i32* %ilen.addr, align 4, !dbg !253
Found argit mbedtls_sha256_update_ret   %2 = load i32, i32* %ilen.addr, align 4, !dbg !253
parameter sensitity is null 2
Found parameter mbedtls_sha256_update_ret i32 %ilen
In arguments handlers!
HandlePtoGEPOperator op:   %total3 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %5, i32 0, i32 0, !dbg !256
HandlePtoGEPOperator op:   %total5 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %7, i32 0, i32 0, !dbg !259
parentop:   %total5 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %7, i32 0, i32 0, !dbg !259
HandlePtoGEPOperator op:   %total5 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %7, i32 0, i32 0, !dbg !259
HandlePtoGEPOperator op:   %total11 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %12, i32 0, i32 0, !dbg !266
[call inst]:   %call = call i8* @memcpy(i8* %add.ptr, i8* %19, i32 %20) #5, !dbg !279
[called func]: memcpy
[call inst]:   %call18 = call i32 @mbedtls_internal_sha256_process(%struct.mbedtls_sha256_context.128* %21, i8* %arraydecay17) #5, !dbg !283
[called func]: mbedtls_internal_sha256_process
Function: mbedtls_internal_sha256_process
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %21 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !280
arg =:   %21 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !280
Found argit mbedtls_internal_sha256_process   %21 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !280
parameter sensitity is null 2
Found parameter mbedtls_internal_sha256_process %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
发生函数调用 var变量名：i8* %data
发生函数调用 argit变量名：  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer16, i32 0, i32 0, !dbg !281
arg =:   %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer16, i32 0, i32 0, !dbg !281
Found argit mbedtls_internal_sha256_process   %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer16, i32 0, i32 0, !dbg !281
parameter sensitity is null 2
Found parameter mbedtls_internal_sha256_process i8* %data
In arguments handlers!
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
parentop:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
ZExtInst op:   %9 = load i8, i8* %arrayidx8, align 1, !dbg !263
ZExtInst op:   %12 = load i8, i8* %arrayidx10, align 1, !dbg !263
ZExtInst op:   %15 = load i8, i8* %arrayidx15, align 1, !dbg !263
ZExtInst op:   %18 = load i8, i8* %arrayidx21, align 1, !dbg !263
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %state1556 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %692, i32 0, i32 1, !dbg !306
[call inst]:   %call26 = call i32 @mbedtls_internal_sha256_process(%struct.mbedtls_sha256_context.128* %29, i8* %30) #5, !dbg !300
[called func]: mbedtls_internal_sha256_process
Function: mbedtls_internal_sha256_process
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %29 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !298
arg =:   %29 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !298
Found argit mbedtls_internal_sha256_process   %29 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !298
parameter sensitity not null 2
parameter sensitity not null 4
Found parameter mbedtls_internal_sha256_process %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
发生函数调用 var变量名：i8* %data
发生函数调用 argit变量名：  %30 = load i8*, i8** %input.addr, align 4, !dbg !299
arg =:   %30 = load i8*, i8** %input.addr, align 4, !dbg !299
Found argit mbedtls_internal_sha256_process   %30 = load i8*, i8** %input.addr, align 4, !dbg !299
parameter sensitity not null 2
parameter sensitity not null 6
Found parameter mbedtls_internal_sha256_process i8* %data
In arguments handlers!
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
parentop:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
ZExtInst op:   %9 = load i8, i8* %arrayidx8, align 1, !dbg !263
ZExtInst op:   %12 = load i8, i8* %arrayidx10, align 1, !dbg !263
ZExtInst op:   %15 = load i8, i8* %arrayidx15, align 1, !dbg !263
ZExtInst op:   %18 = load i8, i8* %arrayidx21, align 1, !dbg !263
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %state1556 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %692, i32 0, i32 1, !dbg !306
[call inst]:   %call37 = call i8* @memcpy(i8* %add.ptr36, i8* %37, i32 %38) #5, !dbg !318
[called func]: memcpy
[call inst]:   %call9 = call i32 @mbedtls_sha256_finish_ret(%struct.mbedtls_sha256_context.128* %ctx, i8* %3) #5, !dbg !260
[called func]: mbedtls_sha256_finish_ret
Function: mbedtls_sha256_finish_ret
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
arg =:   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
Found argit mbedtls_sha256_finish_ret   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
parameter sensitity is null 1
Found parameter mbedtls_sha256_finish_ret %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
发生函数调用 var变量名：i8* %output
发生函数调用 argit变量名：  %3 = load i8*, i8** %output.addr, align 4, !dbg !259
arg =:   %3 = load i8*, i8** %output.addr, align 4, !dbg !259
Found argit mbedtls_sha256_finish_ret   %3 = load i8*, i8** %output.addr, align 4, !dbg !259
parameter sensitity is null 3
Found parameter mbedtls_sha256_finish_ret i8* %output
In arguments handlers!
HandlePtoGEPOperator op:   %buffer = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %2, i32 0, i32 2, !dbg !249
[call inst]:   %call9 = call i8* @memset(i8* %add.ptr7, i32 0, i32 %sub8) #5, !dbg !268
[called func]: memset
[call inst]:   %call12 = call i32 @mbedtls_internal_sha256_process(%struct.mbedtls_sha256_context.128* %11, i8* %arraydecay11) #5, !dbg !272
[called func]: mbedtls_internal_sha256_process
Function: mbedtls_internal_sha256_process
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %11 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !269
arg =:   %11 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !269
Found argit mbedtls_internal_sha256_process   %11 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !269
parameter sensitity not null 4
parameter sensitity not null 6
Found parameter mbedtls_internal_sha256_process %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
发生函数调用 var变量名：i8* %data
发生函数调用 argit变量名：  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer10, i32 0, i32 0, !dbg !270
arg =:   %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer10, i32 0, i32 0, !dbg !270
Found argit mbedtls_internal_sha256_process   %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer10, i32 0, i32 0, !dbg !270
parameter sensitity not null 6
parameter sensitity not null 8
Found parameter mbedtls_internal_sha256_process i8* %data
In arguments handlers!
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
parentop:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
ZExtInst op:   %9 = load i8, i8* %arrayidx8, align 1, !dbg !263
ZExtInst op:   %12 = load i8, i8* %arrayidx10, align 1, !dbg !263
ZExtInst op:   %15 = load i8, i8* %arrayidx15, align 1, !dbg !263
ZExtInst op:   %18 = load i8, i8* %arrayidx21, align 1, !dbg !263
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %state1556 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %692, i32 0, i32 1, !dbg !306
[call inst]:   %call17 = call i8* @memset(i8* %arraydecay16, i32 0, i32 56) #5, !dbg !280
[called func]: memset
[call inst]:   %call = call i8* @memset(i8* %add.ptr, i32 0, i32 %sub) #5, !dbg !260
[called func]: memset
truncInst op:   %shr27 = lshr i32 %21, 24, !dbg !293
HandlePtoGEPOperator op:   %buffer28 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %22, i32 0, i32 2, !dbg !293
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %buffer28 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %22, i32 0, i32 2, !dbg !293
truncInst op:   %shr30 = lshr i32 %23, 16, !dbg !293
HandlePtoGEPOperator op:   %buffer32 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %24, i32 0, i32 2, !dbg !293
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %buffer32 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %24, i32 0, i32 2, !dbg !293
truncInst op:   %shr34 = lshr i32 %25, 8, !dbg !293
HandlePtoGEPOperator op:   %buffer36 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %26, i32 0, i32 2, !dbg !293
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %buffer36 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %26, i32 0, i32 2, !dbg !293
truncInst op:   %27 = load i32, i32* %high, align 4, !dbg !293
HandlePtoGEPOperator op:   %buffer39 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %28, i32 0, i32 2, !dbg !293
parentop:   %buffer39 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %28, i32 0, i32 2, !dbg !293
HandlePtoGEPOperator op:   %buffer39 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %28, i32 0, i32 2, !dbg !293
truncInst op:   %shr43 = lshr i32 %29, 24, !dbg !294
HandlePtoGEPOperator op:   %buffer45 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %30, i32 0, i32 2, !dbg !294
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %buffer45 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %30, i32 0, i32 2, !dbg !294
truncInst op:   %shr47 = lshr i32 %31, 16, !dbg !294
HandlePtoGEPOperator op:   %buffer49 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %32, i32 0, i32 2, !dbg !294
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %buffer49 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %32, i32 0, i32 2, !dbg !294
truncInst op:   %shr51 = lshr i32 %33, 8, !dbg !294
HandlePtoGEPOperator op:   %buffer53 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %34, i32 0, i32 2, !dbg !294
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %buffer53 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %34, i32 0, i32 2, !dbg !294
truncInst op:   %35 = load i32, i32* %low, align 4, !dbg !294
HandlePtoGEPOperator op:   %buffer56 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %36, i32 0, i32 2, !dbg !294
parentop:   %buffer56 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %36, i32 0, i32 2, !dbg !294
HandlePtoGEPOperator op:   %buffer56 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %36, i32 0, i32 2, !dbg !294
[call inst]:   %call61 = call i32 @mbedtls_internal_sha256_process(%struct.mbedtls_sha256_context.128* %37, i8* %arraydecay60) #5, !dbg !298
[called func]: mbedtls_internal_sha256_process
Function: mbedtls_internal_sha256_process
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %37 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !295
arg =:   %37 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !295
Found argit mbedtls_internal_sha256_process   %37 = load %struct.mbedtls_sha256_context.128*, %struct.mbedtls_sha256_context.128** %ctx.addr, align 4, !dbg !295
parameter sensitity not null 6
parameter sensitity not null 8
Found parameter mbedtls_internal_sha256_process %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
发生函数调用 var变量名：i8* %data
发生函数调用 argit变量名：  %arraydecay60 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer59, i32 0, i32 0, !dbg !296
arg =:   %arraydecay60 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer59, i32 0, i32 0, !dbg !296
Found argit mbedtls_internal_sha256_process   %arraydecay60 = getelementptr inbounds [64 x i8], [64 x i8]* %buffer59, i32 0, i32 0, !dbg !296
parameter sensitity not null 8
parameter sensitity not null 10
Found parameter mbedtls_internal_sha256_process i8* %data
In arguments handlers!
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
parentop:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
ZExtInst op:   %9 = load i8, i8* %arrayidx8, align 1, !dbg !263
ZExtInst op:   %12 = load i8, i8* %arrayidx10, align 1, !dbg !263
ZExtInst op:   %15 = load i8, i8* %arrayidx15, align 1, !dbg !263
ZExtInst op:   %18 = load i8, i8* %arrayidx21, align 1, !dbg !263
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %W = alloca [64 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %A = alloca [8 x i32], align 4
HandlePtoGEPOperator op:   %state1556 = getelementptr inbounds %struct.mbedtls_sha256_context.128, %struct.mbedtls_sha256_context.128* %692, i32 0, i32 1, !dbg !306
truncInst op:   %shr68 = lshr i32 %41, 24, !dbg !304
HandlePtoGEPOperator op:   %42 = load i8*, i8** %output.addr, align 4, !dbg !304
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %42 = load i8*, i8** %output.addr, align 4, !dbg !304
truncInst op:   %shr73 = lshr i32 %44, 16, !dbg !304
HandlePtoGEPOperator op:   %45 = load i8*, i8** %output.addr, align 4, !dbg !304
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %45 = load i8*, i8** %output.addr, align 4, !dbg !304
truncInst op:   %shr78 = lshr i32 %47, 8, !dbg !304
HandlePtoGEPOperator op:   %48 = load i8*, i8** %output.addr, align 4, !dbg !304
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %48 = load i8*, i8** %output.addr, align 4, !dbg !304
truncInst op:   %50 = load i32, i32* %arrayidx82, align 4, !dbg !304
HandlePtoGEPOperator op:   %51 = load i8*, i8** %output.addr, align 4, !dbg !304
parentop:   %51 = load i8*, i8** %output.addr, align 4, !dbg !304
HandlePtoGEPOperator op:   %51 = load i8*, i8** %output.addr, align 4, !dbg !304
truncInst op:   %shr89 = lshr i32 %53, 24, !dbg !305
HandlePtoGEPOperator op:   %54 = load i8*, i8** %output.addr, align 4, !dbg !305
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %54 = load i8*, i8** %output.addr, align 4, !dbg !305
truncInst op:   %shr94 = lshr i32 %56, 16, !dbg !305
HandlePtoGEPOperator op:   %57 = load i8*, i8** %output.addr, align 4, !dbg !305
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %57 = load i8*, i8** %output.addr, align 4, !dbg !305
truncInst op:   %shr99 = lshr i32 %59, 8, !dbg !305
HandlePtoGEPOperator op:   %60 = load i8*, i8** %output.addr, align 4, !dbg !305
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %60 = load i8*, i8** %output.addr, align 4, !dbg !305
truncInst op:   %62 = load i32, i32* %arrayidx103, align 4, !dbg !305
HandlePtoGEPOperator op:   %63 = load i8*, i8** %output.addr, align 4, !dbg !305
parentop:   %63 = load i8*, i8** %output.addr, align 4, !dbg !305
HandlePtoGEPOperator op:   %63 = load i8*, i8** %output.addr, align 4, !dbg !305
truncInst op:   %shr110 = lshr i32 %65, 24, !dbg !306
HandlePtoGEPOperator op:   %66 = load i8*, i8** %output.addr, align 4, !dbg !306
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %66 = load i8*, i8** %output.addr, align 4, !dbg !306
truncInst op:   %shr115 = lshr i32 %68, 16, !dbg !306
HandlePtoGEPOperator op:   %69 = load i8*, i8** %output.addr, align 4, !dbg !306
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %69 = load i8*, i8** %output.addr, align 4, !dbg !306
truncInst op:   %shr120 = lshr i32 %71, 8, !dbg !306
HandlePtoGEPOperator op:   %72 = load i8*, i8** %output.addr, align 4, !dbg !306
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %72 = load i8*, i8** %output.addr, align 4, !dbg !306
truncInst op:   %74 = load i32, i32* %arrayidx124, align 4, !dbg !306
HandlePtoGEPOperator op:   %75 = load i8*, i8** %output.addr, align 4, !dbg !306
parentop:   %75 = load i8*, i8** %output.addr, align 4, !dbg !306
HandlePtoGEPOperator op:   %75 = load i8*, i8** %output.addr, align 4, !dbg !306
truncInst op:   %shr131 = lshr i32 %77, 24, !dbg !307
HandlePtoGEPOperator op:   %78 = load i8*, i8** %output.addr, align 4, !dbg !307
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %78 = load i8*, i8** %output.addr, align 4, !dbg !307
truncInst op:   %shr136 = lshr i32 %80, 16, !dbg !307
HandlePtoGEPOperator op:   %81 = load i8*, i8** %output.addr, align 4, !dbg !307
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %81 = load i8*, i8** %output.addr, align 4, !dbg !307
truncInst op:   %shr141 = lshr i32 %83, 8, !dbg !307
HandlePtoGEPOperator op:   %84 = load i8*, i8** %output.addr, align 4, !dbg !307
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %84 = load i8*, i8** %output.addr, align 4, !dbg !307
truncInst op:   %86 = load i32, i32* %arrayidx145, align 4, !dbg !307
HandlePtoGEPOperator op:   %87 = load i8*, i8** %output.addr, align 4, !dbg !307
parentop:   %87 = load i8*, i8** %output.addr, align 4, !dbg !307
HandlePtoGEPOperator op:   %87 = load i8*, i8** %output.addr, align 4, !dbg !307
truncInst op:   %shr152 = lshr i32 %89, 24, !dbg !308
HandlePtoGEPOperator op:   %90 = load i8*, i8** %output.addr, align 4, !dbg !308
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %90 = load i8*, i8** %output.addr, align 4, !dbg !308
truncInst op:   %shr157 = lshr i32 %92, 16, !dbg !308
HandlePtoGEPOperator op:   %93 = load i8*, i8** %output.addr, align 4, !dbg !308
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %93 = load i8*, i8** %output.addr, align 4, !dbg !308
truncInst op:   %shr162 = lshr i32 %95, 8, !dbg !308
HandlePtoGEPOperator op:   %96 = load i8*, i8** %output.addr, align 4, !dbg !308
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %96 = load i8*, i8** %output.addr, align 4, !dbg !308
truncInst op:   %98 = load i32, i32* %arrayidx166, align 4, !dbg !308
HandlePtoGEPOperator op:   %99 = load i8*, i8** %output.addr, align 4, !dbg !308
parentop:   %99 = load i8*, i8** %output.addr, align 4, !dbg !308
HandlePtoGEPOperator op:   %99 = load i8*, i8** %output.addr, align 4, !dbg !308
truncInst op:   %shr173 = lshr i32 %101, 24, !dbg !309
HandlePtoGEPOperator op:   %102 = load i8*, i8** %output.addr, align 4, !dbg !309
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %102 = load i8*, i8** %output.addr, align 4, !dbg !309
truncInst op:   %shr178 = lshr i32 %104, 16, !dbg !309
HandlePtoGEPOperator op:   %105 = load i8*, i8** %output.addr, align 4, !dbg !309
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %105 = load i8*, i8** %output.addr, align 4, !dbg !309
truncInst op:   %shr183 = lshr i32 %107, 8, !dbg !309
HandlePtoGEPOperator op:   %108 = load i8*, i8** %output.addr, align 4, !dbg !309
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %108 = load i8*, i8** %output.addr, align 4, !dbg !309
truncInst op:   %110 = load i32, i32* %arrayidx187, align 4, !dbg !309
HandlePtoGEPOperator op:   %111 = load i8*, i8** %output.addr, align 4, !dbg !309
parentop:   %111 = load i8*, i8** %output.addr, align 4, !dbg !309
HandlePtoGEPOperator op:   %111 = load i8*, i8** %output.addr, align 4, !dbg !309
truncInst op:   %shr194 = lshr i32 %113, 24, !dbg !310
HandlePtoGEPOperator op:   %114 = load i8*, i8** %output.addr, align 4, !dbg !310
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %114 = load i8*, i8** %output.addr, align 4, !dbg !310
truncInst op:   %shr199 = lshr i32 %116, 16, !dbg !310
HandlePtoGEPOperator op:   %117 = load i8*, i8** %output.addr, align 4, !dbg !310
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %117 = load i8*, i8** %output.addr, align 4, !dbg !310
truncInst op:   %shr204 = lshr i32 %119, 8, !dbg !310
HandlePtoGEPOperator op:   %120 = load i8*, i8** %output.addr, align 4, !dbg !310
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %120 = load i8*, i8** %output.addr, align 4, !dbg !310
truncInst op:   %122 = load i32, i32* %arrayidx208, align 4, !dbg !310
HandlePtoGEPOperator op:   %123 = load i8*, i8** %output.addr, align 4, !dbg !310
parentop:   %123 = load i8*, i8** %output.addr, align 4, !dbg !310
HandlePtoGEPOperator op:   %123 = load i8*, i8** %output.addr, align 4, !dbg !310
truncInst op:   %shr218 = lshr i32 %127, 24, !dbg !314
HandlePtoGEPOperator op:   %128 = load i8*, i8** %output.addr, align 4, !dbg !314
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %128 = load i8*, i8** %output.addr, align 4, !dbg !314
truncInst op:   %shr223 = lshr i32 %130, 16, !dbg !314
HandlePtoGEPOperator op:   %131 = load i8*, i8** %output.addr, align 4, !dbg !314
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %131 = load i8*, i8** %output.addr, align 4, !dbg !314
truncInst op:   %shr228 = lshr i32 %133, 8, !dbg !314
HandlePtoGEPOperator op:   %134 = load i8*, i8** %output.addr, align 4, !dbg !314
UpdatePtoStore:ots or vts is NULLHandlePtoGEPOperator op:   %134 = load i8*, i8** %output.addr, align 4, !dbg !314
truncInst op:   %136 = load i32, i32* %arrayidx232, align 4, !dbg !314
HandlePtoGEPOperator op:   %137 = load i8*, i8** %output.addr, align 4, !dbg !314
parentop:   %137 = load i8*, i8** %output.addr, align 4, !dbg !314
HandlePtoGEPOperator op:   %137 = load i8*, i8** %output.addr, align 4, !dbg !314
[call inst]:   call void @mbedtls_sha256_free(%struct.mbedtls_sha256_context.128* %ctx) #5, !dbg !266
[called func]: mbedtls_sha256_free
Function: mbedtls_sha256_free
发生函数调用 var变量名：%struct.mbedtls_sha256_context.128* %ctx
发生函数调用 argit变量名：  %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
arg =:   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
Found argit mbedtls_sha256_free   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
parameter sensitity is null 1
Found parameter mbedtls_sha256_free %struct.mbedtls_sha256_context.128* %ctx
In arguments handlers!
[call inst]:   call void @mbedtls_platform_zeroize(i8* %2, i32 108) #5, !dbg !246
[called func]: mbedtls_platform_zeroize
Function: mbedtls_platform_zeroize
发生函数调用 var变量名：i8* %buf
发生函数调用 argit变量名：  %2 = bitcast %struct.mbedtls_sha256_context.128* %1 to i8*, !dbg !245
arg =:   %2 = bitcast %struct.mbedtls_sha256_context.128* %1 to i8*, !dbg !245
Found argit mbedtls_platform_zeroize   %2 = bitcast %struct.mbedtls_sha256_context.128* %1 to i8*, !dbg !245
parameter sensitity is null 2
Found parameter mbedtls_platform_zeroize i8* %buf
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 108
arg =: i32 108
[call inst]:   %call = call i8* @memset(i8* %0, i32 0, i32 %1) #5, !dbg !244
[called func]: memset
[call inst]:   %call4 = call i32 @HAL_GetTick() #5, !dbg !253
[called func]: HAL_GetTick
Function: HAL_GetTick
[Fname] sprintf
[call inst]:   %call5 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i32 %0) #5, !dbg !256
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !257
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity is null 1
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
[call inst]:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[called func]: HAL_UART_Transmit_IT
Function: HAL_UART_Transmit_IT
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：@huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
arg =: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
Found argit HAL_UART_Transmit_IT @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
parameter sensitity is null 1
Found parameter HAL_UART_Transmit_IT %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
发生函数调用 var变量名：i8* %pData
发生函数调用 argit变量名：  %0 = load i8*, i8** %str.addr, align 4, !dbg !243
arg =:   %0 = load i8*, i8** %str.addr, align 4, !dbg !243
Found argit HAL_UART_Transmit_IT   %0 = load i8*, i8** %str.addr, align 4, !dbg !243
parameter sensitity is null 2
Found parameter HAL_UART_Transmit_IT i8* %pData
In arguments handlers!
发生函数调用 var变量名：i16 %Size
发生函数调用 argit变量名：  %conv = trunc i32 %1 to i16, !dbg !244
arg =:   %conv = trunc i32 %1 to i16, !dbg !244
Found argit HAL_UART_Transmit_IT   %conv = trunc i32 %1 to i16, !dbg !244
parameter sensitity is null 1
Found parameter HAL_UART_Transmit_IT i16 %Size
In arguments handlers!
ZExtInst op:   %3 = load i16, i16* %Size.addr, align 2, !dbg !248
ZExtInst op:   %5 = load i8, i8* %Lock, align 4, !dbg !252
HandlePtoGEPOperator op:   %6 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !252
HandlePtoGEPOperator op:   %8 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !254
parentop:   %8 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !254
HandlePtoGEPOperator op:   %8 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !254
HandlePtoGEPOperator op:   %10 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !258
parentop:   %10 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !258
HandlePtoGEPOperator op:   %10 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !258
HandlePtoGEPOperator op:   %12 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !262
parentop:   %12 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !262
HandlePtoGEPOperator op:   %12 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !262
HandlePtoGEPOperator op:   %13 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !265
HandlePtoGEPOperator op:   %14 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !268
HandlePtoGEPOperator op:   %15 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !271
HandlePtoGEPOperator op:   %33 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !311
HandlePtoGEPOperator op:   %32 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !307
HandlePtoGEPOperator op:   %34 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !314
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %36 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance46, align 4, !dbg !315
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
HandlePtoGEPOperator op:   %23 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !291
HandlePtoGEPOperator op:   %22 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !287
HandlePtoGEPOperator op:   %24 = load %struct.__UART_HandleTypeDef*, %struct.__UART_HandleTypeDef** %huart.addr, align 4, !dbg !294
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
aliasMap is NULL
UpdateTaintLoad:tainMap is NULL
HandlePtoGEPOperator op:   %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %Instance, align 4, !dbg !295
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
PrintAliasObject: aliasMap is NULL
taintMap is NULL
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[call inst]:   call void @Error_Handler() #5, !dbg !247
[called func]: Error_Handler
Function: Error_Handler
[call inst]:   %call3 = call i32 @HAL_UART_GetState(%struct.__UART_HandleTypeDef* @huart1) #5, !dbg !250
[called func]: HAL_UART_GetState
Function: HAL_UART_GetState
发生函数调用 var变量名：%struct.__UART_HandleTypeDef* %huart
发生函数调用 argit变量名：@huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
arg =: @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
Found argit HAL_UART_GetState @huart1 = internal global %struct.__UART_HandleTypeDef zeroinitializer, align 4
parameter sensitity is null 1
Found parameter HAL_UART_GetState %struct.__UART_HandleTypeDef* %huart
In arguments handlers!
[call inst]:   call void @lock() #5, !dbg !264
[called func]: lock
Function: lock
[Fname] BSP_LED_Off
[call inst]:   %call = call i32 bitcast (i32 (i8)* @BSP_LED_Off to i32 (i32)*)(i32 4096) #5, !dbg !243
[called func]: BSP_LED_Off
Function: BSP_LED_Off
发生函数调用 var变量名：i8 %Led
发生函数调用 argit变量名：i32 4096
arg =: i32 4096
ZExtInst op:   %0 = load i8, i8* %Led.addr, align 1, !dbg !244
ZExtInst op:   %2 = load i8, i8* %Led.addr, align 1, !dbg !246
[call inst]:   call void @HAL_GPIO_WritePin(%struct.GPIO_TypeDef* %1, i16 zeroext %3, i8 zeroext 1) #5, !dbg !248
[called func]: HAL_GPIO_WritePin
Function: HAL_GPIO_WritePin
发生函数调用 var变量名：%struct.GPIO_TypeDef* %GPIOx
发生函数调用 argit变量名：  %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx, align 4, !dbg !245
arg =:   %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx, align 4, !dbg !245
Found argit HAL_GPIO_WritePin   %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx, align 4, !dbg !245
parameter sensitity not null 1
parameter sensitity not null 2
Found parameter HAL_GPIO_WritePin %struct.GPIO_TypeDef* %GPIOx
In arguments handlers!
发生函数调用 var变量名：i16 %GPIO_Pin
发生函数调用 argit变量名：  %3 = load i16, i16* %arrayidx2, align 2, !dbg !247
arg =:   %3 = load i16, i16* %arrayidx2, align 2, !dbg !247
Found argit HAL_GPIO_WritePin   %3 = load i16, i16* %arrayidx2, align 2, !dbg !247
parameter sensitity not null 1
parameter sensitity not null 2
Found parameter HAL_GPIO_WritePin i16 %GPIO_Pin
In arguments handlers!
发生函数调用 var变量名：i8 %PinState
发生函数调用 argit变量名：i8 1
arg =: i8 1
ZExtInst op:   %0 = load i8, i8* %PinState.addr, align 1, !dbg !242
ZExtInst op:   %3 = load i16, i16* %GPIO_Pin.addr, align 2, !dbg !250
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %4 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %4 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
taintMap is NULL
ZExtInst op:   %1 = load i16, i16* %GPIO_Pin.addr, align 2, !dbg !244
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %2 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !246
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %2 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !246
PrintAliasObject: aliasMap is NULL
taintMap is NULL
[call inst]:   call void @print(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0), i32 1) #5, !dbg !265
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i32 0, i32 0)
arg: @.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
arg =: @.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
Found argit print @.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
parameter sensitity not null 1
parameter sensitity not null 2
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 1
arg =: i32 1
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[call inst]:   call void @print(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @main_logic.locked, i32 0, i32 0), i32 16) #5, !dbg !266
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([16 x i8], [16 x i8]* @main_logic.locked, i32 0, i32 0)
arg: @main_logic.locked = internal global [16 x i8] c"System Locked\0D\0A\00", align 1
arg =: @main_logic.locked = internal global [16 x i8] c"System Locked\0D\0A\00", align 1
Found argit print @main_logic.locked = internal global [16 x i8] c"System Locked\0D\0A\00", align 1
parameter sensitity not null 2
parameter sensitity not null 3
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 16
arg =: i32 16
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[call inst]:   call void @print(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @main_logic.enter, i32 0, i32 0), i32 13) #5, !dbg !268
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([13 x i8], [13 x i8]* @main_logic.enter, i32 0, i32 0)
arg: @main_logic.enter = internal global [13 x i8] c"Enter Pin:\0D\0A\00", align 1
arg =: @main_logic.enter = internal global [13 x i8] c"Enter Pin:\0D\0A\00", align 1
Found argit print @main_logic.enter = internal global [13 x i8] c"Enter Pin:\0D\0A\00", align 1
parameter sensitity not null 3
parameter sensitity not null 4
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 13
arg =: i32 13
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[call inst]:   call void @HAL_Delay(i32 200) #5, !dbg !269
[called func]: HAL_Delay
Function: HAL_Delay
发生函数调用 var变量名：i32 %Delay
发生函数调用 argit变量名：i32 200
arg =: i32 200
[call inst]:   %call = call i32 @HAL_GetTick() #5, !dbg !242
[called func]: HAL_GetTick
Function: HAL_GetTick
ZExtInst op:   %2 = load i8, i8* @uwTickFreq, align 1, !dbg !248
[call inst]:   %call1 = call i32 @HAL_GetTick() #5, !dbg !253
[called func]: HAL_GetTick
Function: HAL_GetTick
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
f->getName()mbedtls_sha256
[Fname] mbedtls_sha256
[call inst]:   %call7 = call i32 bitcast (void (i8*, i32, i8*, i32)* @mbedtls_sha256 to i32 (i8*, i32, i8*, i32)*)(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @key_in, i32 0, i32 0), i32 0) #5, !dbg !283
[called func]: mbedtls_sha256
Function: mbedtls_sha256
发生函数调用 var变量名：i8* %input
发生函数调用 argit变量名：i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
arg: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
arg =: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
Found argit mbedtls_sha256 @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
parameter sensitity not null 1
parameter sensitity not null 2
Found parameter mbedtls_sha256 i8* %input

黑盒输入 
In arguments handlers!
发生函数调用 var变量名：i32 %ilen
发生函数调用 argit变量名：i32 5
arg =: i32 5
发生函数调用 var变量名：i8* %output
发生函数调用 argit变量名：i8* getelementptr inbounds ([32 x i8], [32 x i8]* @key_in, i32 0, i32 0)
arg: @key_in = internal global [32 x i8] zeroinitializer, align 1
arg =: @key_in = internal global [32 x i8] zeroinitializer, align 1
Found argit mbedtls_sha256 @key_in = internal global [32 x i8] zeroinitializer, align 1
parameter sensitity not null 1
parameter sensitity not null 2
Found parameter mbedtls_sha256 i8* %output

黑盒输入 
In arguments handlers!
发生函数调用 var变量名：i32 %is224
发生函数调用 argit变量名：i32 0
arg =: i32 0
ZExtInst op:   %5 = load i8, i8* %arrayidx, align 1, !dbg !290
ZExtInst op:   %7 = load i8, i8* %arrayidx11, align 1, !dbg !292
[call inst]:   call void @print(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @main_logic.unlocked, i32 0, i32 0), i32 11) #5, !dbg !300
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([11 x i8], [11 x i8]* @main_logic.unlocked, i32 0, i32 0)
arg: @main_logic.unlocked = internal global [11 x i8] c"Unlocked\0D\0A\00", align 1
arg =: @main_logic.unlocked = internal global [11 x i8] c"Unlocked\0D\0A\00", align 1
Found argit print @main_logic.unlocked = internal global [11 x i8] c"Unlocked\0D\0A\00", align 1
parameter sensitity not null 4
parameter sensitity not null 5
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 11
arg =: i32 11
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[call inst]:   call void @unlock() #5, !dbg !302
[called func]: unlock
Function: unlock
[Fname] BSP_LED_On
[call inst]:   %call = call i32 bitcast (i32 (i8)* @BSP_LED_On to i32 (i32)*)(i32 4096) #5, !dbg !243
[called func]: BSP_LED_On
Function: BSP_LED_On
发生函数调用 var变量名：i8 %Led
发生函数调用 argit变量名：i32 4096
arg =: i32 4096
ZExtInst op:   %0 = load i8, i8* %Led.addr, align 1, !dbg !244
ZExtInst op:   %2 = load i8, i8* %Led.addr, align 1, !dbg !246
[call inst]:   call void @HAL_GPIO_WritePin(%struct.GPIO_TypeDef* %1, i16 zeroext %3, i8 zeroext 0) #5, !dbg !248
[called func]: HAL_GPIO_WritePin
Function: HAL_GPIO_WritePin
发生函数调用 var变量名：%struct.GPIO_TypeDef* %GPIOx
发生函数调用 argit变量名：  %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx, align 4, !dbg !245
arg =:   %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx, align 4, !dbg !245
Found argit HAL_GPIO_WritePin   %1 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %arrayidx, align 4, !dbg !245
parameter sensitity not null 2
parameter sensitity not null 3
Found parameter HAL_GPIO_WritePin %struct.GPIO_TypeDef* %GPIOx
In arguments handlers!
发生函数调用 var变量名：i16 %GPIO_Pin
发生函数调用 argit变量名：  %3 = load i16, i16* %arrayidx2, align 2, !dbg !247
arg =:   %3 = load i16, i16* %arrayidx2, align 2, !dbg !247
Found argit HAL_GPIO_WritePin   %3 = load i16, i16* %arrayidx2, align 2, !dbg !247
parameter sensitity not null 2
parameter sensitity not null 3
Found parameter HAL_GPIO_WritePin i16 %GPIO_Pin
In arguments handlers!
发生函数调用 var变量名：i8 %PinState
发生函数调用 argit变量名：i8 0
arg =: i8 0
ZExtInst op:   %0 = load i8, i8* %PinState.addr, align 1, !dbg !242
ZExtInst op:   %3 = load i16, i16* %GPIO_Pin.addr, align 2, !dbg !250
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %4 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %4 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !252
PrintAliasObject: aliasMap is NULL
taintMap is NULL
ZExtInst op:   %1 = load i16, i16* %GPIO_Pin.addr, align 2, !dbg !244
PrintAliasObject: aliasMap is NULL
HandlePtoGEPOperator op:   %2 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !246
PrintAliasObject: aliasMap is NULL
UpdatePtoStore: aliasMap is Null
HandlePtoGEPOperator op:   %2 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %GPIOx.addr, align 4, !dbg !246
PrintAliasObject: aliasMap is NULL
taintMap is NULL
[call inst]:   call void @__end_measurement() #5, !dbg !305
[called func]: __end_measurement
Function: __end_measurement

void ()*
call inst:   call void asm sideeffect "bkpt\0A", ""() #5, !dbg !243, !srcloc !244
error in Function mygetCalledFunction
  call void asm sideeffect "bkpt\0A", ""() #5, !dbg !243, !srcloc !244
f==nullptr
[call inst]:   call void @unlock() #5, !dbg !334
[called func]: unlock
Function: unlock
[call inst]:   call void @HAL_Delay(i32 50) #5, !dbg !335
[called func]: HAL_Delay
Function: HAL_Delay
发生函数调用 var变量名：i32 %Delay
发生函数调用 argit变量名：i32 50
arg =: i32 50
ZExtInst op:   %2 = load i8, i8* @uwTickFreq, align 1, !dbg !248
[call inst]:   call void @lock() #5, !dbg !336
[called func]: lock
Function: lock
[call inst]:   call void @print(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @main_logic.incorrect, i32 0, i32 0), i32 16) #5, !dbg !309
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([16 x i8], [16 x i8]* @main_logic.incorrect, i32 0, i32 0)
arg: @main_logic.incorrect = internal global [16 x i8] c"Incorrect Pin\0D\0A\00", align 1
arg =: @main_logic.incorrect = internal global [16 x i8] c"Incorrect Pin\0D\0A\00", align 1
Found argit print @main_logic.incorrect = internal global [16 x i8] c"Incorrect Pin\0D\0A\00", align 1
parameter sensitity not null 5
parameter sensitity not null 6
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 16
arg =: i32 16
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[call inst]:   call void @print(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @main_logic.waiting, i32 0, i32 0), i32 13) #5, !dbg !322
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([13 x i8], [13 x i8]* @main_logic.waiting, i32 0, i32 0)
arg: @main_logic.waiting = internal global [13 x i8] c"waiting...\0D\0A\00", align 1
arg =: @main_logic.waiting = internal global [13 x i8] c"waiting...\0D\0A\00", align 1
Found argit print @main_logic.waiting = internal global [13 x i8] c"waiting...\0D\0A\00", align 1
parameter sensitity not null 6
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 13
arg =: i32 13
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[call inst]:   call void @HAL_Delay(i32 %18) #5, !dbg !324
[called func]: HAL_Delay
Function: HAL_Delay
发生函数调用 var变量名：i32 %Delay
发生函数调用 argit变量名：  %18 = load i32, i32* %ms, align 4, !dbg !323
arg =:   %18 = load i32, i32* %ms, align 4, !dbg !323
Found argit HAL_Delay   %18 = load i32, i32* %ms, align 4, !dbg !323
parameter sensitity is null 1
Found parameter HAL_Delay i32 %Delay
In arguments handlers!
ZExtInst op:   %2 = load i8, i8* @uwTickFreq, align 1, !dbg !248
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
[call inst]:   %call43 = call i32 @HAL_GetTick() #5, !dbg !340
[called func]: HAL_GetTick
Function: HAL_GetTick
[Fname] sprintf
[call inst]:   %call44 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i32 %21) #5, !dbg !343
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !344
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[Fname] sprintf
[call inst]:   %call45 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0), i32 %div) #5, !dbg !349
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !350
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[Fname] sprintf
[call inst]:   %call46 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i32 0, i32 0), i32 %24) #5, !dbg !352
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !353
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[Fname] sprintf
[call inst]:   %call47 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i32 %25) #5, !dbg !355
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !356
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
HandlePtoGEPOperator op: @memory = internal global [2048 x i8] zeroinitializer, align 1
HandlePtoGEPOperator op: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
[Fname] sprintf
[call inst]:   %call66 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32, i32, i32, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i32 0, i32 0), i32 %33, i32 %36, i32 %39, i32 %42) #5, !dbg !390
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !391
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
HandlePtoGEPOperator op: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
ZExtInst op:   %49 = load i8, i8* %arrayidx84, align 1, !dbg !412
[Fname] sprintf
[call inst]:   %call89 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i32 0, i32 0), i32 %50) #5, !dbg !415
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !416
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
ZExtInst op:   %52 = load i8, i8* %arrayidx91, align 1, !dbg !419
[Fname] sprintf
[call inst]:   %call96 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i32 0, i32 0), i32 %53) #5, !dbg !422
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !423
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
ZExtInst op:   %55 = load i8, i8* %arrayidx98, align 1, !dbg !426
[Fname] sprintf
[call inst]:   %call103 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 %56) #5, !dbg !429
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !430
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[Fname] sprintf
[call inst]:   %call117 = call i32 bitcast (i32 (...)* @sprintf to i32 (i8*, i8*, i32*)*)(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32* %63) #5, !dbg !448
[called func]: sprintf
[call inst]:   call void @print(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0), i32 50) #5, !dbg !449
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([50 x i8], [50 x i8]* @OutBuf, i32 0, i32 0)
arg: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
arg =: @OutBuf = internal global [50 x i8] zeroinitializer, align 1
Found argit print @OutBuf = internal global [50 x i8] zeroinitializer, align 1
parameter sensitity not null 7
parameter sensitity not null 7
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 50
arg =: i32 50
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
[call inst]:   call void @print(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @main_logic.lockout, i32 0, i32 0), i32 17) #5, !dbg !328
[called func]: print
Function: print
发生函数调用 var变量名：i8* %str
发生函数调用 argit变量名：i8* getelementptr inbounds ([17 x i8], [17 x i8]* @main_logic.lockout, i32 0, i32 0)
arg: @main_logic.lockout = internal global [17 x i8] c"System Lockout\0D\0A\00", align 1
arg =: @main_logic.lockout = internal global [17 x i8] c"System Lockout\0D\0A\00", align 1
Found argit print @main_logic.lockout = internal global [17 x i8] c"System Lockout\0D\0A\00", align 1
parameter sensitity not null 7
parameter sensitity not null 8
Found parameter print i8* %str
In arguments handlers!
发生函数调用 var变量名：i32 %len
发生函数调用 argit变量名：i32 17
arg =: i32 17
truncInst op:   %1 = load i32, i32* %len.addr, align 4, !dbg !244
ZExtInst op:   %call = call zeroext i8 @HAL_UART_Transmit_IT(%struct.__UART_HandleTypeDef* @huart1, i8* %0, i16 zeroext %conv) #5, !dbg !245
begin Points To Map:
llvm.global.annotations: var0 : PinRxBuffer
llvm.global.annotations: var1 : LockRxBuffer
llvm.global.annotations: var2 : key
llvm.global.annotations: var3 : key_in
[root alias from annotated]:   %unlock_count1 = bitcast i32* %unlock_count to i8*, !dbg !244
element:   %unlock_count = alloca i32, align 4
rootsenvarset!   %unlock_count = alloca i32, align 4
[alias-map] alias insert:   %unlock_count = alloca i32, align 4
[root alias from annotated]: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
element: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
rootsenvarset! @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
[alias-map] alias insert: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
[root alias from annotated]: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1
element: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1
rootsenvarset! @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1
[alias-map] alias insert: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1
[root alias from annotated]: @key = internal global [32 x i8] zeroinitializer, align 1
element: @key = internal global [32 x i8] zeroinitializer, align 1
rootsenvarset! @key = internal global [32 x i8] zeroinitializer, align 1
[alias-map] alias insert: @key = internal global [32 x i8] zeroinitializer, align 1
[alias-map] alias insert:   %ctx.addr = alloca %struct.mbedtls_sha256_context.128*, align 4
[alias-map] alias insert:   %high = alloca i32, align 4
[alias-map] alias insert:   %low = alloca i32, align 4
[alias-map] alias insert:   %ctx = alloca %struct.mbedtls_sha256_context.128, align 4
[alias-map] alias insert:   %is224.addr = alloca i32, align 4
[alias-map] alias insert:   %is224.addr = alloca i32, align 4
[alias-map] alias insert:   %is224.addr = alloca i32, align 4
[alias-map] alias insert:   %ctx.addr = alloca %struct.mbedtls_sha256_context.128*, align 4
[root alias from annotated]: @key_in = internal global [32 x i8] zeroinitializer, align 1
element: @key_in = internal global [32 x i8] zeroinitializer, align 1
rootsenvarset! @key_in = internal global [32 x i8] zeroinitializer, align 1
[alias-map] alias insert: @key_in = internal global [32 x i8] zeroinitializer, align 1
 added to senVarSet!!
the parent @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 -> 0x814d4f8
 added to senVarSet!!
the parent @key_in = internal global [32 x i8] zeroinitializer, align 1 -> 0x814d688
 added to senVarSet!!
the parent @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 -> 0x814dfc8
 added to senVarSet!!
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
[point-to-map:]Its parent: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert: i8* %output
[point-to-map:]Its parent: @key = internal global [32 x i8] zeroinitializer, align 1
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert: i8* %output
[point-to-map:]Its parent: @key = internal global [32 x i8] zeroinitializer, align 1
 added to senVarSet!!
[point-to-map:]alias insert:   %output.addr = alloca i8*, align 4
[point-to-map:]Its parent: @key = internal global [32 x i8] zeroinitializer, align 1
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %42 = load i8*, i8** %output.addr, align 4, !dbg !304
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %45 = load i8*, i8** %output.addr, align 4, !dbg !304
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %48 = load i8*, i8** %output.addr, align 4, !dbg !304
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %51 = load i8*, i8** %output.addr, align 4, !dbg !304
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %54 = load i8*, i8** %output.addr, align 4, !dbg !305
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %57 = load i8*, i8** %output.addr, align 4, !dbg !305
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %60 = load i8*, i8** %output.addr, align 4, !dbg !305
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %63 = load i8*, i8** %output.addr, align 4, !dbg !305
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %66 = load i8*, i8** %output.addr, align 4, !dbg !306
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %69 = load i8*, i8** %output.addr, align 4, !dbg !306
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %72 = load i8*, i8** %output.addr, align 4, !dbg !306
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %75 = load i8*, i8** %output.addr, align 4, !dbg !306
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %78 = load i8*, i8** %output.addr, align 4, !dbg !307
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %81 = load i8*, i8** %output.addr, align 4, !dbg !307
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %84 = load i8*, i8** %output.addr, align 4, !dbg !307
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %87 = load i8*, i8** %output.addr, align 4, !dbg !307
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %90 = load i8*, i8** %output.addr, align 4, !dbg !308
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %93 = load i8*, i8** %output.addr, align 4, !dbg !308
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %96 = load i8*, i8** %output.addr, align 4, !dbg !308
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %99 = load i8*, i8** %output.addr, align 4, !dbg !308
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %102 = load i8*, i8** %output.addr, align 4, !dbg !309
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %105 = load i8*, i8** %output.addr, align 4, !dbg !309
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %108 = load i8*, i8** %output.addr, align 4, !dbg !309
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %111 = load i8*, i8** %output.addr, align 4, !dbg !309
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %114 = load i8*, i8** %output.addr, align 4, !dbg !310
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %117 = load i8*, i8** %output.addr, align 4, !dbg !310
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %120 = load i8*, i8** %output.addr, align 4, !dbg !310
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %123 = load i8*, i8** %output.addr, align 4, !dbg !310
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %128 = load i8*, i8** %output.addr, align 4, !dbg !314
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %131 = load i8*, i8** %output.addr, align 4, !dbg !314
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %134 = load i8*, i8** %output.addr, align 4, !dbg !314
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %137 = load i8*, i8** %output.addr, align 4, !dbg !314
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert:   %output.addr = alloca i8*, align 4
[point-to-map:]Its parent: @key = internal global [32 x i8] zeroinitializer, align 1
 added to senVarSet!!
[point-to-map:]alias insert:   %3 = load i8*, i8** %output.addr, align 4, !dbg !259
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %3 = load i8*, i8** %output.addr, align 4, !dbg !259 -> 0x83006e8
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
[point-to-map:]alias insert: i8* %input
[point-to-map:]Its parent: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
 added to senVarSet!!
[point-to-map:]alias insert: i8* %output
[point-to-map:]Its parent: @key = internal global [32 x i8] zeroinitializer, align 1
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x8301110
the parent @key_in = internal global [32 x i8] zeroinitializer, align 1 -> 0x814d688
 added to senVarSet!!
[point-to-map:]alias insert:   %input.addr = alloca i8*, align 4
[point-to-map:]Its parent: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
 added to senVarSet!!
[point-to-map:]alias insert:   %output.addr = alloca i8*, align 4
[point-to-map:]Its parent: @key = internal global [32 x i8] zeroinitializer, align 1
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x8301698
the parent @key_in = internal global [32 x i8] zeroinitializer, align 1 -> 0x814d688
 added to senVarSet!!
[point-to-map:]alias insert:   %0 = load i8*, i8** %input.addr, align 4, !dbg !242
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root   %0 = load i8*, i8** %input.addr, align 4, !dbg !242 -> 0x8301958
the parent @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 -> 0x814d4f8
 added to senVarSet!!
[point-to-map:]alias insert:   %2 = load i8*, i8** %output.addr, align 4, !dbg !244
[point-to-map:]Its parent:   %output.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %2 = load i8*, i8** %output.addr, align 4, !dbg !244 -> 0x8301a88
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root   %2 = load i8*, i8** %output.addr, align 4, !dbg !244 -> 0x8301a88
the parent @key_in = internal global [32 x i8] zeroinitializer, align 1 -> 0x814d688
 added to senVarSet!!
[point-to-map:]alias insert: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1)
[point-to-map:]Its parent: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
 added to senVarSet!!
[point-to-map:]alias insert: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2)
[point-to-map:]Its parent: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
 added to senVarSet!!
[point-to-map:]alias insert: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3)
[point-to-map:]Its parent: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
 added to senVarSet!!
[point-to-map:]alias insert: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4)
[point-to-map:]Its parent: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
 added to senVarSet!!
the parent   %unlock_count = alloca i32, align 4 -> 0x830a788
 added to senVarSet!!
the parent   %unlock_count = alloca i32, align 4 -> 0x830a788
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @key, i32 0, i32 %4, !dbg !290
[point-to-map:]Its parent: @key = internal global [32 x i8] zeroinitializer, align 1
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx11 = getelementptr inbounds [32 x i8], [32 x i8]* @key_in, i32 0, i32 %6, !dbg !292
[point-to-map:]Its parent: @key_in = internal global [32 x i8] zeroinitializer, align 1
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 -> 0x814d4f8
the parent @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 -> 0x814d4f8
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root @key_in = internal global [32 x i8] zeroinitializer, align 1 -> 0x814d688
the parent @key_in = internal global [32 x i8] zeroinitializer, align 1 -> 0x814d688
 added to senVarSet!!
with the same root @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1
root @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 -> 0x814dfc8
the parent @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 -> 0x814dfc8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0) -> 0x81556e8
 added to senVarSet!!
[point-to-map:]alias insert:   %data.addr = alloca i8*, align 4
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert:   %19 = load i8*, i8** %input.addr, align 4, !dbg !277
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
[point-to-map:]alias insert:   %25 = load i8*, i8** %input.addr, align 4, !dbg !290
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
[point-to-map:]alias insert:   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
[point-to-map:]alias insert:   %30 = load i8*, i8** %input.addr, align 4, !dbg !299
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
[point-to-map:]alias insert:   %32 = load i8*, i8** %input.addr, align 4, !dbg !306
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
[point-to-map:]alias insert:   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
[point-to-map:]alias insert:   %37 = load i8*, i8** %input.addr, align 4, !dbg !316
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
[point-to-map:]alias insert: i8* %input
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root i8* %output -> 0x820e5e0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x820e5e0
 added to senVarSet!!
[point-to-map:]alias insert:   %input.addr = alloca i8*, align 4
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
[point-to-map:]alias insert: i8* %data
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root i8* %data -> 0x826d7b8
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
[point-to-map:]alias insert: i8* %input
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root i8* %output -> 0x826d898
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root i8* %output -> 0x826d898
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x826d898
 added to senVarSet!!
[point-to-map:]alias insert:   %7 = load i8*, i8** %data.addr, align 4, !dbg !263
[point-to-map:]Its parent:   %data.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %7 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271788
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %7 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271788
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx8 = getelementptr inbounds i8, i8* %7, i32 %mul, !dbg !263
[point-to-map:]Its parent:   %data.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx8 = getelementptr inbounds i8, i8* %7, i32 %mul, !dbg !263 -> 0x82718d0
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx8 = getelementptr inbounds i8, i8* %7, i32 %mul, !dbg !263 -> 0x82718d0
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
[point-to-map:]alias insert:   %10 = load i8*, i8** %data.addr, align 4, !dbg !263
[point-to-map:]Its parent:   %data.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %10 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271a68
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %10 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271a68
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx10 = getelementptr inbounds i8, i8* %10, i32 %add, !dbg !263
[point-to-map:]Its parent:   %data.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx10 = getelementptr inbounds i8, i8* %10, i32 %add, !dbg !263 -> 0x8271c20
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx10 = getelementptr inbounds i8, i8* %10, i32 %add, !dbg !263 -> 0x8271c20
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
[point-to-map:]alias insert:   %13 = load i8*, i8** %data.addr, align 4, !dbg !263
[point-to-map:]Its parent:   %data.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %13 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271e28
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %13 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271e28
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx15 = getelementptr inbounds i8, i8* %13, i32 %add14, !dbg !263
[point-to-map:]Its parent:   %data.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx15 = getelementptr inbounds i8, i8* %13, i32 %add14, !dbg !263 -> 0x8271fe0
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx15 = getelementptr inbounds i8, i8* %13, i32 %add14, !dbg !263 -> 0x8271fe0
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
[point-to-map:]alias insert:   %16 = load i8*, i8** %data.addr, align 4, !dbg !263
[point-to-map:]Its parent:   %data.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %16 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x82721e8
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %16 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x82721e8
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
[point-to-map:]alias insert:   %arrayidx21 = getelementptr inbounds i8, i8* %16, i32 %add20, !dbg !263
[point-to-map:]Its parent:   %data.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx21 = getelementptr inbounds i8, i8* %16, i32 %add20, !dbg !263 -> 0x82723a0
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx21 = getelementptr inbounds i8, i8* %16, i32 %add20, !dbg !263 -> 0x82723a0
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ecd58
the parent   %output.addr = alloca i8*, align 4 -> 0x82ecd58
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ecd58
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ecd58
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x82ecd58
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
 added to senVarSet!!
[point-to-map:]alias insert:   %input.addr = alloca i8*, align 4
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
[point-to-map:]alias insert:   %1 = load i8*, i8** %input.addr, align 4, !dbg !252
[point-to-map:]Its parent:   %input.addr = alloca i8*, align 4
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %1 = load i8*, i8** %input.addr, align 4, !dbg !252 -> 0x8300248
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %3 = load i8*, i8** %output.addr, align 4, !dbg !259 -> 0x83006e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %3 = load i8*, i8** %output.addr, align 4, !dbg !259 -> 0x83006e8
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %3 = load i8*, i8** %output.addr, align 4, !dbg !259 -> 0x83006e8
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* %input -> 0x83010c0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x8301110
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x8301110
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %input.addr = alloca i8*, align 4 -> 0x83015d8
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x8301698
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %0 = load i8*, i8** %input.addr, align 4, !dbg !242 -> 0x8301958
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root   %0 = load i8*, i8** %input.addr, align 4, !dbg !242 -> 0x8301958
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %2 = load i8*, i8** %output.addr, align 4, !dbg !244 -> 0x8301a88
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %2 = load i8*, i8** %output.addr, align 4, !dbg !244 -> 0x8301a88
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root   %2 = load i8*, i8** %output.addr, align 4, !dbg !244 -> 0x8301a88
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1) -> 0x8308d08
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2) -> 0x8308d88
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3) -> 0x8308e08
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4) -> 0x8308e88
 added to senVarSet!!
with the same root   %unlock_count = alloca i32, align 4
root   %unlock_count = alloca i32, align 4 -> 0x830a788
the parent   %unlock_count = alloca i32, align 4 -> 0x830a788
 added to senVarSet!!
with the same root   %unlock_count = alloca i32, align 4
root   %unlock_count1 = bitcast i32* %unlock_count to i8*, !dbg !244 -> 0x830af58
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @key, i32 0, i32 %4, !dbg !290 -> 0x830cf68
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx11 = getelementptr inbounds [32 x i8], [32 x i8]* @key_in, i32 0, i32 %6, !dbg !292 -> 0x830d188
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 -> 0x814d4f8
the parent @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 -> 0x814d4f8
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root @key_in = internal global [32 x i8] zeroinitializer, align 1 -> 0x814d688
the parent @key_in = internal global [32 x i8] zeroinitializer, align 1 -> 0x814d688
 added to senVarSet!!
with the same root @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1
root @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 -> 0x814dfc8
the parent @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 -> 0x814dfc8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
the parent @key = internal global [32 x i8] zeroinitializer, align 1 -> 0x814e048
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0) -> 0x81556e8
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %data.addr = alloca i8*, align 4 -> 0x8164958
the parent   %data.addr = alloca i8*, align 4 -> 0x8164958
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %data.addr = alloca i8*, align 4 -> 0x8164958
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %data.addr = alloca i8*, align 4 -> 0x8164958
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %data.addr = alloca i8*, align 4 -> 0x8164958
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %19 = load i8*, i8** %input.addr, align 4, !dbg !277 -> 0x820b1c8
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %19 = load i8*, i8** %input.addr, align 4, !dbg !277 -> 0x820b1c8
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %19 = load i8*, i8** %input.addr, align 4, !dbg !277 -> 0x820b1c8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %25 = load i8*, i8** %input.addr, align 4, !dbg !290 -> 0x820bb68
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %25 = load i8*, i8** %input.addr, align 4, !dbg !290 -> 0x820bb68
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %25 = load i8*, i8** %input.addr, align 4, !dbg !290 -> 0x820bb68
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290 -> 0x820bc10
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290 -> 0x820bc10
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290 -> 0x820bc10
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %30 = load i8*, i8** %input.addr, align 4, !dbg !299 -> 0x820c2f8
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %30 = load i8*, i8** %input.addr, align 4, !dbg !299 -> 0x820c2f8
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %30 = load i8*, i8** %input.addr, align 4, !dbg !299 -> 0x820c2f8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %32 = load i8*, i8** %input.addr, align 4, !dbg !306 -> 0x820c808
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %32 = load i8*, i8** %input.addr, align 4, !dbg !306 -> 0x820c808
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %32 = load i8*, i8** %input.addr, align 4, !dbg !306 -> 0x820c808
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306 -> 0x820c8b0
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306 -> 0x820c8b0
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306 -> 0x820c8b0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %37 = load i8*, i8** %input.addr, align 4, !dbg !316 -> 0x820d078
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %37 = load i8*, i8** %input.addr, align 4, !dbg !316 -> 0x820d078
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %37 = load i8*, i8** %input.addr, align 4, !dbg !316 -> 0x820d078
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root i8* %input -> 0x820e590
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root i8* %output -> 0x820e5e0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x820e5e0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %input.addr = alloca i8*, align 4 -> 0x8216af8
the parent   %input.addr = alloca i8*, align 4 -> 0x8216af8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %input.addr = alloca i8*, align 4 -> 0x8216af8
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %input.addr = alloca i8*, align 4 -> 0x8216af8
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root i8* %data -> 0x826d7b8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root i8* %data -> 0x826d7b8
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root i8* %data -> 0x826d7b8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root i8* %input -> 0x826d818
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root i8* %input -> 0x826d818
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root i8* %output -> 0x826d898
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root i8* %output -> 0x826d898
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x826d898
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %7 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271788
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %7 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271788
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %7 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271788
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %7 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271788
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %arrayidx8 = getelementptr inbounds i8, i8* %7, i32 %mul, !dbg !263 -> 0x82718d0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx8 = getelementptr inbounds i8, i8* %7, i32 %mul, !dbg !263 -> 0x82718d0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx8 = getelementptr inbounds i8, i8* %7, i32 %mul, !dbg !263 -> 0x82718d0
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx8 = getelementptr inbounds i8, i8* %7, i32 %mul, !dbg !263 -> 0x82718d0
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %10 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271a68
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %10 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271a68
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %10 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271a68
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %10 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271a68
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %arrayidx10 = getelementptr inbounds i8, i8* %10, i32 %add, !dbg !263 -> 0x8271c20
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx10 = getelementptr inbounds i8, i8* %10, i32 %add, !dbg !263 -> 0x8271c20
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx10 = getelementptr inbounds i8, i8* %10, i32 %add, !dbg !263 -> 0x8271c20
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx10 = getelementptr inbounds i8, i8* %10, i32 %add, !dbg !263 -> 0x8271c20
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %13 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271e28
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %13 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271e28
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %13 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271e28
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %13 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x8271e28
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %arrayidx15 = getelementptr inbounds i8, i8* %13, i32 %add14, !dbg !263 -> 0x8271fe0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx15 = getelementptr inbounds i8, i8* %13, i32 %add14, !dbg !263 -> 0x8271fe0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx15 = getelementptr inbounds i8, i8* %13, i32 %add14, !dbg !263 -> 0x8271fe0
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx15 = getelementptr inbounds i8, i8* %13, i32 %add14, !dbg !263 -> 0x8271fe0
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %16 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x82721e8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %16 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x82721e8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %16 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x82721e8
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %16 = load i8*, i8** %data.addr, align 4, !dbg !263 -> 0x82721e8
 added to senVarSet!!
with the same root   %data.addr = alloca i8*, align 4
root   %arrayidx21 = getelementptr inbounds i8, i8* %16, i32 %add20, !dbg !263 -> 0x82723a0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx21 = getelementptr inbounds i8, i8* %16, i32 %add20, !dbg !263 -> 0x82723a0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx21 = getelementptr inbounds i8, i8* %16, i32 %add20, !dbg !263 -> 0x82723a0
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %arrayidx21 = getelementptr inbounds i8, i8* %16, i32 %add20, !dbg !263 -> 0x82723a0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ecd58
the parent   %output.addr = alloca i8*, align 4 -> 0x82ecd58
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ecd58
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ecd58
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x82ecd58
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %42 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f22c8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> 0x82f2340
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %45 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f26f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> 0x82f2770
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %48 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2b28
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> 0x82f2ba0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %51 = load i8*, i8** %output.addr, align 4, !dbg !304 -> 0x82f2ee8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> 0x82f2f60
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %54 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f33d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> 0x82f3450
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %57 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3808
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> 0x82f3880
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %60 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3c38
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> 0x82f3cb0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %63 = load i8*, i8** %output.addr, align 4, !dbg !305 -> 0x82f3ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> 0x82f4070
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %66 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4518
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> 0x82f4590
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %69 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4948
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> 0x82f49c0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %72 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f4d78
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> 0x82f4df0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %75 = load i8*, i8** %output.addr, align 4, !dbg !306 -> 0x82f5138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> 0x82f51b0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %78 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5658
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> 0x82f56d0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %81 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5a88
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> 0x82f5b00
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %84 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f5eb8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> 0x82f5f30
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %87 = load i8*, i8** %output.addr, align 4, !dbg !307 -> 0x82f6278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> 0x82f62f0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %90 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6798
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> 0x82f6810
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %93 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6bc8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> 0x82f6c40
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %96 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f6ff8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> 0x82f7070
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %99 = load i8*, i8** %output.addr, align 4, !dbg !308 -> 0x82f73b8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> 0x82f7430
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %102 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f78d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> 0x82f7950
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %105 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f7d08
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> 0x82f7d80
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %108 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f8138
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> 0x82f81b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %111 = load i8*, i8** %output.addr, align 4, !dbg !309 -> 0x82f84f8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> 0x82f8570
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %114 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8a18
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> 0x82f8a90
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %117 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f8e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> 0x82f8ec0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %120 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> 0x82f92f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %123 = load i8*, i8** %output.addr, align 4, !dbg !310 -> 0x82f9638
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> 0x82f96b0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %128 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82f9e48
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> 0x82f9ec0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %131 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa278
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> 0x82fa2f0
it->second == NULL
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %134 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82fa6a8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> 0x82fa720
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %137 = load i8*, i8** %output.addr, align 4, !dbg !314 -> 0x82faa68
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> 0x82faae0
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %input.addr = alloca i8*, align 4 -> 0x82ff628
the parent   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %input.addr = alloca i8*, align 4 -> 0x82ff628
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
the parent   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x82ff6e8
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %1 = load i8*, i8** %input.addr, align 4, !dbg !252 -> 0x8300248
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %1 = load i8*, i8** %input.addr, align 4, !dbg !252 -> 0x8300248
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %3 = load i8*, i8** %output.addr, align 4, !dbg !259 -> 0x83006e8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %3 = load i8*, i8** %output.addr, align 4, !dbg !259 -> 0x83006e8
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %3 = load i8*, i8** %output.addr, align 4, !dbg !259 -> 0x83006e8
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* %input -> 0x83010c0
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x8301110
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root i8* %output -> 0x8301110
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %input.addr = alloca i8*, align 4 -> 0x83015d8
the parent   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root   %input.addr = alloca i8*, align 4 -> 0x83015d8
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %output.addr = alloca i8*, align 4 -> 0x8301698
the parent   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root   %output.addr = alloca i8*, align 4 -> 0x8301698
 added to senVarSet!!
with the same root   %input.addr = alloca i8*, align 4
root   %0 = load i8*, i8** %input.addr, align 4, !dbg !242 -> 0x8301958
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root   %0 = load i8*, i8** %input.addr, align 4, !dbg !242 -> 0x8301958
 added to senVarSet!!
with the same root   %output.addr = alloca i8*, align 4
root   %2 = load i8*, i8** %output.addr, align 4, !dbg !244 -> 0x8301a88
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %2 = load i8*, i8** %output.addr, align 4, !dbg !244 -> 0x8301a88
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root   %2 = load i8*, i8** %output.addr, align 4, !dbg !244 -> 0x8301a88
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1) -> 0x8308d08
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2) -> 0x8308d88
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3) -> 0x8308e08
 added to senVarSet!!
with the same root @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
root i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4) -> 0x8308e88
 added to senVarSet!!
with the same root   %unlock_count = alloca i32, align 4
root   %unlock_count = alloca i32, align 4 -> 0x830a788
the parent   %unlock_count = alloca i32, align 4 -> 0x830a788
 added to senVarSet!!
with the same root   %unlock_count = alloca i32, align 4
root   %unlock_count1 = bitcast i32* %unlock_count to i8*, !dbg !244 -> 0x830af58
 added to senVarSet!!
with the same root @key = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @key, i32 0, i32 %4, !dbg !290 -> 0x830cf68
 added to senVarSet!!
with the same root @key_in = internal global [32 x i8] zeroinitializer, align 1
root   %arrayidx11 = getelementptr inbounds [32 x i8], [32 x i8]* @key_in, i32 0, i32 %6, !dbg !292 -> 0x830d188
it->second == NULL
it->second == NULL
it->second == NULL
it->second == NULL
Global Variable: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 offset: 8
Global Variable: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 offset: 12
Global Variable: @key = internal global [32 x i8] zeroinitializer, align 1 offset: 44
Global Variable: @key_in = internal global [32 x i8] zeroinitializer, align 1 offset: 76
Local Variable:   %unlock_count = alloca i32, align 4 offset: 4
global_variable_size: 76
local_varialbe_size: 4
total_monitored_memory_size: 80
RootSenvar: unlock_count ID: 1
RootSenvar: PinRxBuffer ID: 2
RootSenvar: LockRxBuffer ID: 3
RootSenvar: key ID: 4
RootSenvar: key_in ID: 5
senVarSet : 
RootSenvar: unlock_count ID: 1
RootSenvar: PinRxBuffer ID: 2
RootSenvar: LockRxBuffer ID: 3
RootSenvar: key ID: 4
RootSenvar: key_in ID: 5
NonRootSenVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0) ID: 2 senVarID_For_Tag: 2
NonRootSenVar:   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290 ID: 2 senVarID_For_Tag: 3
NonRootSenVar:   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306 ID: 2 senVarID_For_Tag: 4
NonRootSenVar: i8* %input ID: 2 senVarID_For_Tag: 5
NonRootSenVar: i8* %output ID: 4 senVarID_For_Tag: 6
NonRootSenVar: i8* %output ID: 5 senVarID_For_Tag: 6
NonRootSenVar: i8* %data ID: 2 senVarID_For_Tag: 7
NonRootSenVar: i8* %input ID: 2 senVarID_For_Tag: 8
NonRootSenVar: i8* %output ID: 4 senVarID_For_Tag: 9
NonRootSenVar: i8* %output ID: 5 senVarID_For_Tag: 9
NonRootSenVar:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 ID: 4 senVarID_For_Tag: 10
NonRootSenVar:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 ID: 5 senVarID_For_Tag: 10
NonRootSenVar:   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 ID: 4 senVarID_For_Tag: 11
NonRootSenVar:   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 ID: 5 senVarID_For_Tag: 11
NonRootSenVar:   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 ID: 4 senVarID_For_Tag: 12
NonRootSenVar:   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 ID: 5 senVarID_For_Tag: 12
NonRootSenVar:   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 ID: 4 senVarID_For_Tag: 13
NonRootSenVar:   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 ID: 5 senVarID_For_Tag: 13
NonRootSenVar:   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 ID: 4 senVarID_For_Tag: 14
NonRootSenVar:   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 ID: 5 senVarID_For_Tag: 14
NonRootSenVar:   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 ID: 4 senVarID_For_Tag: 15
NonRootSenVar:   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 ID: 5 senVarID_For_Tag: 15
NonRootSenVar:   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 ID: 4 senVarID_For_Tag: 16
NonRootSenVar:   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 ID: 5 senVarID_For_Tag: 16
NonRootSenVar:   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 ID: 4 senVarID_For_Tag: 17
NonRootSenVar:   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 ID: 5 senVarID_For_Tag: 17
NonRootSenVar:   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 ID: 4 senVarID_For_Tag: 18
NonRootSenVar:   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 ID: 5 senVarID_For_Tag: 18
NonRootSenVar:   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 ID: 4 senVarID_For_Tag: 19
NonRootSenVar:   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 ID: 5 senVarID_For_Tag: 19
NonRootSenVar:   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 ID: 4 senVarID_For_Tag: 20
NonRootSenVar:   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 ID: 5 senVarID_For_Tag: 20
NonRootSenVar:   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 ID: 4 senVarID_For_Tag: 21
NonRootSenVar:   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 ID: 5 senVarID_For_Tag: 21
NonRootSenVar:   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 ID: 4 senVarID_For_Tag: 22
NonRootSenVar:   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 ID: 5 senVarID_For_Tag: 22
NonRootSenVar:   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 ID: 4 senVarID_For_Tag: 23
NonRootSenVar:   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 ID: 5 senVarID_For_Tag: 23
NonRootSenVar:   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 ID: 4 senVarID_For_Tag: 24
NonRootSenVar:   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 ID: 5 senVarID_For_Tag: 24
NonRootSenVar:   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 ID: 4 senVarID_For_Tag: 25
NonRootSenVar:   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 ID: 5 senVarID_For_Tag: 25
NonRootSenVar:   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 ID: 4 senVarID_For_Tag: 26
NonRootSenVar:   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 ID: 5 senVarID_For_Tag: 26
NonRootSenVar:   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 ID: 4 senVarID_For_Tag: 27
NonRootSenVar:   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 ID: 5 senVarID_For_Tag: 27
NonRootSenVar:   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 ID: 4 senVarID_For_Tag: 28
NonRootSenVar:   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 ID: 5 senVarID_For_Tag: 28
NonRootSenVar:   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 ID: 4 senVarID_For_Tag: 29
NonRootSenVar:   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 ID: 5 senVarID_For_Tag: 29
NonRootSenVar:   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 ID: 4 senVarID_For_Tag: 30
NonRootSenVar:   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 ID: 5 senVarID_For_Tag: 30
NonRootSenVar:   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 ID: 4 senVarID_For_Tag: 31
NonRootSenVar:   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 ID: 5 senVarID_For_Tag: 31
NonRootSenVar:   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 ID: 4 senVarID_For_Tag: 32
NonRootSenVar:   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 ID: 5 senVarID_For_Tag: 32
NonRootSenVar:   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 ID: 4 senVarID_For_Tag: 33
NonRootSenVar:   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 ID: 5 senVarID_For_Tag: 33
NonRootSenVar:   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 ID: 4 senVarID_For_Tag: 34
NonRootSenVar:   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 ID: 5 senVarID_For_Tag: 34
NonRootSenVar:   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 ID: 4 senVarID_For_Tag: 35
NonRootSenVar:   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 ID: 5 senVarID_For_Tag: 35
NonRootSenVar:   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 ID: 4 senVarID_For_Tag: 36
NonRootSenVar:   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 ID: 5 senVarID_For_Tag: 36
NonRootSenVar:   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 ID: 4 senVarID_For_Tag: 37
NonRootSenVar:   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 ID: 5 senVarID_For_Tag: 37
NonRootSenVar:   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 ID: 4 senVarID_For_Tag: 38
NonRootSenVar:   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 ID: 5 senVarID_For_Tag: 38
NonRootSenVar:   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 ID: 4 senVarID_For_Tag: 39
NonRootSenVar:   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 ID: 5 senVarID_For_Tag: 39
NonRootSenVar:   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 ID: 4 senVarID_For_Tag: 40
NonRootSenVar:   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 ID: 5 senVarID_For_Tag: 40
NonRootSenVar:   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 ID: 4 senVarID_For_Tag: 41
NonRootSenVar:   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 ID: 5 senVarID_For_Tag: 41
NonRootSenVar: i8* %input ID: 2 senVarID_For_Tag: 42
NonRootSenVar: i8* %output ID: 4 senVarID_For_Tag: 43
NonRootSenVar: i8* %output ID: 5 senVarID_For_Tag: 43
NonRootSenVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1) ID: 2 senVarID_For_Tag: 44
NonRootSenVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2) ID: 2 senVarID_For_Tag: 45
NonRootSenVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3) ID: 2 senVarID_For_Tag: 46
NonRootSenVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4) ID: 2 senVarID_For_Tag: 47
RootSenVar:   %unlock_count = alloca i32, align 4 ID: 1 senVarID_For_Tag: 48
RootSenVar: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 ID: 2 senVarID_For_Tag: 49
RootSenVar: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 ID: 3 senVarID_For_Tag: 50
RootSenVar: @key = internal global [32 x i8] zeroinitializer, align 1 ID: 4 senVarID_For_Tag: 51
RootSenVar: @key_in = internal global [32 x i8] zeroinitializer, align 1 ID: 5 senVarID_For_Tag: 52
Size: 51
sensitive variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0) : 
sensitive variable:   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290 : add.ptr22
sensitive variable:   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306 : add.ptr30
sensitive variable: i8* %input : input
sensitive variable: i8* %output : output
sensitive variable: i8* %data : data
sensitive variable: i8* %input : input
sensitive variable: i8* %output : output
sensitive variable:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 : arrayidx70
sensitive variable:   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 : arrayidx75
sensitive variable:   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 : arrayidx80
sensitive variable:   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 : arrayidx84
sensitive variable:   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 : arrayidx91
sensitive variable:   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 : arrayidx96
sensitive variable:   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 : arrayidx101
sensitive variable:   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 : arrayidx105
sensitive variable:   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 : arrayidx112
sensitive variable:   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 : arrayidx117
sensitive variable:   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 : arrayidx122
sensitive variable:   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 : arrayidx126
sensitive variable:   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 : arrayidx133
sensitive variable:   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 : arrayidx138
sensitive variable:   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 : arrayidx143
sensitive variable:   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 : arrayidx147
sensitive variable:   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 : arrayidx154
sensitive variable:   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 : arrayidx159
sensitive variable:   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 : arrayidx164
sensitive variable:   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 : arrayidx168
sensitive variable:   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 : arrayidx175
sensitive variable:   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 : arrayidx180
sensitive variable:   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 : arrayidx185
sensitive variable:   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 : arrayidx189
sensitive variable:   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 : arrayidx196
sensitive variable:   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 : arrayidx201
sensitive variable:   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 : arrayidx206
sensitive variable:   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 : arrayidx210
sensitive variable:   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 : arrayidx220
sensitive variable:   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 : arrayidx225
sensitive variable:   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 : arrayidx230
sensitive variable:   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 : arrayidx234
sensitive variable: i8* %input : input
sensitive variable: i8* %output : output
sensitive variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1) : 
sensitive variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2) : 
sensitive variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3) : 
sensitive variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4) : 
sensitive variable:   %unlock_count = alloca i32, align 4 : unlock_count
sensitive variable: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 : PinRxBuffer
sensitive variable: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 : LockRxBuffer
sensitive variable: @key = internal global [32 x i8] zeroinitializer, align 1 : key
sensitive variable: @key_in = internal global [32 x i8] zeroinitializer, align 1 : key_in
Size: 51
0: Use of the senseVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
 [Use-site]  %call7 = call i32 bitcast (void (i8*, i32, i8*, i32)* @mbedtls_sha256 to i32 (i8*, i32, i8*, i32)*)(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @key_in, i32 0, i32 0), i32 0) #5, !dbg !283
 [Use-site]  store i8 49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0), align 1, !dbg !278
 [Use-site]  store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0), align 1, !dbg !272
 [Use-site]{ i8*, i8*, i8*, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i32 38 }
1: Use of the senseVar:   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290
 [Use-site]  store i8* %add.ptr22, i8** %input.addr, align 4, !dbg !290
Corresponding function: mbedtls_sha256_update_ret
2: Use of the senseVar:   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306
 [Use-site]  store i8* %add.ptr30, i8** %input.addr, align 4, !dbg !306
Corresponding function: mbedtls_sha256_update_ret
3: Use of the senseVar: i8* %input
 [Use-site]  store i8* %input, i8** %input.addr, align 4
4: Use of the senseVar: i8* %output
 [Use-site]  store i8* %output, i8** %output.addr, align 4
5: Use of the senseVar: i8* %data
 [Use-site]  store i8* %data, i8** %data.addr, align 4
6: Use of the senseVar: i8* %input
 [Use-site]  store i8* %input, i8** %input.addr, align 4
7: Use of the senseVar: i8* %output
 [Use-site]  store i8* %output, i8** %output.addr, align 4
8: Use of the senseVar:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304
 [Use-site]  store i8 %conv69, i8* %arrayidx70, align 1, !dbg !304
   Obtained cast instruction:   %shr68 = lshr i32 %41, 24, !dbg !304
Corresponding function: mbedtls_sha256_finish_ret
9: Use of the senseVar:   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304
 [Use-site]  store i8 %conv74, i8* %arrayidx75, align 1, !dbg !304
   Obtained cast instruction:   %shr73 = lshr i32 %44, 16, !dbg !304
Corresponding function: mbedtls_sha256_finish_ret
10: Use of the senseVar:   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304
 [Use-site]  store i8 %conv79, i8* %arrayidx80, align 1, !dbg !304
   Obtained cast instruction:   %shr78 = lshr i32 %47, 8, !dbg !304
Corresponding function: mbedtls_sha256_finish_ret
11: Use of the senseVar:   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304
 [Use-site]  store i8 %conv83, i8* %arrayidx84, align 1, !dbg !304
   Obtained cast instruction:   %50 = load i32, i32* %arrayidx82, align 4, !dbg !304
Corresponding function: mbedtls_sha256_finish_ret
12: Use of the senseVar:   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305
 [Use-site]  store i8 %conv90, i8* %arrayidx91, align 1, !dbg !305
   Obtained cast instruction:   %shr89 = lshr i32 %53, 24, !dbg !305
Corresponding function: mbedtls_sha256_finish_ret
13: Use of the senseVar:   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305
 [Use-site]  store i8 %conv95, i8* %arrayidx96, align 1, !dbg !305
   Obtained cast instruction:   %shr94 = lshr i32 %56, 16, !dbg !305
Corresponding function: mbedtls_sha256_finish_ret
14: Use of the senseVar:   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305
 [Use-site]  store i8 %conv100, i8* %arrayidx101, align 1, !dbg !305
   Obtained cast instruction:   %shr99 = lshr i32 %59, 8, !dbg !305
Corresponding function: mbedtls_sha256_finish_ret
15: Use of the senseVar:   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305
 [Use-site]  store i8 %conv104, i8* %arrayidx105, align 1, !dbg !305
   Obtained cast instruction:   %62 = load i32, i32* %arrayidx103, align 4, !dbg !305
Corresponding function: mbedtls_sha256_finish_ret
16: Use of the senseVar:   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306
 [Use-site]  store i8 %conv111, i8* %arrayidx112, align 1, !dbg !306
   Obtained cast instruction:   %shr110 = lshr i32 %65, 24, !dbg !306
Corresponding function: mbedtls_sha256_finish_ret
17: Use of the senseVar:   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306
 [Use-site]  store i8 %conv116, i8* %arrayidx117, align 1, !dbg !306
   Obtained cast instruction:   %shr115 = lshr i32 %68, 16, !dbg !306
Corresponding function: mbedtls_sha256_finish_ret
18: Use of the senseVar:   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306
 [Use-site]  store i8 %conv121, i8* %arrayidx122, align 1, !dbg !306
   Obtained cast instruction:   %shr120 = lshr i32 %71, 8, !dbg !306
Corresponding function: mbedtls_sha256_finish_ret
19: Use of the senseVar:   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306
 [Use-site]  store i8 %conv125, i8* %arrayidx126, align 1, !dbg !306
   Obtained cast instruction:   %74 = load i32, i32* %arrayidx124, align 4, !dbg !306
Corresponding function: mbedtls_sha256_finish_ret
20: Use of the senseVar:   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307
 [Use-site]  store i8 %conv132, i8* %arrayidx133, align 1, !dbg !307
   Obtained cast instruction:   %shr131 = lshr i32 %77, 24, !dbg !307
Corresponding function: mbedtls_sha256_finish_ret
21: Use of the senseVar:   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307
 [Use-site]  store i8 %conv137, i8* %arrayidx138, align 1, !dbg !307
   Obtained cast instruction:   %shr136 = lshr i32 %80, 16, !dbg !307
Corresponding function: mbedtls_sha256_finish_ret
22: Use of the senseVar:   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307
 [Use-site]  store i8 %conv142, i8* %arrayidx143, align 1, !dbg !307
   Obtained cast instruction:   %shr141 = lshr i32 %83, 8, !dbg !307
Corresponding function: mbedtls_sha256_finish_ret
23: Use of the senseVar:   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307
 [Use-site]  store i8 %conv146, i8* %arrayidx147, align 1, !dbg !307
   Obtained cast instruction:   %86 = load i32, i32* %arrayidx145, align 4, !dbg !307
Corresponding function: mbedtls_sha256_finish_ret
24: Use of the senseVar:   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308
 [Use-site]  store i8 %conv153, i8* %arrayidx154, align 1, !dbg !308
   Obtained cast instruction:   %shr152 = lshr i32 %89, 24, !dbg !308
Corresponding function: mbedtls_sha256_finish_ret
25: Use of the senseVar:   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308
 [Use-site]  store i8 %conv158, i8* %arrayidx159, align 1, !dbg !308
   Obtained cast instruction:   %shr157 = lshr i32 %92, 16, !dbg !308
Corresponding function: mbedtls_sha256_finish_ret
26: Use of the senseVar:   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308
 [Use-site]  store i8 %conv163, i8* %arrayidx164, align 1, !dbg !308
   Obtained cast instruction:   %shr162 = lshr i32 %95, 8, !dbg !308
Corresponding function: mbedtls_sha256_finish_ret
27: Use of the senseVar:   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308
 [Use-site]  store i8 %conv167, i8* %arrayidx168, align 1, !dbg !308
   Obtained cast instruction:   %98 = load i32, i32* %arrayidx166, align 4, !dbg !308
Corresponding function: mbedtls_sha256_finish_ret
28: Use of the senseVar:   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309
 [Use-site]  store i8 %conv174, i8* %arrayidx175, align 1, !dbg !309
   Obtained cast instruction:   %shr173 = lshr i32 %101, 24, !dbg !309
Corresponding function: mbedtls_sha256_finish_ret
29: Use of the senseVar:   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309
 [Use-site]  store i8 %conv179, i8* %arrayidx180, align 1, !dbg !309
   Obtained cast instruction:   %shr178 = lshr i32 %104, 16, !dbg !309
Corresponding function: mbedtls_sha256_finish_ret
30: Use of the senseVar:   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309
 [Use-site]  store i8 %conv184, i8* %arrayidx185, align 1, !dbg !309
   Obtained cast instruction:   %shr183 = lshr i32 %107, 8, !dbg !309
Corresponding function: mbedtls_sha256_finish_ret
31: Use of the senseVar:   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309
 [Use-site]  store i8 %conv188, i8* %arrayidx189, align 1, !dbg !309
   Obtained cast instruction:   %110 = load i32, i32* %arrayidx187, align 4, !dbg !309
Corresponding function: mbedtls_sha256_finish_ret
32: Use of the senseVar:   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310
 [Use-site]  store i8 %conv195, i8* %arrayidx196, align 1, !dbg !310
   Obtained cast instruction:   %shr194 = lshr i32 %113, 24, !dbg !310
Corresponding function: mbedtls_sha256_finish_ret
33: Use of the senseVar:   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310
 [Use-site]  store i8 %conv200, i8* %arrayidx201, align 1, !dbg !310
   Obtained cast instruction:   %shr199 = lshr i32 %116, 16, !dbg !310
Corresponding function: mbedtls_sha256_finish_ret
34: Use of the senseVar:   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310
 [Use-site]  store i8 %conv205, i8* %arrayidx206, align 1, !dbg !310
   Obtained cast instruction:   %shr204 = lshr i32 %119, 8, !dbg !310
Corresponding function: mbedtls_sha256_finish_ret
35: Use of the senseVar:   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310
 [Use-site]  store i8 %conv209, i8* %arrayidx210, align 1, !dbg !310
   Obtained cast instruction:   %122 = load i32, i32* %arrayidx208, align 4, !dbg !310
Corresponding function: mbedtls_sha256_finish_ret
36: Use of the senseVar:   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314
 [Use-site]  store i8 %conv219, i8* %arrayidx220, align 1, !dbg !314
   Obtained cast instruction:   %shr218 = lshr i32 %127, 24, !dbg !314
Corresponding function: mbedtls_sha256_finish_ret
37: Use of the senseVar:   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314
 [Use-site]  store i8 %conv224, i8* %arrayidx225, align 1, !dbg !314
   Obtained cast instruction:   %shr223 = lshr i32 %130, 16, !dbg !314
Corresponding function: mbedtls_sha256_finish_ret
38: Use of the senseVar:   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314
 [Use-site]  store i8 %conv229, i8* %arrayidx230, align 1, !dbg !314
   Obtained cast instruction:   %shr228 = lshr i32 %133, 8, !dbg !314
Corresponding function: mbedtls_sha256_finish_ret
39: Use of the senseVar:   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314
 [Use-site]  store i8 %conv233, i8* %arrayidx234, align 1, !dbg !314
   Obtained cast instruction:   %136 = load i32, i32* %arrayidx232, align 4, !dbg !314
Corresponding function: mbedtls_sha256_finish_ret
40: Use of the senseVar: i8* %input
 [Use-site]  store i8* %input, i8** %input.addr, align 4
41: Use of the senseVar: i8* %output
 [Use-site]  store i8* %output, i8** %output.addr, align 4
42: Use of the senseVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1)
 [Use-site]  store i8 57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1), align 1, !dbg !279
 [Use-site]  store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1), align 1, !dbg !273
43: Use of the senseVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2)
 [Use-site]  store i8 57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2), align 1, !dbg !280
 [Use-site]  store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2), align 1, !dbg !274
44: Use of the senseVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3)
 [Use-site]  store i8 53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3), align 1, !dbg !281
 [Use-site]  store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3), align 1, !dbg !275
45: Use of the senseVar: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4)
 [Use-site]  store i8 53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4), align 1, !dbg !282
 [Use-site]  store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4), align 1, !dbg !276
46: Use of the senseVar:   %unlock_count = alloca i32, align 4
 [Use-site]  %11 = load i32, i32* %unlock_count, align 4, !dbg !303
 [Use-site]  store i32 %inc20, i32* %unlock_count, align 4, !dbg !301
 [Use-site]  %10 = load i32, i32* %unlock_count, align 4, !dbg !301
 [Use-site]  store i32 0, i32* %unlock_count, align 4, !dbg !245
 [Use-site]  %unlock_count1 = bitcast i32* %unlock_count to i8*, !dbg !244
Corresponding function: main_logic
47: Use of the senseVar: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
 [Use-site]i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4)
 [Use-site]i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3)
 [Use-site]i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2)
 [Use-site]i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1)
 [Use-site]i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
48: Use of the senseVar: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1
 [Use-site]i8* getelementptr inbounds ([2 x i8], [2 x i8]* @LockRxBuffer, i32 0, i32 0)
49: Use of the senseVar: @key = internal global [32 x i8] zeroinitializer, align 1
 [Use-site]  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* @key, i32 0, i32 %4, !dbg !290
 [Use-site]i8* getelementptr inbounds ([32 x i8], [32 x i8]* @key, i32 0, i32 0)
50: Use of the senseVar: @key_in = internal global [32 x i8] zeroinitializer, align 1
 [Use-site]  %arrayidx11 = getelementptr inbounds [32 x i8], [32 x i8]* @key_in, i32 0, i32 %6, !dbg !292
 [Use-site]i8* getelementptr inbounds ([32 x i8], [32 x i8]* @key_in, i32 0, i32 0)
After the CategorizedSenVars:-------------------
Type: 2 senVarName: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 -> PinRxBuffer
Type: 2 senVarName: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 -> LockRxBuffer
Type: 2 senVarName: @key = internal global [32 x i8] zeroinitializer, align 1 -> key
Type: 2 senVarName: @key_in = internal global [32 x i8] zeroinitializer, align 1 -> key_in
Type: 3 senVarName: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0) -> 
Type: 3 senVarName:   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290 -> add.ptr22
Type: 3 senVarName:   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306 -> add.ptr30
Type: 3 senVarName: i8* %input -> input
Type: 3 senVarName: i8* %output -> output
Type: 3 senVarName: i8* %data -> data
Type: 3 senVarName: i8* %input -> input
Type: 3 senVarName: i8* %output -> output
Type: 3 senVarName:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 -> arrayidx70
Type: 3 senVarName:   %arrayidx75 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !304 -> arrayidx75
Type: 3 senVarName:   %arrayidx80 = getelementptr inbounds i8, i8* %48, i32 2, !dbg !304 -> arrayidx80
Type: 3 senVarName:   %arrayidx84 = getelementptr inbounds i8, i8* %51, i32 3, !dbg !304 -> arrayidx84
Type: 3 senVarName:   %arrayidx91 = getelementptr inbounds i8, i8* %54, i32 4, !dbg !305 -> arrayidx91
Type: 3 senVarName:   %arrayidx96 = getelementptr inbounds i8, i8* %57, i32 5, !dbg !305 -> arrayidx96
Type: 3 senVarName:   %arrayidx101 = getelementptr inbounds i8, i8* %60, i32 6, !dbg !305 -> arrayidx101
Type: 3 senVarName:   %arrayidx105 = getelementptr inbounds i8, i8* %63, i32 7, !dbg !305 -> arrayidx105
Type: 3 senVarName:   %arrayidx112 = getelementptr inbounds i8, i8* %66, i32 8, !dbg !306 -> arrayidx112
Type: 3 senVarName:   %arrayidx117 = getelementptr inbounds i8, i8* %69, i32 9, !dbg !306 -> arrayidx117
Type: 3 senVarName:   %arrayidx122 = getelementptr inbounds i8, i8* %72, i32 10, !dbg !306 -> arrayidx122
Type: 3 senVarName:   %arrayidx126 = getelementptr inbounds i8, i8* %75, i32 11, !dbg !306 -> arrayidx126
Type: 3 senVarName:   %arrayidx133 = getelementptr inbounds i8, i8* %78, i32 12, !dbg !307 -> arrayidx133
Type: 3 senVarName:   %arrayidx138 = getelementptr inbounds i8, i8* %81, i32 13, !dbg !307 -> arrayidx138
Type: 3 senVarName:   %arrayidx143 = getelementptr inbounds i8, i8* %84, i32 14, !dbg !307 -> arrayidx143
Type: 3 senVarName:   %arrayidx147 = getelementptr inbounds i8, i8* %87, i32 15, !dbg !307 -> arrayidx147
Type: 3 senVarName:   %arrayidx154 = getelementptr inbounds i8, i8* %90, i32 16, !dbg !308 -> arrayidx154
Type: 3 senVarName:   %arrayidx159 = getelementptr inbounds i8, i8* %93, i32 17, !dbg !308 -> arrayidx159
Type: 3 senVarName:   %arrayidx164 = getelementptr inbounds i8, i8* %96, i32 18, !dbg !308 -> arrayidx164
Type: 3 senVarName:   %arrayidx168 = getelementptr inbounds i8, i8* %99, i32 19, !dbg !308 -> arrayidx168
Type: 3 senVarName:   %arrayidx175 = getelementptr inbounds i8, i8* %102, i32 20, !dbg !309 -> arrayidx175
Type: 3 senVarName:   %arrayidx180 = getelementptr inbounds i8, i8* %105, i32 21, !dbg !309 -> arrayidx180
Type: 3 senVarName:   %arrayidx185 = getelementptr inbounds i8, i8* %108, i32 22, !dbg !309 -> arrayidx185
Type: 3 senVarName:   %arrayidx189 = getelementptr inbounds i8, i8* %111, i32 23, !dbg !309 -> arrayidx189
Type: 3 senVarName:   %arrayidx196 = getelementptr inbounds i8, i8* %114, i32 24, !dbg !310 -> arrayidx196
Type: 3 senVarName:   %arrayidx201 = getelementptr inbounds i8, i8* %117, i32 25, !dbg !310 -> arrayidx201
Type: 3 senVarName:   %arrayidx206 = getelementptr inbounds i8, i8* %120, i32 26, !dbg !310 -> arrayidx206
Type: 3 senVarName:   %arrayidx210 = getelementptr inbounds i8, i8* %123, i32 27, !dbg !310 -> arrayidx210
Type: 3 senVarName:   %arrayidx220 = getelementptr inbounds i8, i8* %128, i32 28, !dbg !314 -> arrayidx220
Type: 3 senVarName:   %arrayidx225 = getelementptr inbounds i8, i8* %131, i32 29, !dbg !314 -> arrayidx225
Type: 3 senVarName:   %arrayidx230 = getelementptr inbounds i8, i8* %134, i32 30, !dbg !314 -> arrayidx230
Type: 3 senVarName:   %arrayidx234 = getelementptr inbounds i8, i8* %137, i32 31, !dbg !314 -> arrayidx234
Type: 3 senVarName: i8* %input -> input
Type: 3 senVarName: i8* %output -> output
Type: 3 senVarName: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1) -> 
Type: 3 senVarName: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2) -> 
Type: 3 senVarName: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3) -> 
Type: 3 senVarName: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4) -> 
Type: 3 senVarName:   %unlock_count = alloca i32, align 4 -> unlock_count
Variable: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1 to be instrumented
[DBG]SensitiveAddr: @PinRxBuffer = internal global [5 x i8] zeroinitializer, align 1
Variable: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1 to be instrumented
[DBG]SensitiveAddr: @LockRxBuffer = internal global [2 x i8] zeroinitializer, align 1
Variable: @key = internal global [32 x i8] zeroinitializer, align 1 to be instrumented
[DBG]SensitiveAddr: @key = internal global [32 x i8] zeroinitializer, align 1
Variable: @key_in = internal global [32 x i8] zeroinitializer, align 1 to be instrumented
[DBG]SensitiveAddr: @key_in = internal global [32 x i8] zeroinitializer, align 1
Variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0) to be instrumented
[DBG]SensitiveAddr: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
[Use of senVar]:   store i8 49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0), align 1, !dbg !278
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0)
[Use of senVar]:   store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 0), align 1, !dbg !272
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
Variable:   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290 to be instrumented
[DBG]SensitiveAddr:   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290
[DBG]pointer operand:   %input.addr = alloca i8*, align 4
[DBG]var:   %add.ptr22 = getelementptr inbounds i8, i8* %25, i32 %24, !dbg !290
Variable:   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306 to be instrumented
[DBG]SensitiveAddr:   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306
[DBG]pointer operand:   %input.addr = alloca i8*, align 4
[DBG]var:   %add.ptr30 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !306
Variable: i8* %input to be instrumented
[DBG]SensitiveAddr: i8* %input
[DBG]pointer operand:   %input.addr = alloca i8*, align 4
[DBG]var: i8* %input
Variable: i8* %output to be instrumented
[DBG]SensitiveAddr: i8* %output
[DBG]pointer operand:   %output.addr = alloca i8*, align 4
[DBG]var: i8* %output
Variable: i8* %data to be instrumented
[DBG]SensitiveAddr: i8* %data
[DBG]pointer operand:   %data.addr = alloca i8*, align 4
[DBG]var: i8* %data
Variable: i8* %input to be instrumented
[DBG]SensitiveAddr: i8* %input
[DBG]pointer operand:   %input.addr = alloca i8*, align 4
[DBG]var: i8* %input
Variable: i8* %output to be instrumented
[DBG]SensitiveAddr: i8* %output
[DBG]pointer operand:   %output.addr = alloca i8*, align 4
[DBG]var: i8* %output
Variable:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304 to be instrumented
[DBG]SensitiveAddr:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304
[DBG]pointer operand:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304
[DBG]var:   %arrayidx70 = getelementptr inbounds i8, i8* %42, i32 0, !dbg !304
[Use of senVar]:   store i8 %conv69, i8* %arrayidx70, align 1, !dbg !304
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx75 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !304 to be instrumented
[DBG]SensitiveAddr:   %arrayidx75 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !304
[DBG]pointer operand:   %arrayidx75 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !304
[DBG]var:   %arrayidx75 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !304
[Use of senVar]:   store i8 %conv74, i8* %arrayidx75, align 1, !dbg !304
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx80 = getelementptr inbounds i8, i8* %50, i32 2, !dbg !304 to be instrumented
[DBG]SensitiveAddr:   %arrayidx80 = getelementptr inbounds i8, i8* %50, i32 2, !dbg !304
[DBG]pointer operand:   %arrayidx80 = getelementptr inbounds i8, i8* %50, i32 2, !dbg !304
[DBG]var:   %arrayidx80 = getelementptr inbounds i8, i8* %50, i32 2, !dbg !304
[Use of senVar]:   store i8 %conv79, i8* %arrayidx80, align 1, !dbg !304
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx84 = getelementptr inbounds i8, i8* %54, i32 3, !dbg !304 to be instrumented
[DBG]SensitiveAddr:   %arrayidx84 = getelementptr inbounds i8, i8* %54, i32 3, !dbg !304
[DBG]pointer operand:   %arrayidx84 = getelementptr inbounds i8, i8* %54, i32 3, !dbg !304
[DBG]var:   %arrayidx84 = getelementptr inbounds i8, i8* %54, i32 3, !dbg !304
[Use of senVar]:   store i8 %conv83, i8* %arrayidx84, align 1, !dbg !304
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx91 = getelementptr inbounds i8, i8* %58, i32 4, !dbg !305 to be instrumented
[DBG]SensitiveAddr:   %arrayidx91 = getelementptr inbounds i8, i8* %58, i32 4, !dbg !305
[DBG]pointer operand:   %arrayidx91 = getelementptr inbounds i8, i8* %58, i32 4, !dbg !305
[DBG]var:   %arrayidx91 = getelementptr inbounds i8, i8* %58, i32 4, !dbg !305
[Use of senVar]:   store i8 %conv90, i8* %arrayidx91, align 1, !dbg !305
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx96 = getelementptr inbounds i8, i8* %62, i32 5, !dbg !305 to be instrumented
[DBG]SensitiveAddr:   %arrayidx96 = getelementptr inbounds i8, i8* %62, i32 5, !dbg !305
[DBG]pointer operand:   %arrayidx96 = getelementptr inbounds i8, i8* %62, i32 5, !dbg !305
[DBG]var:   %arrayidx96 = getelementptr inbounds i8, i8* %62, i32 5, !dbg !305
[Use of senVar]:   store i8 %conv95, i8* %arrayidx96, align 1, !dbg !305
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx101 = getelementptr inbounds i8, i8* %66, i32 6, !dbg !305 to be instrumented
[DBG]SensitiveAddr:   %arrayidx101 = getelementptr inbounds i8, i8* %66, i32 6, !dbg !305
[DBG]pointer operand:   %arrayidx101 = getelementptr inbounds i8, i8* %66, i32 6, !dbg !305
[DBG]var:   %arrayidx101 = getelementptr inbounds i8, i8* %66, i32 6, !dbg !305
[Use of senVar]:   store i8 %conv100, i8* %arrayidx101, align 1, !dbg !305
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx105 = getelementptr inbounds i8, i8* %70, i32 7, !dbg !305 to be instrumented
[DBG]SensitiveAddr:   %arrayidx105 = getelementptr inbounds i8, i8* %70, i32 7, !dbg !305
[DBG]pointer operand:   %arrayidx105 = getelementptr inbounds i8, i8* %70, i32 7, !dbg !305
[DBG]var:   %arrayidx105 = getelementptr inbounds i8, i8* %70, i32 7, !dbg !305
[Use of senVar]:   store i8 %conv104, i8* %arrayidx105, align 1, !dbg !305
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx112 = getelementptr inbounds i8, i8* %74, i32 8, !dbg !306 to be instrumented
[DBG]SensitiveAddr:   %arrayidx112 = getelementptr inbounds i8, i8* %74, i32 8, !dbg !306
[DBG]pointer operand:   %arrayidx112 = getelementptr inbounds i8, i8* %74, i32 8, !dbg !306
[DBG]var:   %arrayidx112 = getelementptr inbounds i8, i8* %74, i32 8, !dbg !306
[Use of senVar]:   store i8 %conv111, i8* %arrayidx112, align 1, !dbg !306
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx117 = getelementptr inbounds i8, i8* %78, i32 9, !dbg !306 to be instrumented
[DBG]SensitiveAddr:   %arrayidx117 = getelementptr inbounds i8, i8* %78, i32 9, !dbg !306
[DBG]pointer operand:   %arrayidx117 = getelementptr inbounds i8, i8* %78, i32 9, !dbg !306
[DBG]var:   %arrayidx117 = getelementptr inbounds i8, i8* %78, i32 9, !dbg !306
[Use of senVar]:   store i8 %conv116, i8* %arrayidx117, align 1, !dbg !306
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx122 = getelementptr inbounds i8, i8* %82, i32 10, !dbg !306 to be instrumented
[DBG]SensitiveAddr:   %arrayidx122 = getelementptr inbounds i8, i8* %82, i32 10, !dbg !306
[DBG]pointer operand:   %arrayidx122 = getelementptr inbounds i8, i8* %82, i32 10, !dbg !306
[DBG]var:   %arrayidx122 = getelementptr inbounds i8, i8* %82, i32 10, !dbg !306
[Use of senVar]:   store i8 %conv121, i8* %arrayidx122, align 1, !dbg !306
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx126 = getelementptr inbounds i8, i8* %86, i32 11, !dbg !306 to be instrumented
[DBG]SensitiveAddr:   %arrayidx126 = getelementptr inbounds i8, i8* %86, i32 11, !dbg !306
[DBG]pointer operand:   %arrayidx126 = getelementptr inbounds i8, i8* %86, i32 11, !dbg !306
[DBG]var:   %arrayidx126 = getelementptr inbounds i8, i8* %86, i32 11, !dbg !306
[Use of senVar]:   store i8 %conv125, i8* %arrayidx126, align 1, !dbg !306
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx133 = getelementptr inbounds i8, i8* %90, i32 12, !dbg !307 to be instrumented
[DBG]SensitiveAddr:   %arrayidx133 = getelementptr inbounds i8, i8* %90, i32 12, !dbg !307
[DBG]pointer operand:   %arrayidx133 = getelementptr inbounds i8, i8* %90, i32 12, !dbg !307
[DBG]var:   %arrayidx133 = getelementptr inbounds i8, i8* %90, i32 12, !dbg !307
[Use of senVar]:   store i8 %conv132, i8* %arrayidx133, align 1, !dbg !307
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx138 = getelementptr inbounds i8, i8* %94, i32 13, !dbg !307 to be instrumented
[DBG]SensitiveAddr:   %arrayidx138 = getelementptr inbounds i8, i8* %94, i32 13, !dbg !307
[DBG]pointer operand:   %arrayidx138 = getelementptr inbounds i8, i8* %94, i32 13, !dbg !307
[DBG]var:   %arrayidx138 = getelementptr inbounds i8, i8* %94, i32 13, !dbg !307
[Use of senVar]:   store i8 %conv137, i8* %arrayidx138, align 1, !dbg !307
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx143 = getelementptr inbounds i8, i8* %98, i32 14, !dbg !307 to be instrumented
[DBG]SensitiveAddr:   %arrayidx143 = getelementptr inbounds i8, i8* %98, i32 14, !dbg !307
[DBG]pointer operand:   %arrayidx143 = getelementptr inbounds i8, i8* %98, i32 14, !dbg !307
[DBG]var:   %arrayidx143 = getelementptr inbounds i8, i8* %98, i32 14, !dbg !307
[Use of senVar]:   store i8 %conv142, i8* %arrayidx143, align 1, !dbg !307
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx147 = getelementptr inbounds i8, i8* %102, i32 15, !dbg !307 to be instrumented
[DBG]SensitiveAddr:   %arrayidx147 = getelementptr inbounds i8, i8* %102, i32 15, !dbg !307
[DBG]pointer operand:   %arrayidx147 = getelementptr inbounds i8, i8* %102, i32 15, !dbg !307
[DBG]var:   %arrayidx147 = getelementptr inbounds i8, i8* %102, i32 15, !dbg !307
[Use of senVar]:   store i8 %conv146, i8* %arrayidx147, align 1, !dbg !307
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx154 = getelementptr inbounds i8, i8* %106, i32 16, !dbg !308 to be instrumented
[DBG]SensitiveAddr:   %arrayidx154 = getelementptr inbounds i8, i8* %106, i32 16, !dbg !308
[DBG]pointer operand:   %arrayidx154 = getelementptr inbounds i8, i8* %106, i32 16, !dbg !308
[DBG]var:   %arrayidx154 = getelementptr inbounds i8, i8* %106, i32 16, !dbg !308
[Use of senVar]:   store i8 %conv153, i8* %arrayidx154, align 1, !dbg !308
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx159 = getelementptr inbounds i8, i8* %110, i32 17, !dbg !308 to be instrumented
[DBG]SensitiveAddr:   %arrayidx159 = getelementptr inbounds i8, i8* %110, i32 17, !dbg !308
[DBG]pointer operand:   %arrayidx159 = getelementptr inbounds i8, i8* %110, i32 17, !dbg !308
[DBG]var:   %arrayidx159 = getelementptr inbounds i8, i8* %110, i32 17, !dbg !308
[Use of senVar]:   store i8 %conv158, i8* %arrayidx159, align 1, !dbg !308
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx164 = getelementptr inbounds i8, i8* %114, i32 18, !dbg !308 to be instrumented
[DBG]SensitiveAddr:   %arrayidx164 = getelementptr inbounds i8, i8* %114, i32 18, !dbg !308
[DBG]pointer operand:   %arrayidx164 = getelementptr inbounds i8, i8* %114, i32 18, !dbg !308
[DBG]var:   %arrayidx164 = getelementptr inbounds i8, i8* %114, i32 18, !dbg !308
[Use of senVar]:   store i8 %conv163, i8* %arrayidx164, align 1, !dbg !308
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx168 = getelementptr inbounds i8, i8* %118, i32 19, !dbg !308 to be instrumented
[DBG]SensitiveAddr:   %arrayidx168 = getelementptr inbounds i8, i8* %118, i32 19, !dbg !308
[DBG]pointer operand:   %arrayidx168 = getelementptr inbounds i8, i8* %118, i32 19, !dbg !308
[DBG]var:   %arrayidx168 = getelementptr inbounds i8, i8* %118, i32 19, !dbg !308
[Use of senVar]:   store i8 %conv167, i8* %arrayidx168, align 1, !dbg !308
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx175 = getelementptr inbounds i8, i8* %122, i32 20, !dbg !309 to be instrumented
[DBG]SensitiveAddr:   %arrayidx175 = getelementptr inbounds i8, i8* %122, i32 20, !dbg !309
[DBG]pointer operand:   %arrayidx175 = getelementptr inbounds i8, i8* %122, i32 20, !dbg !309
[DBG]var:   %arrayidx175 = getelementptr inbounds i8, i8* %122, i32 20, !dbg !309
[Use of senVar]:   store i8 %conv174, i8* %arrayidx175, align 1, !dbg !309
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx180 = getelementptr inbounds i8, i8* %126, i32 21, !dbg !309 to be instrumented
[DBG]SensitiveAddr:   %arrayidx180 = getelementptr inbounds i8, i8* %126, i32 21, !dbg !309
[DBG]pointer operand:   %arrayidx180 = getelementptr inbounds i8, i8* %126, i32 21, !dbg !309
[DBG]var:   %arrayidx180 = getelementptr inbounds i8, i8* %126, i32 21, !dbg !309
[Use of senVar]:   store i8 %conv179, i8* %arrayidx180, align 1, !dbg !309
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx185 = getelementptr inbounds i8, i8* %130, i32 22, !dbg !309 to be instrumented
[DBG]SensitiveAddr:   %arrayidx185 = getelementptr inbounds i8, i8* %130, i32 22, !dbg !309
[DBG]pointer operand:   %arrayidx185 = getelementptr inbounds i8, i8* %130, i32 22, !dbg !309
[DBG]var:   %arrayidx185 = getelementptr inbounds i8, i8* %130, i32 22, !dbg !309
[Use of senVar]:   store i8 %conv184, i8* %arrayidx185, align 1, !dbg !309
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx189 = getelementptr inbounds i8, i8* %134, i32 23, !dbg !309 to be instrumented
[DBG]SensitiveAddr:   %arrayidx189 = getelementptr inbounds i8, i8* %134, i32 23, !dbg !309
[DBG]pointer operand:   %arrayidx189 = getelementptr inbounds i8, i8* %134, i32 23, !dbg !309
[DBG]var:   %arrayidx189 = getelementptr inbounds i8, i8* %134, i32 23, !dbg !309
[Use of senVar]:   store i8 %conv188, i8* %arrayidx189, align 1, !dbg !309
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx196 = getelementptr inbounds i8, i8* %138, i32 24, !dbg !310 to be instrumented
[DBG]SensitiveAddr:   %arrayidx196 = getelementptr inbounds i8, i8* %138, i32 24, !dbg !310
[DBG]pointer operand:   %arrayidx196 = getelementptr inbounds i8, i8* %138, i32 24, !dbg !310
[DBG]var:   %arrayidx196 = getelementptr inbounds i8, i8* %138, i32 24, !dbg !310
[Use of senVar]:   store i8 %conv195, i8* %arrayidx196, align 1, !dbg !310
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx201 = getelementptr inbounds i8, i8* %142, i32 25, !dbg !310 to be instrumented
[DBG]SensitiveAddr:   %arrayidx201 = getelementptr inbounds i8, i8* %142, i32 25, !dbg !310
[DBG]pointer operand:   %arrayidx201 = getelementptr inbounds i8, i8* %142, i32 25, !dbg !310
[DBG]var:   %arrayidx201 = getelementptr inbounds i8, i8* %142, i32 25, !dbg !310
[Use of senVar]:   store i8 %conv200, i8* %arrayidx201, align 1, !dbg !310
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx206 = getelementptr inbounds i8, i8* %146, i32 26, !dbg !310 to be instrumented
[DBG]SensitiveAddr:   %arrayidx206 = getelementptr inbounds i8, i8* %146, i32 26, !dbg !310
[DBG]pointer operand:   %arrayidx206 = getelementptr inbounds i8, i8* %146, i32 26, !dbg !310
[DBG]var:   %arrayidx206 = getelementptr inbounds i8, i8* %146, i32 26, !dbg !310
[Use of senVar]:   store i8 %conv205, i8* %arrayidx206, align 1, !dbg !310
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx210 = getelementptr inbounds i8, i8* %150, i32 27, !dbg !310 to be instrumented
[DBG]SensitiveAddr:   %arrayidx210 = getelementptr inbounds i8, i8* %150, i32 27, !dbg !310
[DBG]pointer operand:   %arrayidx210 = getelementptr inbounds i8, i8* %150, i32 27, !dbg !310
[DBG]var:   %arrayidx210 = getelementptr inbounds i8, i8* %150, i32 27, !dbg !310
[Use of senVar]:   store i8 %conv209, i8* %arrayidx210, align 1, !dbg !310
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx220 = getelementptr inbounds i8, i8* %156, i32 28, !dbg !314 to be instrumented
[DBG]SensitiveAddr:   %arrayidx220 = getelementptr inbounds i8, i8* %156, i32 28, !dbg !314
[DBG]pointer operand:   %arrayidx220 = getelementptr inbounds i8, i8* %156, i32 28, !dbg !314
[DBG]var:   %arrayidx220 = getelementptr inbounds i8, i8* %156, i32 28, !dbg !314
[Use of senVar]:   store i8 %conv219, i8* %arrayidx220, align 1, !dbg !314
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx225 = getelementptr inbounds i8, i8* %160, i32 29, !dbg !314 to be instrumented
[DBG]SensitiveAddr:   %arrayidx225 = getelementptr inbounds i8, i8* %160, i32 29, !dbg !314
[DBG]pointer operand:   %arrayidx225 = getelementptr inbounds i8, i8* %160, i32 29, !dbg !314
[DBG]var:   %arrayidx225 = getelementptr inbounds i8, i8* %160, i32 29, !dbg !314
[Use of senVar]:   store i8 %conv224, i8* %arrayidx225, align 1, !dbg !314
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx230 = getelementptr inbounds i8, i8* %164, i32 30, !dbg !314 to be instrumented
[DBG]SensitiveAddr:   %arrayidx230 = getelementptr inbounds i8, i8* %164, i32 30, !dbg !314
[DBG]pointer operand:   %arrayidx230 = getelementptr inbounds i8, i8* %164, i32 30, !dbg !314
[DBG]var:   %arrayidx230 = getelementptr inbounds i8, i8* %164, i32 30, !dbg !314
[Use of senVar]:   store i8 %conv229, i8* %arrayidx230, align 1, !dbg !314
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable:   %arrayidx234 = getelementptr inbounds i8, i8* %168, i32 31, !dbg !314 to be instrumented
[DBG]SensitiveAddr:   %arrayidx234 = getelementptr inbounds i8, i8* %168, i32 31, !dbg !314
[DBG]pointer operand:   %arrayidx234 = getelementptr inbounds i8, i8* %168, i32 31, !dbg !314
[DBG]var:   %arrayidx234 = getelementptr inbounds i8, i8* %168, i32 31, !dbg !314
[Use of senVar]:   store i8 %conv233, i8* %arrayidx234, align 1, !dbg !314
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Variable: i8* %input to be instrumented
[DBG]SensitiveAddr: i8* %input
[DBG]pointer operand:   %input.addr = alloca i8*, align 4
[DBG]var: i8* %input
Variable: i8* %output to be instrumented
[DBG]SensitiveAddr: i8* %output
[DBG]pointer operand:   %output.addr = alloca i8*, align 4
[DBG]var: i8* %output
Variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1) to be instrumented
[DBG]SensitiveAddr: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1)
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1)
[Use of senVar]:   store i8 57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1), align 1, !dbg !279
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1)
[Use of senVar]:   store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 1), align 1, !dbg !273
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
Variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2) to be instrumented
[DBG]SensitiveAddr: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2)
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2)
[Use of senVar]:   store i8 57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2), align 1, !dbg !280
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2)
[Use of senVar]:   store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 2), align 1, !dbg !274
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
Variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3) to be instrumented
[DBG]SensitiveAddr: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3)
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3)
[Use of senVar]:   store i8 53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3), align 1, !dbg !281
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3)
[Use of senVar]:   store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 3), align 1, !dbg !275
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
Variable: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4) to be instrumented
[DBG]SensitiveAddr: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4)
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4)
[Use of senVar]:   store i8 53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4), align 1, !dbg !282
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
[DBG]pointer operand: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4)
[DBG]var: i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4)
[Use of senVar]:   store i8 48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @PinRxBuffer, i32 0, i32 4), align 1, !dbg !276
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[5 x i8]
Variable:   %unlock_count = alloca i32, align 4 to be instrumented
[DBG]SensitiveAddr:   %unlock_count = alloca i32, align 4
[DBG]pointer operand:   %unlock_count = alloca i32, align 4
[DBG]var:   %unlock_count = alloca i32, align 4
[Use of senVar]:   store i32 %inc20, i32* %unlock_count, align 4, !dbg !301
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
[DBG]pointer operand:   %unlock_count = alloca i32, align 4
[DBG]var:   %unlock_count = alloca i32, align 4
[Use of senVar]:   store i32 0, i32* %unlock_count, align 4, !dbg !245
sensitiveAddr: @sensitiveAddr = internal global i32 0, align 4
Function: main_logic
variable: unlock_count
not .addr
main_logic : first instruct  %retval = alloca i32, align 4

sensitiveStoreInstCount: 44
INLINEASM &"" [sideeffect] [mayload] [maystore] [attdialect], !418, debug-location !417; ../Drivers/CMSIS/Include/core_cm33.h:2131:5




!!!!!!!!!!!!!!!!!unknown INS size!!!!!!!!!!!!!


INLINEASM &"" [sideeffect] [mayload] [maystore] [attdialect], !429, debug-location !428; ../Drivers/CMSIS/Include/core_cm33.h:2133:5




!!!!!!!!!!!!!!!!!unknown INS size!!!!!!!!!!!!!


--------------------------------------------
recoginzed tagFunction!
TagFunction10

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction11

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction12

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction13

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction14

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction15

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction16

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction17

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction18

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction19

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction20

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction21

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction22

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction23

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction24

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction25

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction26

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction27

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction28

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction29

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction30

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction31

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction32

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction33

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction34

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction35

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction36

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction37

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction38

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction39

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction40

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction41

--------------------------------------------
INLINEASM &"nop\0A" [sideeffect] [attdialect], !2937, debug-location !2936; ./Core/Src/main.c:28:3




!!!!!!!!!!!!!!!!!unknown INS size!!!!!!!!!!!!!


INLINEASM &"bkpt\0A" [sideeffect] [attdialect], !2941, debug-location !2940; ./Core/Src/main.c:32:3




!!!!!!!!!!!!!!!!!unknown INS size!!!!!!!!!!!!!


--------------------------------------------
recoginzed tagFunction!
TagFunction4660

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction4660

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction4660

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction48

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction2

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction44

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction45

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction46

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction47

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction2

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction44

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction45

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction46

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction47

--------------------------------------------
--------------------------------------------
recoginzed tagFunction!
TagFunction48

--------------------------------------------
